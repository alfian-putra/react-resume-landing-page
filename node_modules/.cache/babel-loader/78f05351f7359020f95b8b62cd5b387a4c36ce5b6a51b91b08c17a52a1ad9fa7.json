{"ast":null,"code":"import { jsx as t, jsxs as n } from \"react/jsx-runtime\";\nimport { useState as r, useEffect as i, useRef as e, useCallback as o } from \"react\";\nvar a = function () {\n  function t() {}\n  return t.isString = function (t) {\n    return \"[object String]\" === Object.prototype.toString.call(t);\n  }, t.isNumber = function (t) {\n    return \"[object Number]\" === Object.prototype.toString.call(t);\n  }, t.getHSL = function (n, r, i) {\n    var e = function (n) {\n        return t.isNumber(n) ? n : n.minimum + r * (n.maximum - n.minimum) / i;\n      },\n      o = e(n.hue),\n      a = e(n.saturation),\n      l = e(n.level);\n    return \"hsl(\".concat(o, \", \").concat(a, \"%, \").concat(l, \"%)\");\n  }, t.getHeight = function (n) {\n    return t.isString(n) ? n : \"\".concat(n, \"px\");\n  }, t;\n}();\n!function (t, n) {\n  void 0 === n && (n = {});\n  var r = n.insertAt;\n  if (t && \"undefined\" != typeof document) {\n    var i = document.head || document.getElementsByTagName(\"head\")[0],\n      e = document.createElement(\"style\");\n    e.type = \"text/css\", \"top\" === r && i.firstChild ? i.insertBefore(e, i.firstChild) : i.appendChild(e), e.styleSheet ? e.styleSheet.cssText = t : e.appendChild(document.createTextNode(t));\n  }\n}(\":root {\\n  --skillBarTextColor: #ffffff;\\n  --skillBarBgColor: #eee;\\n  --skillBarTitleBgColor: #d35400;\\n  --skillBarBg: #e67e22;\\n}\\n\\n.skillbar {\\n  position:relative;\\n  display:block;\\n  margin-bottom:15px;\\n  width:100%;\\n  background: var(--skillBarBgColor);\\n  border-radius: 3px;\\n  -moz-border-radius:3px;\\n  -webkit-border-radius:3px;\\n  -webkit-transition:0.4s linear;\\n  -moz-transition:0.4s linear;\\n  -ms-transition:0.4s linear;\\n  -o-transition:0.4s linear;\\n  transition:0.4s linear;\\n  -webkit-transition-property:width, background-color;\\n  -moz-transition-property:width, background-color;\\n  -o-transition-property:width, background-color;\\n  transition-property:width, background-color;\\n}\\n\\n.skillbar-title {\\n  position:absolute;\\n  top:0;\\n  left:0;\\n  width:110px;\\n  font-weight:bold;\\n  font-size:13px;\\n  color: var(--skillBarTextColor);\\n  background: var(--skillBarTitleBgColor);\\n  -webkit-border-radius:3px 0 0 4px;\\n  -moz-border-radius:3px 0 0 3px;\\n  border-radius:3px 0 0 3px;\\n  height:inherit;\\n}\\n\\n.skillbar-title span {\\n  display:block;\\n  background:rgba(0, 0, 0, 0.1);\\n  padding:0 20px;\\n  height:inherit;\\n  line-height:inherit;\\n  -webkit-border-top-left-radius:3px;\\n  -webkit-border-bottom-left-radius:3px;\\n  -moz-border-radius-topleft:3px;\\n  -moz-border-radius-bottomleft:3px;\\n  border-top-left-radius:3px;\\n  border-bottom-left-radius:3px;\\n}\\n\\n.skillbar-bar {\\n  height:inherit;\\n  position:absolute;\\n  left:110px;\\n  background: var(--skillBarBg);\\n  border-radius: 0 3px 3px 0;\\n  -moz-border-radius: 0 3px 3px 0;\\n  -webkit-border-radius: 0 3px 3px 0;\\n}\\n\\n.skillbar-percent {\\n  position:absolute;\\n  right:10px;\\n  top:0;\\n  font-size:11px;\\n  line-height:inherit;\\n  color: var(--skillBarTextColor);\\n}\\n\\n.collapsed {\\n  width: 0% !important;\\n}\\n\");\nvar l = function (l) {\n  var s,\n    c = l.skills,\n    d = l.colors,\n    u = l.barBackground,\n    b = void 0 === u ? \"transparent\" : u,\n    p = l.offset,\n    h = void 0 === p ? \"25px\" : p,\n    g = l.height,\n    f = void 0 === g ? 35 : g,\n    m = l.symbol,\n    k = void 0 === m ? \"%\" : m,\n    x = l.symbolColor,\n    v = void 0 === x ? \"white\" : x,\n    y = l.animationDuration,\n    w = void 0 === y ? 3e3 : y,\n    B = l.animationDelay,\n    S = void 0 === B ? 1e3 : B,\n    C = l.animationThreshold,\n    T = void 0 === C ? .8 : C,\n    z = e(null),\n    N = r(!0),\n    H = N[0],\n    j = N[1],\n    O = function () {\n      var t = r(!0),\n        n = t[0],\n        e = t[1];\n      return i(function () {\n        e(!1);\n      }, []), n;\n    }();\n  s = function (t, n, e) {\n    var o = r(null),\n      a = o[0],\n      l = o[1];\n    return i(function () {\n      if (!e && t.current && \"function\" == typeof IntersectionObserver) {\n        var r = new IntersectionObserver(function (t) {\n          l(t[0]);\n        }, n);\n        return r.observe(t.current), function () {\n          l(null), r.disconnect();\n        };\n      }\n      return function () {};\n    }, [t.current, n.threshold, n.root, n.rootMargin]), a;\n  }(z, {\n    root: null,\n    rootMargin: h,\n    threshold: T\n  }, O), i(function () {\n    if (s && s.isIntersecting) {\n      var t = setTimeout(function () {\n        return j(!1);\n      }, S);\n      return function () {\n        return clearTimeout(t);\n      };\n    }\n  }, [s]);\n  var I = o(function (t, n) {\n      return t.color && t.color.bar && a.isString(t.color.bar) ? t.color.bar : d && d.bar ? a.isString(d.bar) ? d.bar : a.getHSL(d.bar, n, c.length) : \"\";\n    }, []),\n    L = o(function (t, n, r) {\n      return t.color && t.color.title && t.color.title[r] && a.isString(t.color.title[r]) ? t.color.title[r] : d && d.title && d.title[r] ? a.isString(d.title[r]) ? d.title[r] : a.getHSL(d.title[r], n, c.length) : \"\";\n    }, []);\n  return t(\"div\", {\n    \"data-testid\": \"skillbar/root\",\n    ref: z,\n    children: c.map(function (r, i) {\n      return n(\"div\", {\n        className: \"skillbar\",\n        \"data-testid\": \"skillbar/container\",\n        style: {\n          height: \"\".concat(a.getHeight(f)),\n          lineHeight: \"\".concat(a.getHeight(f)),\n          background: b\n        },\n        children: [t(\"div\", {\n          className: \"skillbar-title\",\n          \"data-testid\": \"skillbar/title\",\n          style: {\n            color: \"\".concat(L(r, i, \"text\")),\n            background: \"\".concat(L(r, i, \"background\"))\n          },\n          children: t(\"span\", {\n            children: r.type\n          })\n        }), t(\"div\", {\n          \"data-testid\": \"skillbar/bar\",\n          className: \"skillbar-bar \".concat(H ? \"collapsed\" : \"\"),\n          style: {\n            background: \"\".concat(I(r, i)),\n            width: \"calc((100% - 110px) * (\".concat(r.level, \" * 0.01))\"),\n            transition: \"width \".concat(w, \"ms ease-in-out\")\n          }\n        }), n(\"div\", {\n          className: \"skillbar-percent\",\n          \"data-testid\": \"skillbar/percent\",\n          style: {\n            color: v\n          },\n          children: [r.level, k]\n        })]\n      }, r.type);\n    })\n  });\n};\nexport { l as SkillBar, l as default };","map":{"version":3,"names":["a","t","isString","Object","prototype","toString","call","isNumber","getHSL","n","r","i","e","calculateStep","minimum","maximum","o","hue","saturation","l","level","concat","getHeight","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","SkillBar","s","c","skills","d","colors","u","barBackground","b","p","offset","h","g","height","f","m","symbol","k","x","symbolColor","v","y","animationDuration","w","B","animationDelay","S","C","animationThreshold","T","z","N","H","j","O","current","IntersectionObserver","observe","disconnect","threshold","root","rootMargin","isIntersecting","setTimeout","clearTimeout","I","color","bar","length","L","title","ref","children","map","className","style","lineHeight","background","width","transition","default"],"sources":["/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/react-skillbars/src/util/index.ts","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/style-inject/dist/style-inject.es.js","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/react-skillbars/src/util/hooks/useIsServer.tsx","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/react-skillbars/src/components/skillbar.tsx","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/react-skillbars/src/util/hooks/useIntersection.tsx"],"sourcesContent":["export class Utils {\n  public static isString = (value: unknown) =>\n    Object.prototype.toString.call(value) === '[object String]';\n\n  public static isNumber = (value: unknown) =>\n    Object.prototype.toString.call(value) === '[object Number]';\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public static getHSL = (container: any, index: number, length: number) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const calculateStep = function calculateStep(value: number | any) {\n      if (Utils.isNumber(value)) {\n        return value;\n      }\n      return value.minimum + (index * (value.maximum - value.minimum)) / length;\n    };\n\n    const hue = calculateStep(container.hue);\n    const sat = calculateStep(container.saturation);\n    const level = calculateStep(container.level);\n\n    return `hsl(${hue}, ${sat}%, ${level}%)`;\n  };\n\n  public static getHeight = (propHeight: number | string) =>\n    Utils.isString(propHeight) ? propHeight : `${propHeight}px`;\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { useEffect, useState } from 'react';\n\n/**\n * As `useEffect` is only called on the client, this will execute and set state to false only on client\n */\nexport const useIsServer = () => {\n  const [isServer, setIsServer] = useState(true);\n  useEffect(() => {\n    setIsServer(false);\n  }, []);\n  return isServer;\n};\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { Utils } from '../util';\nimport { useIntersection } from '../util/hooks/useIntersection';\nimport { SkillBarProps, SkillBarSkill } from './index';\nimport './skillbar.css';\nimport { useIsServer } from '../util/hooks/useIsServer';\n\nconst SkillBar: FC<SkillBarProps> = ({\n  skills,\n  colors,\n  barBackground = 'transparent',\n  offset = `25px`,\n  height = 35,\n  symbol = '%',\n  symbolColor = 'white',\n  animationDuration = 3000,\n  animationDelay = 1000,\n  animationThreshold = 0.8,\n}) => {\n  let intersection: IntersectionObserverEntry | null = null;\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  const isServer = useIsServer();\n\n  intersection = useIntersection(\n    ref,\n    {\n      root: null,\n      rootMargin: offset,\n      threshold: animationThreshold,\n    },\n    isServer\n  );\n\n  /**\n   * Based on IntersectionObserver API response, it sets with configurable timeout the animation trigger to show the bar\n   */\n  useEffect(() => {\n    if (intersection && intersection.isIntersecting) {\n      const timer = setTimeout(() => setIsCollapsed(false), animationDelay);\n      return () => clearTimeout(timer);\n    }\n  }, [intersection]);\n\n  /**\n   * Computes based on individual or global `colors` object the coloring of the bar\n   */\n  const getSkillBarColor = useCallback(\n    (skill: SkillBarSkill, index: number) => {\n      if (skill.color && skill.color.bar && Utils.isString(skill.color.bar)) {\n        return skill.color.bar;\n      } else if (colors && colors.bar) {\n        if (Utils.isString(colors.bar)) {\n          return colors.bar;\n        }\n        return Utils.getHSL(colors.bar, index, skills.length);\n      }\n      return '';\n    },\n    []\n  );\n\n  /**\n   * Computes based on individual or global `colors` object the coloring of the text\n   */\n  const getTitleColor = useCallback(\n    (skill: SkillBarSkill, index: number, entry: string) => {\n      if (\n        skill.color &&\n        skill.color.title &&\n        skill.color.title[entry] &&\n        Utils.isString(skill.color.title[entry])\n      ) {\n        return skill.color.title[entry];\n      } else if (colors && colors.title && colors.title[entry]) {\n        if (Utils.isString(colors.title[entry])) {\n          return colors.title[entry];\n        }\n        return Utils.getHSL(colors.title[entry], index, skills.length);\n      }\n      return '';\n    },\n    []\n  );\n\n  return (\n    <div data-testid={'skillbar/root'} ref={ref}>\n      {skills.map((skill, index) => (\n        <div\n          key={skill.type}\n          className=\"skillbar\"\n          data-testid={'skillbar/container'}\n          style={{\n            height: `${Utils.getHeight(height)}`,\n            lineHeight: `${Utils.getHeight(height)}`,\n            background: barBackground,\n          }}\n        >\n          <div\n            className=\"skillbar-title\"\n            data-testid={'skillbar/title'}\n            style={{\n              color: `${getTitleColor(skill, index, 'text')}`,\n              background: `${getTitleColor(skill, index, 'background')}`,\n            }}\n          >\n            <span>{skill.type}</span>\n          </div>\n          <div\n            data-testid={'skillbar/bar'}\n            className={`skillbar-bar ${isCollapsed ? 'collapsed' : ''}`}\n            style={{\n              background: `${getSkillBarColor(skill, index)}`,\n              width: `calc((100% - 110px) * (${skill.level} * 0.01))`,\n              transition: `width ${animationDuration}ms ease-in-out`,\n            }}\n          />\n          <div className=\"skillbar-percent\" data-testid={'skillbar/percent'}\n            style={{\n              color: symbolColor\n            }}>\n            {skill.level}\n            {symbol}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SkillBar;\n","import { RefObject, useEffect, useState } from 'react';\n\n/**\n * Hook used for checking whether provided component is in viewport or not based on configured thresholds\n * @param ref\n * @param options\n * @param isServer\n */\nexport const useIntersection = (\n  ref: RefObject<HTMLElement>,\n  options: IntersectionObserverInit,\n  isServer: boolean\n): IntersectionObserverEntry | null => {\n  const [intersectionObserverEntry, setIntersectionObserverEntry] =\n    useState<IntersectionObserverEntry | null>(null);\n\n  useEffect(() => {\n    if (\n      !isServer &&\n      ref.current &&\n      typeof IntersectionObserver === 'function'\n    ) {\n      const handler = (entries: IntersectionObserverEntry[]) => {\n        setIntersectionObserverEntry(entries[0]);\n      };\n\n      const observer = new IntersectionObserver(handler, options);\n      observer.observe(ref.current);\n\n      return () => {\n        setIntersectionObserverEntry(null);\n        observer.disconnect();\n      };\n    }\n    return () => {\n      return;\n    };\n  }, [ref.current, options.threshold, options.root, options.rootMargin]);\n\n  return intersectionObserverEntry;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}