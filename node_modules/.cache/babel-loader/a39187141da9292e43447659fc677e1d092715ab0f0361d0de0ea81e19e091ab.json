{"ast":null,"code":"import axios from 'axios';\nimport React__default, { forwardRef, useImperativeHandle, useState, useRef, useCallback, useEffect, createElement } from 'react';\nimport { AnimateSharedLayout, AnimatePresence, motion } from 'framer-motion';\nimport { ZoomIn, ZoomOut, Download, FullscreenExit, Fullscreen, InfoCircle, GridFill, Search, PauseCircleFill, PlayCircleFill, XLg } from 'react-bootstrap-icons';\nimport Magnifier from 'react-magnifier';\nimport { Portal } from 'react-portal';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport { saveAs } from 'file-saver';\nimport Div100vh from 'react-div-100vh';\nimport KeyHandler from 'react-key-handler';\nimport { useInterval } from 'usehooks-ts';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport YouTube from 'react-youtube';\nimport useResizeObserver from '@react-hook/resize-observer';\nimport exifr from 'exifr';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar styles = {\n  \"lightboxjs\": \"_30i9K\",\n  \"slideshowContainer\": \"_3kSzL\",\n  \"slideshowBtn\": \"_tCjNO\",\n  \"closeIcon\": \"_2IJEr\",\n  \"iconsHeader\": \"_2Yv4j\",\n  \"prev1\": \"_1lgEi\",\n  \"next1\": \"_DDceb\",\n  \"icon\": \"_2Vept\",\n  \"prevIcon\": \"_2gxOL\",\n  \"nextIcon\": \"_3gp2w\",\n  \"show\": \"_2crlL\",\n  \"displayHidden\": \"_34QvR\",\n  \"thumbnail\": \"_1R214\",\n  \"hoverShadow\": \"_3EuZy\",\n  \"thumbnails\": \"_3pfLz\",\n  \"thumbnailsWithCaption\": \"_Fp_rP\",\n  \"navigationDots\": \"_1jASN\",\n  \"imageSlide\": \"_22ETc\",\n  \"thumbnailsOuterContainer\": \"_-wN_b\",\n  \"hideControlsBar\": \"_2b4P7\",\n  \"slideshow_img\": \"_1yWyS\",\n  \"slideshowInnerContainer\": \"_1JRT_\",\n  \"videoThumbnailsOuterContainer\": \"_KbOLW\",\n  \"imgTitleContainer\": \"_1j-pZ\",\n  \"thumbnailsOuterContainer_metadata\": \"_1Odla\",\n  \"thumbnailsAndCaption\": \"_1nxK_\",\n  \"htmlVideoOuterContainer\": \"_z-jNd\",\n  \"caption\": \"_2jJU2\",\n  \"galleryImg\": \"_lY1R_\",\n  \"slideshowAnimContainer\": \"_wTR3b\",\n  \"fullScreenContainer\": \"_11N04\",\n  \"imageInnerContainer\": \"_20Hp6\",\n  \"magnifyWrapper\": \"_3PObS\",\n  \"slideshowInnerContainer_imgMetadata\": \"_29Kdn\",\n  \"slideshowInnerVideoContainer\": \"_1ni2w\",\n  \"slideshowInnerContainerThumbnails\": \"_GV0NM\",\n  \"lightboxContainer\": \"_3BNPD\",\n  \"slideshowAnimImg\": \"_j1nqC\",\n  \"controls\": \"_ABXHD\",\n  \"ytVideo\": \"_2eq8V\",\n  \"videoOuterContainer\": \"_1P3Wc\",\n  \"customVideoContainer\": \"_Aq8HC\",\n  \"customEmbedContainer\": \"_w68I8\",\n  \"videoIconsHeader\": \"_qtY0U\",\n  \"lightbox\": \"_3cxVN\",\n  \"imgTitle\": \"_2pA2G\",\n  \"slideshow_img_fullscreen\": \"_2yYOi\",\n  \"slideshowInnerContainerFullScreen\": \"_hWNoE\",\n  \"fullScreenLightboxImg\": \"_1ek8k\",\n  \"opacity-fade\": \"_2P48G\",\n  \"imageSliderThumbnails\": \"_1xBL9\",\n  \"slideshow_img_metadata\": \"_15MH_\",\n  \"prev1_metadata\": \"_3JYCS\",\n  \"hideControlsBarAndCaption\": \"_31Tcx\",\n  \"lightbox_img\": \"_3A0RO\",\n  \"light_icon\": \"_1kIQ4\",\n  \"dark_icon\": \"_1qbJe\",\n  \"light_header_icon\": \"_3DIHj\",\n  \"dark_header_icon\": \"_11aT5\",\n  \"magnifier-image\": \"_mdJQi\",\n  \"active\": \"_3sodH\",\n  \"inactiveThumbnailBorder\": \"_3bkUp\",\n  \"embla_thumbs\": \"_32vVi\",\n  \"htmlVideo\": \"_sqvn-\",\n  \"contain_img\": \"_21mY1\",\n  \"react-transform-component\": \"_3Id1-\",\n  \"loader\": \"_3qqrl\",\n  \"rotation\": \"_1hUzk\",\n  \"day_loader\": \"_1itZw\",\n  \"night_loader\": \"_2TI_i\",\n  \"closeButton\": \"_2kumA\",\n  \"closeButtonRounded\": \"_3aFDN\",\n  \"slideImageAndCaption\": \"_238y5\",\n  \"roundedBorder\": \"_2FvXV\",\n  \"maxWidthFull\": \"_oa5b0\",\n  \"maxWidthWithoutMagnifier\": \"_z-bHV\",\n  \"lightboxVideo\": \"_hGbhv\",\n  \"navigation-wrapper\": \"_1dVqh\",\n  \"dots\": \"_3MuXE\",\n  \"dot\": \"_3U2py\",\n  \"arrow\": \"_35l6Q\",\n  \"leftArrow\": \"_1I4Zg\",\n  \"rightArrow\": \"_1lqBv\",\n  \"arrow--disabled\": \"_37Xda\",\n  \"navDotsMargin\": \"_1LtID\",\n  \"inactiveThumbnailBorderImgSlider\": \"_2y9OU\",\n  \"ytVideoImgSlider\": \"_2oAIc\",\n  \"outerYTVideoImgSlider\": \"_2-c5L\",\n  \"imgSliderArrow\": \"_1Bey-\",\n  \"cursorPointer\": \"_3xuz3\",\n  \"lightboxjs_icon\": \"_1fpgA\",\n  \"embla\": \"_1cifY\",\n  \"embla__viewport\": \"_1mBUR\",\n  \"embla__container\": \"_Bqct9\",\n  \"embla__container_imgMetadata\": \"_39UN-\",\n  \"imgdrag\": \"_lqLcV\",\n  \"embla__slide\": \"_1eJNe\",\n  \"embla_thumbs__viewport\": \"_1tmVU\",\n  \"embla_thumbs__container\": \"_3-Y1e\",\n  \"embla_thumbs__slide\": \"_jp0uN\",\n  \"embla_thumbs__slide__img\": \"_3S-ie\",\n  \"mlAuto\": \"_1afvv\",\n  \"metadata\": \"_1HGLk\",\n  \"embla__slide_grid\": \"_1TshF\",\n  \"metadataPanel\": \"_U_FmQ\",\n  \"metadataInnerContainer\": \"_1Y4P9\",\n  \"imgMetadataCloseBtn\": \"_1vmhr\",\n  \"react_transform_wrapper\": \"_3djxx\",\n  \"react_transform_component\": \"_2UUxD\",\n  \"navigationDot\": \"_gMqOZ\",\n  \"navigationDotContainer\": \"_1KxdK\",\n  \"imgfade\": \"_1mIvU\",\n  \"embla__slide_selected\": \"_1eIZ-\"\n};\nvar wrapNums = function wrapNums(minNum, maxNum, v) {\n  if (minNum == maxNum) {\n    return minNum;\n  }\n  var rangeSize = maxNum - minNum;\n  return ((v - minNum) % rangeSize + rangeSize) % rangeSize + minNum;\n};\nvar shouldAutoplay = function shouldAutoplay(elem) {\n  if (elem.type == 'yt' && elem.autoPlay != true && elem.autoPlay != 'true') {\n    return false;\n  } else if (elem.autoPlay == false || elem.autoPlay == 'false') {\n    return false;\n  }\n  return true;\n};\nvar getVideoHeight = function getVideoHeight(elem) {\n  if (elem.videoHeight) {\n    return elem.videoHeight;\n  }\n  return \"200\";\n};\nvar getVideoWidth = function getVideoWidth(elem) {\n  if (elem.videoWidth) {\n    return elem.videoWidth;\n  }\n  return \"900\";\n};\nvar getScale = function getScale(num, maxScale) {\n  if (num < 1) {\n    return 1;\n  } else if (num > maxScale) {\n    return maxScale;\n  }\n  return num;\n};\nvar thumbnailVariants = {\n  visible: {\n    opacity: 1,\n    y: 0\n  },\n  hidden: {\n    opacity: 0,\n    y: 100\n  }\n};\nvar themes = {\n  day: {\n    background: 'white',\n    iconColor: 'black',\n    thumbnailBorder: 'solid transparent 2px',\n    textColor: 'black',\n    metadataTextColor: \"black\"\n  },\n  night: {\n    background: '#151515',\n    iconColor: '#626b77',\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\n    textColor: 'silver',\n    metadataTextColor: \"white\"\n  },\n  lightbox: {\n    background: 'rgba(12, 12, 12, 0.93)',\n    iconColor: '#626b77',\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\n    textColor: 'silver',\n    metadataTextColor: \"white\"\n  }\n};\nvar inactiveThumbnailBorder = 'solid transparent 2px';\nvar defaultTheme = 'night';\nvar mobileWidth = 768;\nvar usePrevious = function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\nvar SlideshowLightbox = forwardRef(function (props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      reset: function reset() {\n        initImages(true, true);\n      }\n    };\n  });\n  var _useState = useState([0, 0]),\n    _useState$ = _useState[0],\n    imgSlideIndex = _useState$[0],\n    direction = _useState$[1],\n    setImgSlideIndex = _useState[1];\n  var _useState2 = useState(false),\n    showModal = _useState2[0],\n    setShowModal = _useState2[1];\n  var _useState3 = useState(props.slideDuration ? props.slideDuration : 25),\n    slideAnimDuration = _useState3[0];\n  var _useState4 = useState(false),\n    isSlideshowPlaying = _useState4[0],\n    setIsSlideshowPlaying = _useState4[1];\n  var _useState5 = useState(false),\n    emblaReinitialized = _useState5[0],\n    setEmblaReinitialized = _useState5[1];\n  var _useState6 = useState([]),\n    images = _useState6[0],\n    setImages = _useState6[1];\n  var _useState7 = useState([]),\n    previewImageElems = _useState7[0],\n    setPreviewImageElems = _useState7[1];\n  var slideIndex = wrapNums(0, images.length, imgSlideIndex);\n  var _useState8 = useState({\n      loop: true,\n      startIndex: 0,\n      active: true,\n      duration: slideAnimDuration,\n      dragThreshold: 10,\n      skipSnaps: true\n    }),\n    reactSwipeOptions = _useState8[0],\n    setReactSwipeOptions = _useState8[1];\n  var initialThumbnailOptions = {\n    startIndex: 0,\n    containScroll: 'keepSnaps',\n    dragFree: true\n  };\n  var _useState9 = useState(0),\n    width = _useState9[0],\n    setWidth = _useState9[1];\n  var isMobile = width <= mobileWidth;\n  var _useState10 = useState(initialThumbnailOptions),\n    thumbnailSwipeOptions = _useState10[0],\n    setThumbnailSwipeOptions = _useState10[1];\n  var _useState11 = useState(false),\n    carouselReady = _useState11[0],\n    setCarouselReady = _useState11[1];\n  var _useState12 = useState(false),\n    zoomedIn = _useState12[0],\n    setZoomedIn = _useState12[1];\n  var _useState13 = useState(false),\n    setIsDisplay = _useState13[1];\n  var _useState14 = useState(false),\n    isOpen = _useState14[0],\n    setIsOpen = _useState14[1];\n  var _useState15 = useState(null),\n    prevFocusedElem = _useState15[0],\n    setPrevFocusedElem = _useState15[1];\n  var _useState16 = useState(false),\n    animationEntered = _useState16[0],\n    setAnimationEntered = _useState16[1];\n  var _useState17 = useState(props.magnifyingGlass ? props.magnifyingGlass : false),\n    magnifyingGlassFeature = _useState17[0];\n  var _useState18 = useState(props.disableImageZoom ? props.disableImageZoom : false),\n    disableZoom = _useState18[0],\n    setDisableZoom = _useState18[1];\n  var _useState19 = useState(props.slideshowInterval ? props.slideshowInterval : 1700),\n    slideshowInterval = _useState19[0];\n  var _useState20 = useState(props.rightArrowStyle ? props.rightArrowStyle : {}),\n    rightArrowStyle = _useState20[0];\n  var _useState21 = useState(props.leftArrowStyle ? props.leftArrowStyle : {}),\n    leftArrowStyle = _useState21[0];\n  var _useState22 = useState(props.maxZoomScale ? getScale(props.maxZoomScale, 24) : 8),\n    maxScale = _useState22[0];\n  var _useState23 = useState(props.roundedImages ? props.roundedImages : false),\n    isRounded = _useState23[0],\n    setIsRounded = _useState23[1];\n  var _useState24 = useState(props.showControls ? props.showControls : true),\n    showControls = _useState24[0],\n    setShowControls = _useState24[1];\n  var _useState25 = useState(props.showFullScreenIcon ? props.showFullScreenIcon : true),\n    displayFullScreenIcon = _useState25[0],\n    setDisplayFullScreenIcon = _useState25[1];\n  var _useState26 = useState(props.showThumbnailIcon ? props.showThumbnailIcon : true),\n    displayThumbnailIcon = _useState26[0],\n    setDisplayThumbnailIcon = _useState26[1];\n  var _useState27 = useState(props.showSlideshowIcon ? props.showSlideshowIcon : true),\n    setDisplaySlideshowIcon = _useState27[1];\n  var _useState28 = useState(props.showMagnificationIcons ? props.showMagnificationIcons : true),\n    displayMagnificationIcons = _useState28[0],\n    setDisplayMagnificationIcons = _useState28[1];\n  var _useState29 = useState(props.nextArrow ? props.nextArrow : null),\n    nextArrowElem = _useState29[0];\n  var _useState30 = useState(props.imageComponent ? props.imageComponent : null),\n    isImageComponent = _useState30[0];\n  var _useState31 = useState(props.prevArrow ? props.prevArrow : null),\n    prevArrowElem = _useState31[0];\n  var _useState32 = useState(props.modalClose ? props.modalClose : \"default\"),\n    modalCloseOption = _useState32[0];\n  var _useState33 = useState(props.downloadImages ? props.downloadImages : false),\n    showDownloadBtn = _useState33[0];\n  var _useState34 = useState(props.showNavigationDots ? props.showNavigationDots : false),\n    navigationDots = _useState34[0];\n  var _useState35 = useState(props.metadataTimeLocale ? props.metadataTimeLocale : \"en-US\"),\n    metadataLocale = _useState35[0];\n  var _useState36 = useState(props.rtl ? props.rtl : false),\n    isRTL = _useState36[0];\n  var _useState37 = useState(props.framework ? props.framework : ''),\n    frameworkID = _useState37[0];\n  var _useState38 = useState(props.lightboxIdentifier ? props.lightboxIdentifier : false),\n    lightboxIdentifier = _useState38[0];\n  var _useState39 = useState(props.fullScreen ? props.fullScreen : false),\n    imageFullScreen = _useState39[0];\n  var _useState40 = useState(props.licenseKey ? props.licenseKey : '');\n  var _useState41 = useState(props.showLoader ? props.showLoader : false),\n    displayLoader = _useState41[0],\n    setDisplayLoader = _useState41[1];\n  var _useState42 = useState(props.controlComponent ? props.controlComponent : false),\n    customControlComponent = _useState42[0];\n  var _useState43 = useState(props.startingSlideIndex ? props.startingSlideIndex : 0),\n    setStartingIndex = _useState43[1];\n  var _useState44 = useState(props.backgroundColor ? props.backgroundColor : themes[defaultTheme].background),\n    backgroundColor = _useState44[0],\n    setBackgroundColor = _useState44[1];\n  var _useState45 = useState(props.iconColor ? props.iconColor : null),\n    iconColor = _useState45[0],\n    setIconColor = _useState45[1];\n  var _useState46 = useState(props.textColor ? props.textColor : themes[defaultTheme].textColor),\n    textColor = _useState46[0],\n    setTextColor = _useState46[1];\n  var _useState47 = useState(props.showControlsBar ? props.showControlsBar : true),\n    showControlsBar = _useState47[0];\n  var _useState48 = useState(props.useCoverMode ? props.useCoverMode : false),\n    coverMode = _useState48[0];\n  var _useState49 = useState(props.displayMetadata ? props.displayMetadata : false),\n    displayImgMetadata = _useState49[0];\n  var _useState50 = useState(false),\n    showImgMetadataPanel = _useState50[0],\n    setShowImgMetadataPanel = _useState50[1];\n  var _useState51 = useState({}),\n    imgMetadata = _useState51[0],\n    setImgMetadata = _useState51[1];\n  var _useState52 = useState(props.showThumbnails ? props.showThumbnails : false),\n    showThumbnails = _useState52[0],\n    setShowThumbnails = _useState52[1];\n  var _useState53 = useState(props.animateThumbnails ? props.animateThumbnails : true),\n    animatedThumbnails = _useState53[0];\n  var _useState54 = useState(props.imgAnimation ? props.imgAnimation : 'imgDrag'),\n    imgAnimation = _useState54[0],\n    setImgAnimation = _useState54[1];\n  var _useState55 = useState(props.arrowStyle ? props.arrowStyle : 'dark'),\n    arrowStyle = _useState55[0];\n  var _useState56 = useState(false),\n    setYTVideoCurrentlyPlaying = _useState56[1];\n  var _useState57 = useState(false),\n    isBrowserFullScreen = _useState57[0],\n    setIsBrowserFullScreen = _useState57[1];\n  var _useState58 = useState(false),\n    enableMagnifyingGlass = _useState58[0],\n    setMagnifyingGlass = _useState58[1];\n  var _useState59 = useState(false),\n    imagesLoaded = _useState59[0],\n    setImagesLoaded = _useState59[1];\n  var imageRef = useRef(null);\n  var _useState60 = useState(0),\n    zoomIdx = _useState60[0],\n    setZoomIdx = _useState60[1];\n  var _useState61 = useState(500),\n    imgContainHeight = _useState61[0],\n    setImgContainHeight = _useState61[1];\n  var _useState62 = useState(426),\n    imgContainWidth = _useState62[0],\n    setImgContainWidth = _useState62[1];\n  var _useState63 = useState(false),\n    isInit = _useState63[0],\n    setIsInit = _useState63[1];\n  var open = props.open;\n  var previousValues = usePrevious({\n    open: open\n  });\n  var zoomReferences = useRef([]);\n  var videoReferences = useRef({});\n  var btnRef = useRef(null);\n  var _useState64 = useState({}),\n    videoElements = _useState64[0],\n    setVideoElements = _useState64[1];\n  var _useState65 = useState(true),\n    isLoading = _useState65[0],\n    setIsLoading = _useState65[1];\n  var _useState66 = useState(0),\n    touchStart = _useState66[0],\n    setTouchStart = _useState66[1];\n  var _useState67 = useState(0),\n    touchEnd = _useState67[0],\n    setTouchEnd = _useState67[1];\n  var _useState68 = useState(0),\n    mouseStartX = _useState68[0],\n    setMouseStartX = _useState68[1];\n  var _useState69 = useState(0),\n    setMouseStartY = _useState69[1];\n  var minimumSwipeDistance = 50;\n  var onTouchStart = function onTouchStart(e) {\n    setTouchEnd(null);\n    setTouchStart(e.targetTouches[0].clientX);\n  };\n  var onTouchMove = function onTouchMove(e) {\n    return setTouchEnd(e.targetTouches[0].clientX);\n  };\n  var onTouchEnd = function onTouchEnd() {\n    if (touchStart != null && touchEnd != null && imgAnimation == \"fade\") {\n      var distance = touchStart - touchEnd;\n      if (distance != null) {\n        var isLeftSwipe = distance > minimumSwipeDistance;\n        var isRightSwipe = distance < -minimumSwipeDistance;\n        if (isLeftSwipe) {\n          nextSlide();\n        } else if (isRightSwipe) {\n          prevSlide();\n        }\n      }\n    }\n  };\n  var delta = 6;\n  var onMouseDown = function onMouseDown(event) {\n    setMouseStartX(event.pageX);\n    setMouseStartY(event.pageY);\n  };\n  var onMouseUp = function onMouseUp(event) {\n    if (imgAnimation == \"fade\" && zoomedIn == false) {\n      var differenceX = Math.abs(event.pageX - mouseStartX);\n      if (differenceX > delta) {\n        var isLeftDragMotion = mouseStartX - event.pageX > delta;\n        var isRightDragMotion = mouseStartX - event.pageX < -delta;\n        if (isLeftDragMotion) {\n          nextSlide();\n        } else if (isRightDragMotion) {\n          prevSlide();\n        }\n      }\n    }\n  };\n  var createCustomThumbnailBorder = function createCustomThumbnailBorder() {\n    if (props.thumbnailBorder) {\n      return \"solid \" + props.thumbnailBorder + \" 2px\";\n    }\n  };\n  var _useState70 = useState(props.thumbnailBorder ? createCustomThumbnailBorder() : themes[defaultTheme].thumbnailBorder),\n    thumbnailBorder = _useState70[0];\n  var _useEmblaCarousel = useEmblaCarousel(reactSwipeOptions),\n    emblaRef = _useEmblaCarousel[0],\n    emblaApi = _useEmblaCarousel[1];\n  var _useEmblaCarousel2 = useEmblaCarousel(thumbnailSwipeOptions),\n    emblaThumbsRef = _useEmblaCarousel2[0],\n    emblaThumbsApi = _useEmblaCarousel2[1];\n  var getLoaderThemeClass = function getLoaderThemeClass() {\n    if (props.theme) {\n      if (props.theme == 'night' || props.theme == 'lightbox') {\n        return styles.night_loader;\n      } else if (props.theme == 'day') {\n        return styles.day_loader;\n      }\n    }\n    return styles.night_loader;\n  };\n  var scrollPrev = useCallback(function () {\n    if (emblaApi) {\n      emblaApi.scrollPrev();\n    }\n  }, [emblaApi]);\n  var scrollNext = useCallback(function () {\n    if (emblaApi) {\n      emblaApi.scrollNext();\n    }\n  }, [emblaApi]);\n  var variants = {\n    active: {\n      opacity: 1\n    },\n    inactive: {\n      opacity: 0\n    }\n  };\n  var isImageCaption = function isImageCaption() {\n    if (props.images && props.images.length > 0) {\n      var _props$images$slideIn;\n      if ((_props$images$slideIn = props.images[slideIndex]) !== null && _props$images$slideIn !== void 0 && _props$images$slideIn.caption) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var displayDownloadBtn = function displayDownloadBtn() {\n    if (isVideo(slideIndex)) {\n      return false;\n    } else {\n      return showDownloadBtn;\n    }\n  };\n  function handleWindowResize() {\n    setWidth(window.innerWidth);\n  }\n  var shouldDisplayMagnifyingGlassIcon = function shouldDisplayMagnifyingGlassIcon() {\n    if (isVideo(slideIndex)) {\n      return false;\n    }\n    if (isMobile == true) {\n      return false;\n    }\n    if (imageFullScreen == true) {\n      return false;\n    }\n    if (magnifyingGlassFeature == true) {\n      return true;\n    }\n    return false;\n  };\n  var getImageStyle = function getImageStyle() {\n    var styleObject = {};\n    if (isImageCaption() && showThumbnails == false) {\n      styleObject[\"height\"] = \"77vh\";\n    }\n    if (isImageCaption() && showThumbnails) {\n      styleObject[\"height\"] = \"67vh\";\n    }\n    if (isRounded) {\n      styleObject[\"borderRadius\"] = \"20px\";\n    }\n    if (modalCloseOption == \"clickOutside\") {\n      styleObject[\"pointerEvents\"] = \"auto\";\n    }\n    if (isImageComponent && showThumbnails == false && !isMobile) {\n      styleObject[\"height\"] = \"85vh\";\n    }\n    return styleObject;\n  };\n  var shouldDisplaySlideshowIcon = function shouldDisplaySlideshowIcon() {\n    if (props.showSlideshowIcon != undefined) {\n      return props.showSlideshowIcon;\n    }\n    if (images) {\n      if (images.length == 1) {\n        return false;\n      }\n    } else if (props.images) {\n      if (props.images.length == 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var navigationClick = function navigationClick(index) {\n    initLoader(index);\n    setCurrentSlide(index);\n  };\n  var checkModalClick = function checkModalClick(e) {\n    var modals = document.getElementsByClassName('imageModal');\n    var arr_modals = Array.from(modals);\n    for (var i = 0; i < arr_modals.length; i++) {\n      var elem = arr_modals[i];\n      var clickInside = elem.contains(e.target);\n      if (clickInside) {\n        return;\n      }\n    }\n    closeModal();\n  };\n  var getRTLIndex = function getRTLIndex(img_gallery_length, i) {\n    var index;\n    if (i == 0) {\n      index = img_gallery_length - 1;\n    } else if (i == img_gallery_length - 1) {\n      index = 0;\n    } else {\n      index = img_gallery_length - i - 1;\n    }\n    return index;\n  };\n  var getMetadataTextColor = function getMetadataTextColor() {\n    if (props.theme) {\n      if (themes[props.theme]) {\n        return themes[props.theme].metadataTextColor;\n      }\n    } else {\n      return themes[defaultTheme].metadataTextColor;\n    }\n  };\n  var fullScreen = function fullScreen() {\n    var lightbox = document.getElementById('slideshowAnim');\n    openFullScreen(lightbox);\n    setIsBrowserFullScreen(true);\n    initFullScreenChangeEventListeners();\n  };\n  var exitFullScreenHandler = function exitFullScreenHandler() {\n    if (document['webkitIsFullScreen'] || document['mozFullScreen'] || document['msFullscreenElement']) {\n      setIsBrowserFullScreen(true);\n    } else {\n      if (isBrowserFullScreen) {\n        closeFullScreen(document);\n      }\n      removeFullScreenChangeEventListeners();\n      setIsBrowserFullScreen(false);\n    }\n  };\n  var exitFullScreen = function exitFullScreen() {\n    closeFullScreen(document);\n    removeFullScreenChangeEventListeners();\n    setIsBrowserFullScreen(false);\n  };\n  var emblaSlideSelect = useCallback(function (emblaApi) {}, []);\n  useEffect(function () {\n    if (emblaApi) emblaApi.on('slidesInView', emblaSlideSelect);\n  }, [emblaApi, emblaSlideSelect]);\n  var updateImageSlideshow = function updateImageSlideshow(newDirection) {\n    if (isRTL) {\n      scrollPrev();\n    } else {\n      scrollNext();\n    }\n    setImgSlideIndex([imgSlideIndex + newDirection, newDirection]);\n    if (isRTL) {\n      setZoomIdx(zoomIdx - 1 < 0 ? images.length - 1 : zoomIdx - 1);\n    } else {\n      setZoomIdx(zoomIdx + 1 >= images.length ? 0 : zoomIdx + 1);\n    }\n  };\n  var displayArrows = function displayArrows() {\n    if (props.showArrows == false) {\n      return false;\n    }\n    if (props.images) {\n      if (props.images.length == 1) {\n        return false;\n      }\n    } else if (images.length == 1) {\n      return false;\n    }\n    return true;\n  };\n  var initLoader = function initLoader(newIndex) {\n    if (props.showLoader && props.images) {\n      if (!isVideo(newIndex) && images[newIndex].loaded != true) {\n        setDisplayLoader(true);\n      } else if (props.showLoader && props.images && images[newIndex]['loaded']) {\n        setDisplayLoader(false);\n      }\n    }\n  };\n  var getImageCaption = function getImageCaption() {\n    if (props.images && props.images.length > 0) {\n      return props.images[slideIndex].caption;\n    }\n    return \"\";\n  };\n  var getArrowStyle = function getArrowStyle() {\n    if (arrowStyle == 'dark') {\n      return styles.dark_icon;\n    } else if (arrowStyle == 'light') {\n      return styles.light_icon;\n    }\n  };\n  var getIconStyle = function getIconStyle() {\n    if (arrowStyle == 'dark') {\n      return styles.dark_header_icon;\n    } else if (arrowStyle == 'light') {\n      return styles.light_header_icon;\n    }\n  };\n  var setCurrentSlide = function setCurrentSlide(newIndex) {\n    var newDirection;\n    if (newIndex > imgSlideIndex) {\n      newDirection = 1;\n    } else {\n      newDirection = -1;\n    }\n    setZoomIdx(newIndex);\n    setImgSlideIndex([newIndex, newDirection]);\n    if (emblaApi) {\n      emblaApi.scrollTo(newIndex);\n    }\n  };\n  var dispatchOpenEvent = function dispatchOpenEvent() {\n    if (props.onOpen) {\n      props.onOpen(slideIndex, images[slideIndex]);\n    }\n  };\n  var dispatchCloseEvent = function dispatchCloseEvent() {\n    if (props.onClose) {\n      props.onClose(slideIndex);\n    }\n  };\n  var dispatchNextImgEvent = function dispatchNextImgEvent(newIndex) {\n    if (props.onNext) {\n      props.onNext(newIndex, images[newIndex]);\n    }\n  };\n  var dispatchPrevImgEvent = function dispatchPrevImgEvent(newIndex) {\n    if (props.onPrev) {\n      props.onPrev(newIndex, images[newIndex]);\n    }\n  };\n  var closeModal = function closeModal() {\n    setZoomIdx(0);\n    if (isBrowserFullScreen) {\n      exitFullScreen();\n    }\n    if (isSlideshowPlaying) {\n      setIsSlideshowPlaying(false);\n    }\n    setShowModal(false);\n    setIsOpen(false);\n    setCarouselReady(false);\n    setEmblaReinitialized(false);\n    if (prevFocusedElem) prevFocusedElem === null || prevFocusedElem === void 0 ? void 0 : prevFocusedElem.focus();\n  };\n  var openModal = function openModal(num) {\n    if (emblaApi) {\n      emblaApi.reInit();\n      if (emblaThumbsApi) {\n        emblaThumbsApi === null || emblaThumbsApi === void 0 ? void 0 : emblaThumbsApi.scrollTo(emblaApi.selectedScrollSnap());\n      }\n    }\n    setImgSlideIndex([num, 1]);\n    setShowModal(true);\n    setIsOpen(true);\n  };\n  var setItemLoaded = function setItemLoaded(index) {\n    if (props.images) {\n      setImages(function (images) {\n        return images.map(function (img, i) {\n          return index === i ? _extends({}, img, {\n            loaded: true\n          }) : img;\n        });\n      });\n    }\n  };\n  var setImagesItemLoaded = function setImagesItemLoaded(index) {\n    setImages(function (images) {\n      return images.map(function (img, i) {\n        return index === i ? _extends({}, img, {\n          loaded: true\n        }) : img;\n      });\n    });\n  };\n  var resetMedia = function resetMedia(slide_index) {\n    resetVideo(slide_index);\n    resetImage();\n  };\n  var initImgMetadataPanel = function initImgMetadataPanel() {\n    if (isMobile && showImgMetadataPanel) {\n      setShowImgMetadataPanel(false);\n    }\n  };\n  var initSlide = function initSlide(newSlideIndex) {\n    setImgSlideIndex([newSlideIndex, 1]);\n    var wrap_slide_index = wrapNums(0, images.length, newSlideIndex);\n    setZoomIdx(wrap_slide_index);\n    initLoader(wrap_slide_index);\n    if (displayImgMetadata) {\n      initImgMetadataPanel();\n      if (!imgMetadata[wrap_slide_index]) {\n        setIsLoading(true);\n      }\n    }\n  };\n  var nextSlide = function nextSlide() {\n    scrollNext();\n    initSlide(imgSlideIndex + 1);\n  };\n  var prevSlide = function prevSlide() {\n    scrollPrev();\n    initSlide(imgSlideIndex - 1);\n  };\n  var setThumbnailStartIndex = function setThumbnailStartIndex(index) {\n    var thumbnailSwipeOptionConfig = thumbnailSwipeOptions;\n    thumbnailSwipeOptionConfig.startIndex = index;\n    setThumbnailSwipeOptions(thumbnailSwipeOptionConfig);\n  };\n  var openModalWithSlideNum = function openModalWithSlideNum(index) {\n    var reactSwipeOptionConfig = reactSwipeOptions;\n    reactSwipeOptionConfig.startIndex = index;\n    setReactSwipeOptions(reactSwipeOptionConfig);\n    setThumbnailStartIndex(index);\n    setZoomIdx(index);\n    openModal(index);\n  };\n  var saveImage = function saveImage() {\n    if (props.images.length > 0) {\n      if (props.images[slideIndex].original) {\n        saveAs(props.images[slideIndex].original, 'image.jpg');\n      } else {\n        saveAs(props.images[slideIndex]['src'], 'image.jpg');\n      }\n    } else {\n      if (images[slideIndex].src) {\n        saveAs(images[slideIndex].src, 'image.jpeg');\n      }\n    }\n  };\n  var playSlideshow = function playSlideshow() {\n    setMagnifyingGlass(false);\n    if (isRTL) {\n      updateImageSlideshow(-1);\n    } else {\n      updateImageSlideshow(1);\n    }\n    setIsSlideshowPlaying(true);\n  };\n  var stopSlideshow = function stopSlideshow() {\n    setIsSlideshowPlaying(false);\n  };\n  var getEmbedIndex = function getEmbedIndex(slide_index, elems) {\n    if (props.images) {\n      var iframe_index = 0;\n      for (var i = 0; i < props.images.length; i++) {\n        var item = props.images[i];\n        if (item.type == \"customVideoEmbed\" || item.type == \"yt\") {\n          if (i == slide_index) {\n            iframe_index++;\n            break;\n          } else {\n            iframe_index++;\n          }\n        }\n      }\n      return iframe_index - 1;\n    }\n  };\n  var getEmblaClass = function getEmblaClass(index) {\n    if (displayImgMetadata) {\n      return styles.embla__slide_grid;\n    }\n    if (slideIndex == index && imgAnimation == \"fade\") {\n      return styles.imgfade + \" \" + styles.embla__slide + \" \" + styles.embla__slide_selected;\n    } else if (imgAnimation == \"fade\") {\n      return styles.imgfade + \" \" + styles.embla__slide;\n    } else {\n      return styles.embla__slide;\n    }\n  };\n  var resetVideo = function resetVideo(slide_index) {\n    if (props.images) {\n      var elem = props.images[slide_index];\n      if (elem) {\n        if (elem.type == 'htmlVideo') {\n          videoReferences.current[slide_index].pause();\n        } else if (elem.type == \"yt\") {\n          if (videoElements[slide_index]) {\n            videoElements[slide_index].target.pauseVideo();\n          }\n        } else if (elem.type == \"customVideoEmbed\") {\n          var lightboxjs_elem = document.getElementById(\"lightboxContainer\");\n          var elems = lightboxjs_elem === null || lightboxjs_elem === void 0 ? void 0 : lightboxjs_elem.querySelectorAll(\"iframe\");\n          if (elems) {\n            var iframe_elem_index = getEmbedIndex(slide_index);\n            if (iframe_elem_index != undefined && iframe_elem_index >= 0) {\n              var iframe = elems[iframe_elem_index];\n              var iframe_src = iframe.src;\n              iframe.src = iframe_src;\n            }\n          }\n        }\n      }\n    }\n  };\n  var getNavigationDot = function getNavigationDot(index) {\n    return createElement(\"button\", {\n      style: slideIndex === index ? {\n        backgroundColor: \"cornflowerblue\"\n      } : {},\n      className: styles.navigationDot + \" imageModal\",\n      onClick: function onClick() {\n        navigationClick(index);\n      }\n    });\n  };\n  var getThumbnailsOuterContainerStyle = function getThumbnailsOuterContainerStyle() {\n    var style = {};\n    if (isImageCaption()) {\n      if (showThumbnails) {\n        style[\"height\"] = \"21vh\";\n      } else {\n        style[\"height\"] = \"12vh\";\n      }\n      style[\"backgroundColor\"] = backgroundColor;\n    }\n    return style;\n  };\n  var getImageThumbnail = function getImageThumbnail(img, index, isNextJS) {\n    return createElement(\"div\", {\n      key: \"thumbnail_slide_\" + index,\n      className: \"\" + styles.embla_thumbs__slide\n    }, createElement(\"img\", {\n      className: (props.thumbnailImgClass ? props.thumbnailImgClass : \"\") + \" \" + styles.thumbnail + \" imageModal \",\n      src: isNextJS == true ? getThumbnailImgSrcNext(img, index) : getThumbnailImgSrc(img, index),\n      alt: img.alt,\n      onLoad: function onLoad() {\n        return setImagesLoaded(true);\n      },\n      style: slideIndex === index ? {\n        border: thumbnailBorder\n      } : {\n        border: inactiveThumbnailBorder\n      },\n      key: \"thumbnail_\" + index,\n      onClick: function onClick() {\n        navigationClick(index);\n      }\n    }));\n  };\n  var handleError = function handleError(event, index) {\n    if (props.onImgError) {\n      props.onImgError(event, images[slideIndex], index);\n    }\n  };\n  var resetImage = function resetImage() {\n    if (enableMagnifyingGlass) {\n      initMagnifyingGlass();\n    } else {\n      if (zoomReferences.current[zoomIdx] != null) {\n        zoomReferences.current[zoomIdx].resetTransform();\n      }\n    }\n  };\n  var getThumbnailImgSrc = function getThumbnailImgSrc(img, index) {\n    if (props.images && props.images.length > 0) {\n      if (props.images[index].thumbnailSrc) {\n        return props.images[index].thumbnailSrc;\n      }\n    }\n    if (isVideo(index) && img.thumbnail) {\n      return img.thumbnail;\n    } else {\n      return img.src;\n    }\n  };\n  var getThumbnailImgSrcNext = function getThumbnailImgSrcNext(img, index) {\n    if (img.thumbnailSrc) {\n      return img.thumbnailSrc;\n    } else if (isVideo(index)) {\n      return img.thumbnail;\n    } else {\n      var img_src = img.src;\n      if (typeof img_src === 'object' && !Array.isArray(img_src) && img_src !== null) {\n        return img_src.src;\n      } else {\n        return img_src;\n      }\n    }\n  };\n  var isAnimImageComponent = function isAnimImageComponent() {\n    if (images) {\n      if (images.length == 1) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var initWrapperClassname = function initWrapperClassname() {\n    var classNameStr = \"\";\n    if (props.className) {\n      classNameStr += props.className + \" \";\n    }\n    if (isAnimImageComponent()) {\n      if (props.imgWrapperClassName) {\n        classNameStr += props.imgWrapperClassName + \" \";\n      }\n    }\n    classNameStr += \"\" + styles.lightboxjs;\n    return classNameStr;\n  };\n  var initStyling = function initStyling() {\n    if (props.theme) {\n      if (themes[props.theme]) {\n        setBackgroundColor(themes[props.theme].background);\n        setTextColor(themes[props.theme].textColor);\n      }\n    }\n    if (props.fullScreen) {\n      if (props.fullScreen == true) {\n        setImgAnimation(props.imgAnimation && props.imgAnimation == \"imgDrag\" ? props.imgAnimation : \"fade\");\n        setIsRounded(false);\n      }\n    }\n  };\n  var getMetadataPanel = function getMetadataPanel() {\n    var imgMetadataItem = imgMetadata[slideIndex];\n    if (imgMetadataItem) {\n      var element = createElement(\"div\", {\n        className: styles.metadataPanel\n      }, createElement(\"b\", null, \"Filename\"), imgMetadataItem.name ? createElement(\"p\", null, imgMetadataItem.name) : null, imgMetadataItem.createDate ? createElement(\"div\", null, createElement(\"b\", null, \"Captured Time\"), createElement(\"p\", null, imgMetadataItem.createDate.toString())) : null, imgMetadataItem.width && imgMetadataItem.height ? createElement(\"div\", null, createElement(\"b\", null, \"Resolution\"), createElement(\"p\", null, imgMetadataItem.width, \"*\", imgMetadataItem.height)) : null, imgMetadataItem.isoData || imgMetadataItem.fNumber || imgMetadataItem.shutterSpeed ? createElement(\"div\", null, createElement(\"b\", null, \"Image Details\"), imgMetadataItem.isoData ? createElement(\"span\", null, \"ISO \", imgMetadataItem.isoData) : null, imgMetadataItem.fNumber ? createElement(\"span\", null, \"f\", imgMetadataItem.fNumber) : null, imgMetadataItem.shutterSpeed ? createElement(\"span\", null, \"Shutter speed: \", imgMetadataItem.shutterSpeed) : null) : null);\n      return element;\n    }\n  };\n  var imageSlideElement = function imageSlideElement(index) {\n    var imageElem;\n    if (!props.images) {\n      imageElem = createElement(\"img\", {\n        className: \"imageModal \" + (props.imgElemClassname ? props.imgElemClassname : '') + \"\\n        \" + (props.fullScreen ? styles.lightbox_img : styles.lightbox_img) + \" \\n        \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \"  \" + styles.contain_img + \" \",\n        style: getImageStyle(),\n        ref: imageRef,\n        loading: 'lazy',\n        src: images[index].original ? images[index].original : images[index].src,\n        onError: function onError(event) {\n          handleError(event, index);\n        },\n        onLoad: function onLoad(img) {\n          if (index == slideIndex) {\n            setDisplayLoader(false);\n          }\n          if (props.images) {\n            setItemLoaded(index);\n          } else {\n            setImagesItemLoaded(index);\n          }\n        },\n        id: 'img'\n      });\n    } else if (props.images && props.render) {\n      imageElem = props.render.imgSlide(props.images[index]);\n    } else {\n      var img_link;\n      if (props.images) {\n        if (typeof images[index].src === 'object' && !Array.isArray(images[index].src) && images[index].src !== null) {\n          var _images$index$src;\n          img_link = (_images$index$src = images[index].src) === null || _images$index$src === void 0 ? void 0 : _images$index$src.src;\n        } else if (props.coverImageInLightbox == true) {\n          img_link = images[index].src;\n        } else {\n          img_link = images[index].src;\n        }\n      }\n      imageElem = createElement(\"img\", {\n        className: \"imageModal \" + (props.imgElemClassname ? props.imgElemClassname : '') + \"\\n        \" + (props.fullScreen ? styles.lightbox_img : styles.lightbox_img) + \" \\n        \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \" + styles.contain_img + \" \",\n        ref: imageRef,\n        loading: 'lazy',\n        style: getImageStyle(),\n        src: images[index].original ? images[index].original : img_link,\n        onError: function onError(event) {\n          handleError(event, index);\n        },\n        onLoad: function onLoad(img) {\n          if (index == slideIndex) {\n            setDisplayLoader(false);\n          }\n          if (props.images) {\n            setItemLoaded(index);\n          } else {\n            setImagesItemLoaded(index);\n          }\n        },\n        id: 'img'\n      });\n    }\n    return imageElem;\n  };\n  var getCloseIconBtnStyle = function getCloseIconBtnStyle() {\n    var style_object = {};\n    if (iconColor) {\n      style_object = {\n        color: iconColor\n      };\n    }\n    if (props.closeIconBtnStyle) {\n      var closeIconBtnStyleKeys = Object.keys(props.closeIconBtnStyle);\n      for (var i = 0; i < closeIconBtnStyleKeys.length; i++) {\n        var keyName = closeIconBtnStyleKeys[i];\n        var style_obj = props.closeIconBtnStyle[keyName];\n        style_object[keyName] = style_obj;\n      }\n    }\n    return style_object;\n  };\n  var isPanningDisabled = function isPanningDisabled() {\n    if (isMobile && zoomedIn == false) {\n      return true;\n    }\n    if (isMobile && zoomedIn) {\n      return false;\n    }\n    return false;\n  };\n  var getImageFilename = function getImageFilename(img_src) {\n    var img_src_split = img_src.split(\"/\");\n    var name = img_src_split[img_src_split.length - 1];\n    return name;\n  };\n  var parseCreateDate = function parseCreateDate(js_date) {\n    if (js_date) {\n      var date = js_date.getDate();\n      var month = js_date.getMonth() + 1;\n      var year = js_date.getFullYear();\n      var time = js_date.toLocaleTimeString(metadataLocale);\n      return '' + year + '-' + (month <= 9 ? '0' + month : month) + '-' + (date <= 9 ? '0' + date : date) + (\" \" + time);\n    }\n    return \"\";\n  };\n  var getLightboxElem = function getLightboxElem(index) {\n    if (isCustomEmbed(index)) {\n      return customEmbedElement(index);\n    } else if (isVideo(index)) {\n      return videoSlideElement(index);\n    } else if (isPictureElement(index)) {\n      var elem_metadata = props.images[index][\"picture\"];\n      return createElement(\"picture\", {\n        className: \"imageModal \\n      \" + (props.fullScreen ? styles.lightbox_img : styles.lightbox_img) + \" \\n      \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \"\n      }, Object.keys(elem_metadata).map(function (format) {\n        return createElement(\"source\", {\n          type: format,\n          key: format,\n          srcSet: elem_metadata[format].srcSet\n        });\n      }), createElement(\"img\", {\n        src: elem_metadata['fallback'],\n        onError: function onError(error) {\n          handleError(error, index);\n        }\n      }));\n    } else {\n      if (images && props.render || frameworkID == 'next') {\n        return imageSlideElement(index);\n      } else {\n        return createElement(\"img\", {\n          className: \"imageModal \" + (props.imgElemClassname ? props.imgElemClassname : '') + \"\\n          \" + (props.fullScreen ? styles.lightbox_img : styles.lightbox_img) + \" \\n          \" + (enableMagnifyingGlass ? styles.maxWidthFull : styles.maxWidthWithoutMagnifier) + \" \" + styles.contain_img + \" \",\n          ref: imageRef,\n          key: index,\n          loading: 'lazy',\n          style: getImageStyle(),\n          src: images && images[index].original ? images[index].original : images[index].src,\n          onLoad: function onLoad(img) {\n            if (displayImgMetadata) {\n              if (img) {\n                var img_target = img.target;\n                var individual_image_metadata = {};\n                var name = getImageFilename(img_target.src);\n                individual_image_metadata[\"name\"] = name;\n                exifr.parse(img_target, true).then(function (exif) {\n                  if (exif) {\n                    var keys = [\"isoData\", \"createDate\", \"height\", \"width\", \"shutterSpeed\", \"fNumber\"];\n                    for (var i = 0; i < keys.length; i++) {\n                      var keyName = keys[i];\n                      switch (keyName) {\n                        case \"isoData\":\n                          if (exif.ISO) {\n                            individual_image_metadata[\"isoData\"] = exif.ISO;\n                          }\n                          break;\n                        case \"createDate\":\n                          if (exif.CreateDate) {\n                            individual_image_metadata[\"createDate\"] = parseCreateDate(exif.CreateDate);\n                          }\n                          break;\n                        case \"height\":\n                          if (exif.ExifImageHeight) {\n                            individual_image_metadata[\"height\"] = exif.ExifImageHeight;\n                          }\n                          break;\n                        case \"width\":\n                          if (exif.ExifImageWidth) {\n                            individual_image_metadata[\"width\"] = exif.ExifImageWidth;\n                          }\n                          break;\n                        case \"fNumber\":\n                          if (exif.fNumber) {\n                            individual_image_metadata[\"fNumber\"] = exif.fNumber;\n                          }\n                          break;\n                        case \"shutterSpeed\":\n                          if (exif.ShutterSpeedValue) {\n                            individual_image_metadata[\"shutterSpeed\"] = exif.ShutterSpeedValue;\n                          }\n                          break;\n                      }\n                    }\n                    var imgMetadataItems = imgMetadata;\n                    imgMetadataItems[index] = individual_image_metadata;\n                    setImgMetadata(imgMetadataItems);\n                    if (index == slideIndex) {\n                      setIsLoading(false);\n                    }\n                  }\n                });\n              }\n            }\n            if (index == slideIndex) {\n              setDisplayLoader(false);\n            }\n            if (props.images) {\n              setItemLoaded(index);\n            } else {\n              setImagesItemLoaded(index);\n            }\n          },\n          id: 'img'\n        });\n      }\n    }\n  };\n  var isCustomEmbed = function isCustomEmbed(index) {\n    if (props.images) {\n      var elem = props.images[index];\n      if (elem) {\n        if (elem.type == 'customEmbed') {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  var isVideo = function isVideo(index) {\n    if (props.images) {\n      var elem = props.images[index];\n      if (elem) {\n        if (elem.type == 'yt' || elem.type == 'htmlVideo' || elem.type == 'customVideoEmbed') {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  var shouldDisplayMetadataPanel = function shouldDisplayMetadataPanel() {\n    if (isMobile) {\n      if (showImgMetadataPanel) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return displayImgMetadata;\n    }\n  };\n  var isPictureElement = function isPictureElement(index) {\n    if (props.images) {\n      var elem = props.images[index];\n      if (elem) {\n        if (elem.picture) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  useEffect(function () {\n    if (!emblaApi) return;\n    if (imgAnimation == \"fade\") {\n      emblaApi.internalEngine().translate.toggleActive(false);\n    }\n  }, [carouselReady, emblaApi]);\n  var isHTMLVideo = function isHTMLVideo(index) {\n    if (props.images) {\n      if (props.images && props.images[index].type == 'htmlVideo') {\n        return true;\n      }\n    }\n    return false;\n  };\n  var videoSlideElement = function videoSlideElement(index) {\n    var elem = props.images[index];\n    var videoElem;\n    if (elem.type == 'yt') {\n      videoElem = createElement(\"div\", {\n        className: styles.videoOuterContainer + \" imageModal\"\n      }, createElement(YouTube, {\n        videoId: elem.videoID,\n        ref: function ref(el) {\n          return videoReferences.current[index] = el;\n        },\n        iframeClassName: \"\" + styles.ytVideo,\n        title: 'YouTube video player',\n        opts: {\n          height: getVideoHeight(elem),\n          width: getVideoWidth(elem),\n          playerVars: {\n            autoplay: shouldAutoplay(elem) ? 1 : 0\n          }\n        },\n        onReady: function onReady(event) {\n          var videoElems = videoElements;\n          videoElems[index] = event;\n          setVideoElements(videoElems);\n          if (index == slideIndex) {\n            setDisplayLoader(false);\n          }\n          setItemLoaded(index);\n        },\n        onPlay: function onPlay(event) {\n          setYTVideoCurrentlyPlaying(true);\n        },\n        onPause: function onPause(event) {\n          setYTVideoCurrentlyPlaying(false);\n        },\n        onEnd: function onEnd(event) {\n          setYTVideoCurrentlyPlaying(false);\n        },\n        onError: function onError(event) {\n          handleError(event, index);\n        },\n        onStateChange: function onStateChange(event) {},\n        onPlaybackRateChange: function onPlaybackRateChange(event) {},\n        onPlaybackQualityChange: function onPlaybackQualityChange(event) {}\n      }));\n    } else if (elem.type == 'htmlVideo') {\n      videoElem = createElement(\"div\", {\n        className: styles.htmlVideo + \" \" + styles.htmlVideoOuterContainer + \" imageModal\"\n      }, createElement(\"video\", {\n        className: styles.cursorPointer + \" \" + styles.lightboxVideo,\n        width: getVideoWidth(elem),\n        ref: function ref(el) {\n          return videoReferences.current[index] = el;\n        },\n        onPlay: function onPlay() {},\n        onError: function onError(event) {\n          handleError(event, index);\n        },\n        height: getVideoHeight(elem),\n        autoPlay: index == imgSlideIndex ? shouldAutoplay(elem) : false,\n        controls: true\n      }, createElement(\"source\", {\n        src: elem.videoSrc,\n        type: 'video/mp4',\n        onLoad: function onLoad() {\n          setItemLoaded(index);\n        }\n      })));\n    } else if (elem.type == \"customVideoEmbed\") {\n      videoElem = createElement(\"div\", {\n        className: styles.customVideoContainer + \" imageModal\"\n      }, elem.embed);\n    }\n    return videoElem;\n  };\n  var customEmbedElement = function customEmbedElement(index) {\n    var elem = props.images[index];\n    var customElem;\n    if (elem.type == \"customEmbed\") {\n      customElem = createElement(\"div\", {\n        className: styles.customEmbedContainer + \" imageModal\"\n      }, elem.embed);\n    }\n    return customElem;\n  };\n  var initZoom = function initZoom(ref) {\n    if (imgAnimation == \"fade\") {\n      if (ref.state.scale <= 1) {\n        setZoomedIn(false);\n      } else {\n        setZoomedIn(true);\n      }\n    } else {\n      if (ref.state.scale <= 1.65) {\n        setZoomedIn(false);\n      } else {\n        setZoomedIn(true);\n      }\n    }\n  };\n  var regularImgPaneNodes = Array.apply(null, Array(images.length)).map(function (_, index) {\n    return createElement(\"div\", {\n      key: index\n    }, enableMagnifyingGlass == true ? createElement(Magnifier, {\n      src: images[index].src,\n      className: styles.magnifyWrapper + \" \" + styles.lightbox_img,\n      height: imgContainHeight,\n      width: imgContainWidth,\n      mgShowOverflow: false\n    }) : createElement(\"div\", {\n      className: getEmblaClass(index),\n      onTouchStart: onTouchStart,\n      onTouchMove: onTouchMove,\n      onTouchEnd: onTouchEnd,\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp\n    }, createElement(TransformWrapper, {\n      ref: function ref(el) {\n        return zoomReferences.current[index] = el;\n      },\n      onWheel: function onWheel(ref, wheelEvent) {\n        initZoom(ref);\n      },\n      disabled: disableZoom,\n      panning: {\n        disabled: isPanningDisabled()\n      },\n      key: index,\n      onZoom: function onZoom(ref, event) {\n        initZoom(ref);\n      },\n      onZoomStop: function onZoomStop(ref, event) {\n        initZoom(ref);\n      },\n      onTransformed: function onTransformed(ref, event) {\n        initZoom(ref);\n      },\n      onPinchingStop: function onPinchingStop(ref, event) {\n        initZoom(ref);\n      },\n      centerZoomedOut: true,\n      initialScale: 1,\n      maxScale: maxScale,\n      alignmentAnimation: {\n        sizeX: 0,\n        sizeY: 0\n      }\n    }, createElement(TransformComponent, {\n      wrapperClass: styles.react_transform_wrapper,\n      contentClass: styles.react_transform_component,\n      wrapperStyle: {\n        maxWidth: '100vw',\n        height: '100vh',\n        margin: 'auto'\n      },\n      contentStyle: {\n        maxWidth: '100vw',\n        height: '100vh',\n        margin: 'auto',\n        display: 'grid'\n      },\n      key: index\n    }, createElement(\"div\", {\n      className: (props.fullScreen ? styles.slideshow_img : styles.slideshow_img) + \" \" + (props.lightboxImgClass ? props.lightboxImgClass : \"\") + \"\\n                      \" + (displayImgMetadata ? styles.slideshow_img_metadata : \"\") + \"\\n                      \"\n    }, getLightboxElem(index))))));\n  });\n  var initMagnifyingGlass = function initMagnifyingGlass() {\n    if (!enableMagnifyingGlass) {\n      initImageDimensions();\n    } else {\n      setImgAnimation('imgDrag');\n    }\n    setMagnifyingGlass(!enableMagnifyingGlass);\n  };\n  var getMetadataPanelStyle = function getMetadataPanelStyle() {\n    var style_object = {};\n    if (isMobile && showImgMetadataPanel) {\n      style_object = {\n        height: \"100vh\"\n      };\n    }\n    style_object[\"color\"] = getMetadataTextColor();\n    return style_object;\n  };\n  var initImageDimensions = function initImageDimensions() {\n    var img;\n    if (imgSlideIndex == 0 || imgSlideIndex % images.length == 0) {\n      img = document.getElementById('img');\n    } else {\n      img = imageRef.current;\n    }\n    var ratio = img.naturalWidth / img.naturalHeight;\n    var width = img.height * ratio;\n    var height = img.height;\n    if (width > img.width) {\n      width = img.width;\n      height = img.width / ratio;\n    }\n    setImgContainHeight(height);\n    setImgContainWidth(width);\n  };\n  var initFullScreenChangeEventListeners = function initFullScreenChangeEventListeners() {\n    document.addEventListener('fullscreenchange', exitFullScreenHandler);\n    document.addEventListener('webkitfullscreenchange', exitFullScreenHandler);\n    document.addEventListener('MSFullscreenChange', exitFullScreenHandler);\n    document.addEventListener('mozfullscreenchange', exitFullScreenHandler);\n  };\n  var removeFullScreenChangeEventListeners = function removeFullScreenChangeEventListeners() {\n    document.removeEventListener('fullscreenchange', exitFullScreenHandler);\n    document.removeEventListener('webkitfullscreenchange', exitFullScreenHandler);\n    document.removeEventListener('MSFullscreenChange', exitFullScreenHandler);\n    document.removeEventListener('mozfullscreenchange', exitFullScreenHandler);\n  };\n  var initEventListeners = function initEventListeners() {\n    if (isBrowser()) {\n      window.addEventListener('resize', handleWindowResize);\n    }\n  };\n  var removeEventListeners = function removeEventListeners() {\n    removeOnSelectListener();\n    if (isBrowser()) {\n      window.removeEventListener('resize', handleWindowResize);\n    }\n  };\n  var setReducedMotion = function setReducedMotion(mediaQuery) {\n    if (mediaQuery.matches) {\n      setImgAnimation('fade');\n    }\n  };\n  var checkAndInitReducedMotion = function checkAndInitReducedMotion() {\n    var reducedMotionMediaQuery = '';\n    if (isBrowser()) {\n      var _reducedMotionMediaQu;\n      reducedMotionMediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n      if (!reducedMotionMediaQuery || reducedMotionMediaQuery.matches) {\n        setImgAnimation('fade');\n      }\n      if ((_reducedMotionMediaQu = reducedMotionMediaQuery) !== null && _reducedMotionMediaQu !== void 0 && _reducedMotionMediaQu.addEventListener) {\n        reducedMotionMediaQuery.addEventListener('change', setReducedMotion(reducedMotionMediaQuery));\n      } else {\n        reducedMotionMediaQuery.addListener(setReducedMotion(reducedMotionMediaQuery));\n      }\n    }\n    return reducedMotionMediaQuery;\n  };\n  var initPropsForControlIcons = function initPropsForControlIcons() {\n    if (props.showFullScreenIcon != undefined) {\n      setDisplayFullScreenIcon(props.showFullScreenIcon);\n    }\n    if (props.showThumbnailIcon != undefined) {\n      setDisplayThumbnailIcon(props.showThumbnailIcon);\n    }\n    if (props.showSlideshowIcon != undefined) {\n      setDisplaySlideshowIcon(props.showSlideshowIcon);\n    }\n    if (props.showMagnificationIcons != undefined) {\n      setDisplayMagnificationIcons(props.showMagnificationIcons);\n    }\n  };\n  var initProps = function initProps() {\n    if (props.showControls != undefined) {\n      setShowControls(props.showControls);\n      if (props.showControls == false) {\n        setDisplayMagnificationIcons(false);\n      }\n    }\n    initPropsForControlIcons();\n    if (props.disableImageZoom) {\n      setDisableZoom(props.disableImageZoom);\n    }\n    if (isBrowser()) {\n      setWidth(window.innerWidth);\n    }\n  };\n  useInterval(function () {\n    if (isRTL) {\n      updateImageSlideshow(-1);\n    } else {\n      updateImageSlideshow(1);\n    }\n  }, isSlideshowPlaying ? slideshowInterval : null);\n  var openFullScreen = function openFullScreen(lightbox_elem) {\n    if (lightbox_elem.requestFullscreen) {\n      lightbox_elem.requestFullscreen();\n    } else if (lightbox_elem.webkitRequestFullscreen) {\n      lightbox_elem.webkitRequestFullscreen();\n    } else if (lightbox_elem.msRequestFullscreen) {\n      lightbox_elem.msRequestFullscreen();\n    }\n  };\n  var closeFullScreen = function closeFullScreen(document) {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  };\n  var isBrowser = function isBrowser() {\n    return typeof window !== \"undefined\";\n  };\n  var initRTLImages = function initRTLImages() {\n    var imagesMetadataCopy = props.images;\n    imagesMetadataCopy.reverse();\n    setImages(imagesMetadataCopy);\n    if (images.length > 0) {\n      var imagesRTLCopy = images;\n      imagesRTLCopy.reverse();\n      setImages(imagesRTLCopy);\n    }\n  };\n  var initImages = function initImages(isMounted, updateImages) {\n    if (coverMode && props.images) {\n      if (props.coverImageInLightbox == false) {\n        var filterImages = props.images.filter(function (img) {\n          return img.cover != true;\n        });\n        setImages(filterImages);\n      } else {\n        setImages(props.images);\n      }\n    }\n    if (updateImages || !isInit) {\n      if (lightboxIdentifier && props.children) {\n        var img_gallery = document.querySelectorAll(\"[data-lightboxjs=\" + lightboxIdentifier + \"]\");\n        var originalImageAttr = false;\n        var img_elements = [];\n        if (img_gallery.length > 0) {\n          var _loop = function _loop(i) {\n            var img = img_gallery[i];\n            var attr_val = img.getAttribute('data-lightboxjs');\n            if (attr_val == lightboxIdentifier) {\n              img.addEventListener('click', function () {\n                var index;\n                if (isRTL) {\n                  index = getRTLIndex(img_gallery.length, i);\n                } else {\n                  index = i;\n                }\n                var reactSwipeOptionConfig = reactSwipeOptions;\n                reactSwipeOptionConfig.startIndex = index;\n                if (isMounted) setReactSwipeOptions(reactSwipeOptionConfig);\n                setZoomIdx(index);\n                openModal(index);\n              }, false);\n              img.classList.add('cursor-pointer');\n              var original_img_src = img.getAttribute('data-lightboxjs-original');\n              if (original_img_src) {\n                img_elements.push({\n                  src: original_img_src,\n                  alt: img.alt,\n                  loaded: false\n                });\n                originalImageAttr = true;\n              } else if (img.src) {\n                img_elements.push({\n                  src: img.src,\n                  alt: img.alt,\n                  loaded: false\n                });\n              } else if (img.tagName == 'DIV') {\n                var corresponding_img_item = props.images[i];\n                var img_src = corresponding_img_item.src;\n                var img_alt = corresponding_img_item.alt;\n                img_elements.push({\n                  src: img_src,\n                  alt: img_alt,\n                  loaded: false\n                });\n              }\n            }\n          };\n          for (var i = 0; i <= img_gallery.length - 1; i++) {\n            _loop(i);\n          }\n          if (isMounted && !coverMode) {\n            if (originalImageAttr) {\n              setImages(img_elements);\n            } else if (props.showAllImages != true && props.framework != \"next\") {\n              setImages(img_elements);\n            } else if (props.framework == \"next\" && !originalImageAttr) {\n              setImages(props.images);\n            } else {\n              setImages(props.images);\n            }\n          }\n        } else {\n          if (props.images) {\n            setImages(props.images);\n          }\n        }\n      } else if (lightboxIdentifier && props.images && !props.children) {\n        setImages(props.images);\n      } else if (!lightboxIdentifier && props.images && !props.children) {\n        setImages(props.images);\n      } else if (!props.render) {\n        var imgArray = [];\n        if (!Array.isArray(props.children)) {\n          imgArray.push(props.children);\n        } else {\n          imgArray = props.children;\n        }\n        var imgs = [];\n        for (var k = 0; k < imgArray.length; k++) {\n          var img_elem = imgArray[k];\n          var img_obj = {\n            src: img_elem.props.src,\n            alt: img_elem.props.alt,\n            loaded: false\n          };\n          imgs.push(img_obj);\n        }\n        if (isRTL) {\n          imgs.reverse();\n        }\n        if (isMounted) setImages(imgs);\n        setPreviewImageElems(imgArray);\n      } else {\n        if (isMounted) {\n          setImages(props.images);\n        }\n      }\n      if (isMounted) setIsInit(true);\n    }\n  };\n  var dispatchSlideSelectEvents = function dispatchSlideSelectEvents(newIndex, prevIndex) {\n    if (newIndex == 0 && prevIndex == images.length - 1) {\n      dispatchNextImgEvent(newIndex);\n    } else if (newIndex == images.length - 1 && prevIndex == 0) {\n      dispatchPrevImgEvent(newIndex);\n    } else if (newIndex > prevIndex) {\n      dispatchNextImgEvent(newIndex);\n    } else if (newIndex < prevIndex) {\n      dispatchPrevImgEvent(newIndex);\n    }\n  };\n  var onSelect = useCallback(function () {\n    if (!emblaApi) return;\n    var newSlideIndex = emblaApi.selectedScrollSnap();\n    var prevSlideIndex = emblaApi.previousScrollSnap();\n    if (newSlideIndex != prevSlideIndex) {\n      initSlide(newSlideIndex);\n      resetMedia(prevSlideIndex);\n      dispatchSlideSelectEvents(newSlideIndex, prevSlideIndex);\n    }\n    if (emblaThumbsApi) {\n      emblaThumbsApi.scrollTo(emblaApi.selectedScrollSnap());\n    }\n  }, [emblaApi, emblaThumbsApi]);\n  var onReinit = useCallback(function () {\n    if (!emblaApi) return;\n    setEmblaReinitialized(true);\n  }, [emblaApi, emblaReinitialized]);\n  var handleResize = function handleResize(entry) {\n    emblaApi === null || emblaApi === void 0 ? void 0 : emblaApi.reInit();\n  };\n  var rootNode = (emblaApi === null || emblaApi === void 0 ? void 0 : emblaApi.rootNode()) || null;\n  useResizeObserver(rootNode, handleResize);\n  var removeOnSelectListener = useCallback(function () {\n    if (emblaApi) emblaApi.off('select', onSelect);\n  }, [emblaApi, onSelect]);\n  useEffect(function () {\n    if (emblaApi) {\n      if (zoomedIn) {\n        emblaApi.reInit({\n          watchDrag: false\n        });\n      } else {\n        emblaApi.reInit({\n          watchDrag: true\n        });\n      }\n    }\n  }, [zoomedIn]);\n  useEffect(function () {\n    if (displayImgMetadata) {\n      if (width != 0 && isMobile) {\n        setShowImgMetadataPanel(false);\n      } else {\n        setShowImgMetadataPanel(true);\n      }\n    }\n  }, [width]);\n  useEffect(function () {\n    if (!emblaApi) return;\n    if (showModal) emblaApi.reInit();\n  }, [showModal, emblaApi]);\n  useEffect(function () {\n    if (emblaApi) emblaApi.on('select', onSelect);\n  }, [emblaApi, onSelect]);\n  useEffect(function () {\n    if (emblaApi) emblaApi.on('reInit', onReinit);\n  }, [emblaApi, onReinit]);\n  useEffect(function () {\n    initStyling();\n    if (props.iconColor) {\n      setIconColor(props.iconColor);\n    }\n    if (props.backgroundColor) {\n      setBackgroundColor(props.backgroundColor);\n    }\n  }, [props.theme, props.iconColor, props.backgroundColor]);\n  useEffect(function () {\n    initImages(true, true);\n  }, [props.images, props.displayedImages]);\n  var prevValue = usePrevious(open);\n  var prevImages = usePrevious(images);\n  var areObjectsEqual = function areObjectsEqual(object1, object2) {\n    return typeof object1 === 'object' && object1 != null && typeof object2 === 'object' && object2 != null && Object.keys(object1).length > 0 ? Object.keys(object1).length === Object.keys(object2).length && Object.keys(object1).every(function (p) {\n      return areObjectsEqual(object1[p], object2[p]);\n    }) : object1 === object2;\n  };\n  var imagesEqualToPrevious = function imagesEqualToPrevious(images) {\n    if (images && prevImages) {\n      if ((images && (images === null || images === void 0 ? void 0 : images.length)) != (prevImages && (prevImages === null || prevImages === void 0 ? void 0 : prevImages.length))) {\n        return false;\n      }\n      var imgArray;\n      if (images.length > prevImages) {\n        imgArray = images;\n      } else {\n        imgArray = prevImages;\n      }\n      for (var i = 0; i < imgArray.length; i++) {\n        var images_copy = images.slice(0);\n        var prevImages_copy = prevImages.slice(0);\n        var image = images_copy[i];\n        var prevImage = prevImages_copy[i];\n        if (image[\"loaded\"]) {\n          delete image[\"loaded\"];\n        }\n        if (prevImage[\"loaded\"]) {\n          delete prevImage[\"loaded\"];\n        }\n        if (!areObjectsEqual(image, prevImage)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n  useEffect(function () {\n    var starting_index = 0;\n    if (props.startingSlideIndex) {\n      starting_index = wrapNums(0, images.length, props.startingSlideIndex);\n      setStartingIndex(starting_index);\n    }\n    if (props.open == true && imagesEqualToPrevious(images) == false && props.startingSlideIndex) {\n      if (props.images) {\n        setImages(props.images);\n      }\n      openModalWithSlideNum(starting_index);\n    } else if (props.open && prevValue != true) {\n      if (props.images) {\n        setImages(props.images);\n      }\n      setIsDisplay(true);\n      openModalWithSlideNum(starting_index);\n    } else if (props.open == false) {\n      setIsDisplay(false);\n      closeModal();\n    }\n  }, [props.open, props.startingSlideIndex, images]);\n  useEffect(function () {\n    if (isOpen == true) {\n      dispatchOpenEvent();\n    } else {\n      dispatchCloseEvent();\n    }\n  }, [isOpen]);\n  useEffect(function () {\n    if (props.render) {\n      if (!props.images) {\n        console.error('Array of images must be passed to `SlideshowLightbox` (with the `images` prop) if using custom render method. ');\n      }\n    }\n    var isMounted = true;\n    if (isMounted) initProps();\n    if (coverMode && props.images) {\n      if (props.coverImageInLightbox == false) {\n        var filterImages = props.images.filter(function (img) {\n          return img.cover != true;\n        });\n        setImages(filterImages);\n      } else {\n        setImages(props.images);\n      }\n    }\n    if (isMounted) {\n      initEventListeners();\n    }\n    var reducedMotionMediaQuery = checkAndInitReducedMotion();\n    if (displayImgMetadata) {\n      setImgAnimation(\"fade\");\n    }\n    if (!isInit) {\n      initImages(isMounted, false);\n      if (props.images && isRTL == true) {\n        initRTLImages();\n      }\n    }\n    if (isMounted) initStyling();\n    return function () {\n      isMounted = false;\n      removeEventListeners();\n      reducedMotionMediaQuery.removeEventListener('change', reducedMotionMediaQuery);\n    };\n  }, []);\n  return createElement(\"div\", {\n    className: \"\" + initWrapperClassname()\n  }, props.images && props.children && lightboxIdentifier == false ? props.children : null, props.images && lightboxIdentifier == false ? props.images.map(function (elem, index) {\n    return createElement(\"img\", {\n      className: (props.imgClassName ? props.imgClassName : '') + \" \" + styles.cursorPointer,\n      src: !isVideo(index) ? elem.src : elem.thumbnail,\n      onClick: function onClick() {\n        var img_index;\n        if (isRTL) {\n          img_index = getRTLIndex(props.images.length, index);\n        } else {\n          img_index = index;\n        }\n        openModalWithSlideNum(img_index);\n      },\n      key: index\n    });\n  }) : null, lightboxIdentifier != false && props.children && coverMode == false ? props.children : null, lightboxIdentifier == false && props.images || coverMode == true ? null : previewImageElems.filter(function (elem) {\n    return elem.type == 'img';\n  }).map(function (elem, index) {\n    return createElement(\"img\", Object.assign({}, elem.props, {\n      className: (elem.props.className ? elem.props.className : '') + \" \" + styles.cursorPointer,\n      onClick: function onClick() {\n        var img_index;\n        if (isRTL) {\n          img_index = getRTLIndex(previewImageElems.length, index);\n        } else {\n          img_index = index;\n        }\n        openModalWithSlideNum(img_index);\n      },\n      key: index\n    }));\n  }), coverMode ? props.children : false, createElement(AnimateSharedLayout, {\n    type: 'crossfade'\n  }, createElement(AnimatePresence, {\n    initial: false,\n    exitBeforeEnter: true\n  }, showModal !== false && createElement(Portal, null, createElement(Div100vh, null, createElement(motion.div, {\n    className: \"\" + styles.slideshowAnimContainer,\n    key: 'slideshowAnimContainer',\n    id: 'slideshowAnim',\n    style: {\n      backgroundColor: backgroundColor\n    },\n    initial: \"inactive\",\n    variants: variants,\n    animate: showModal ? \"active\" : \"inactive\",\n    exit: \"inactive\",\n    transition: {\n      duration: \"0.3\"\n    },\n    onAnimationComplete: function onAnimationComplete() {\n      var animEntered = !animationEntered;\n      setAnimationEntered(animEntered);\n      if (animEntered == true) {\n        var _document$getElementB;\n        var prevFocusedElement = document.activeElement;\n        setPrevFocusedElem(prevFocusedElement);\n        (_document$getElementB = document.getElementById(\"lightboxContainer\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      } else {\n        prevFocusedElem === null || prevFocusedElem === void 0 ? void 0 : prevFocusedElem.focus();\n      }\n      if (emblaApi) emblaApi.reInit();\n    }\n  }, createElement(\"div\", {\n    className: \"\" + styles.lightboxContainer,\n    id: \"lightboxContainer\",\n    tabIndex: -1,\n    role: \"dialog\",\n    onClick: function onClick(e) {\n      if (modalCloseOption == \"clickOutside\") {\n        checkModalClick(e);\n      }\n    }\n  }, createElement(\"section\", {\n    className: styles.iconsHeader + \" \" + (iconColor ? '' : getIconStyle()) + \" imageModal\",\n    style: {\n      color: iconColor\n    }\n  }, createElement(KeyHandler, {\n    keyValue: 'ArrowLeft',\n    code: '37',\n    onKeyHandle: function onKeyHandle() {\n      prevSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'ArrowRight',\n    code: '39',\n    onKeyHandle: function onKeyHandle() {\n      nextSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Escape',\n    code: '27',\n    onKeyHandle: function onKeyHandle(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!isBrowserFullScreen) {\n        closeModal();\n      }\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Left',\n    code: '37',\n    onKeyHandle: function onKeyHandle() {\n      prevSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Right',\n    code: '39',\n    onKeyHandle: function onKeyHandle() {\n      nextSlide();\n    }\n  }), createElement(KeyHandler, {\n    keyValue: 'Esc',\n    code: '27',\n    onKeyHandle: function onKeyHandle(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!isBrowserFullScreen) {\n        closeModal();\n      }\n    }\n  }), showControls == true && createElement(\"div\", {\n    className: \"\" + styles.controls\n  }, disableZoom || displayMagnificationIcons == false ? null : createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      if (enableMagnifyingGlass) {\n        initMagnifyingGlass();\n      }\n      if (zoomReferences.current[zoomIdx] != null) {\n        zoomReferences.current[zoomIdx].zoomIn();\n      }\n      setZoomedIn(true);\n    }\n  }, createElement(ZoomIn, {\n    size: 24,\n    color: iconColor ? iconColor : undefined,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {}\n  }))), disableZoom || displayMagnificationIcons == false ? null : createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      zoomReferences.current[zoomIdx].zoomOut();\n      var scale = zoomReferences.current[zoomIdx].state.scale;\n      if (scale == 1 || scale == 1.65) {\n        setZoomedIn(false);\n      }\n    }\n  }, createElement(ZoomOut, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))), displayDownloadBtn() ? createElement(\"button\", {\n    onClick: function onClick() {\n      saveImage();\n    }\n  }, createElement(Download, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  })) : null, displayFullScreenIcon ? isBrowserFullScreen ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      isBrowserFullScreen ? exitFullScreen() : fullScreen();\n    }\n  }, createElement(FullscreenExit, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      isBrowserFullScreen ? exitFullScreen() : fullScreen();\n    }\n  }, createElement(Fullscreen, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, isMobile && displayImgMetadata ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      setShowImgMetadataPanel(!showImgMetadataPanel);\n      setDisplayLoader(false);\n    }\n  }, createElement(InfoCircle, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, displayThumbnailIcon ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      setShowThumbnails(!showThumbnails);\n    }\n  }, createElement(GridFill, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, shouldDisplayMagnifyingGlassIcon() ? createElement(motion.div, null, createElement(\"button\", {\n    onClick: function onClick() {\n      return initMagnifyingGlass();\n    }\n  }, createElement(Search, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, shouldDisplaySlideshowIcon() ? createElement(motion.div, {\n    className: styles.slideshowPlayBtn\n  }, isSlideshowPlaying ? createElement(\"button\", {\n    onClick: function onClick() {\n      isSlideshowPlaying ? stopSlideshow() : playSlideshow();\n    }\n  }, createElement(PauseCircleFill, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  })) : createElement(\"button\", {\n    onClick: function onClick() {\n      isSlideshowPlaying ? stopSlideshow() : playSlideshow();\n    }\n  }, createElement(PlayCircleFill, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    style: iconColor ? {\n      color: iconColor\n    } : {},\n    color: iconColor ? iconColor : undefined\n  }))) : null, customControlComponent ? createElement(motion.div, null, customControlComponent) : null), createElement(motion.div, {\n    className: styles.closeIcon + \" \" + (props.showControls == false ? styles.mlAuto : \"\")\n  }, createElement(\"button\", {\n    id: \"closeBtn\",\n    className: \"\" + (props.showControlsBar == false && props.showControls == false ? styles.closeButtonRounded : styles.closeButton),\n    onClick: function onClick() {\n      closeModal();\n    }\n  }, createElement(XLg, {\n    id: \"closeIcon\",\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    color: iconColor ? iconColor : undefined,\n    style: getCloseIconBtnStyle()\n  })))), displayArrows() ? createElement(\"div\", null, createElement(\"div\", {\n    className: rightArrowStyle ? styles.next1 + \" \" + getArrowStyle() + \" imageModal\" : \"imageModal\",\n    style: rightArrowStyle,\n    onClick: function onClick() {\n      nextSlide();\n    }\n  }, nextArrowElem ? nextArrowElem : createElement(\"span\", {\n    className: \"\" + (props.rightArrowClassname ? props.rightArrowClassname : \"\")\n  }, \"\\u276F\")), createElement(\"div\", {\n    className: leftArrowStyle ? styles.prev1 + \" \" + getArrowStyle() + \" imageModal \" + (displayImgMetadata ? styles.prev1_metadata : \"\") : \"imageModal\",\n    style: leftArrowStyle,\n    onClick: function onClick() {\n      prevSlide();\n    }\n  }, prevArrowElem ? prevArrowElem : createElement(\"span\", {\n    className: \"\" + (props.leftArrowClassname ? props.leftArrowClassname : \"\")\n  }, \"\\u276E\"))) : null, createElement(AnimatePresence, {\n    initial: false,\n    custom: direction\n  }, createElement(\"div\", {\n    className: styles.slideshowInnerContainerThumbnails + \" \" + styles.embla + \" \" + (isImageCaption() && showControlsBar == true ? styles.slideImageAndCaption : '') + \" \\n                          \" + styles.slideshowInnerContainer + \"\\n                          \" + (props.showControlsBar == false || props.fullScreen ? styles.hideControlsBar : \"\") + \"\\n                          \" + (displayImgMetadata ? styles.slideshowInnerContainer_imgMetadata : \"\") + \"  \"\n  }, shouldDisplayMetadataPanel() ? createElement(\"div\", {\n    className: styles.metadata,\n    style: getMetadataPanelStyle()\n  }, isLoading ? null : createElement(\"div\", {\n    className: styles.metadataInnerContainer\n  }, getMetadataPanel(), isMobile && showImgMetadataPanel ? createElement(\"button\", {\n    className: styles.imgMetadataCloseBtn,\n    onClick: function onClick() {\n      setShowImgMetadataPanel(false);\n    }\n  }, createElement(XLg, {\n    size: 24,\n    className: styles.lightboxjs_icon + \" \" + (iconColor ? '' : getIconStyle()),\n    color: iconColor ? iconColor : undefined,\n    style: iconColor ? {\n      color: iconColor\n    } : {}\n  })) : null)) : null, createElement(\"div\", {\n    className: styles.embla__viewport + \" \\n                            \" + (displayImgMetadata ? styles.embla__container_imgMetadata : \"\"),\n    ref: showModal ? emblaRef : null\n  }, createElement(\"div\", {\n    className: \"\\n                          \" + (imgAnimation == \"fade\" ? styles.imgfade : \"\") + \" \\n                          \" + styles.embla__container + \"\\n                            \" + (displayImgMetadata ? styles.embla__container_imgMetadata : \"\")\n  }, regularImgPaneNodes))), displayLoader == true && !isHTMLVideo(slideIndex) ? createElement(\"span\", {\n    key: 'loader',\n    className: styles.loader + \" \" + getLoaderThemeClass()\n  }) : null), createElement(\"div\", {\n    className: styles.thumbnailsOuterContainer + \" \" + (isImageCaption() ? styles.thumbnailsAndCaption : '') + \"\\n                      \" + (displayImgMetadata ? styles.thumbnailsOuterContainer_metadata : \"\") + \" \",\n    style: getThumbnailsOuterContainerStyle()\n  }, isImageCaption() ? createElement(\"div\", {\n    className: styles.imgTitleContainer + \" imageModal\"\n  }, createElement(\"p\", {\n    className: \"\" + styles.imgTitle,\n    key: 'imgCaption' + slideIndex,\n    style: props.captionStyle ? props.captionStyle : {\n      color: textColor\n    }\n  }, getImageCaption())) : null, createElement(AnimatePresence, {\n    initial: animatedThumbnails\n  }, showThumbnails !== false && navigationDots !== true && createElement(motion.div, {\n    initial: 'hidden',\n    exit: 'hidden',\n    animate: 'visible',\n    style: imagesLoaded ? {} : {\n      display: 'displayHidden'\n    },\n    transition: {\n      type: 'spring',\n      duration: 0.75\n    },\n    variants: thumbnailVariants,\n    className: styles.thumbnails + \" \" + (isImageCaption() ? styles.thumbnailsWithCaption : '')\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs + \" \" + styles.thumbnails\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs__viewport,\n    ref: emblaThumbsRef\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs__container\n  }, frameworkID == 'next' && props.images ? props.images.map(function (img, index) {\n    return getImageThumbnail(img, index, true);\n  }) : images.map(function (img, index) {\n    return getImageThumbnail(img, index, false);\n  }))))), showThumbnails !== true && navigationDots !== false && createElement(motion.div, {\n    initial: 'hidden',\n    exit: 'hidden',\n    animate: 'visible',\n    style: imagesLoaded ? {} : {\n      display: 'displayHidden'\n    },\n    transition: {\n      type: 'spring',\n      duration: 0.75\n    },\n    variants: thumbnailVariants,\n    className: styles.thumbnails + \" \" + (isImageCaption() ? styles.thumbnailsWithCaption : '')\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs + \" \" + styles.thumbnails\n  }, createElement(\"div\", {\n    className: styles.embla_thumbs__viewport,\n    ref: emblaThumbsRef\n  }, createElement(\"div\", {\n    className: styles.navigationDots + \" \" + styles.embla_thumbs__container + \" imageModal\\n                                \"\n  }, frameworkID == 'next' && props.images ? props.images.map(function (img, index) {\n    return getNavigationDot(index);\n  }) : images.map(function (img, index) {\n    return getNavigationDot(index);\n  }))))))))))))));\n});\nvar themes$1 = {\n  day: {\n    background: 'white',\n    iconColor: 'black',\n    thumbnailBorder: 'solid transparent 2px',\n    textColor: 'black'\n  },\n  night: {\n    background: '#151515',\n    iconColor: 'silver',\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\n    textColor: 'silver'\n  },\n  lightbox: {\n    background: 'rgba(12, 12, 12, 0.93)',\n    iconColor: 'silver',\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\n    textColor: 'silver'\n  }\n};\nvar defaultTheme$1 = \"lightbox\";\nvar AnimImage = function AnimImage(props) {\n  var _useState = useState(props.backgroundColor ? props.backgroundColor : themes$1[defaultTheme$1].background),\n    backgroundColor = _useState[0],\n    setBackgroundColor = _useState[1];\n  var _useState2 = useState(props.iconColor ? props.iconColor : themes$1[defaultTheme$1].iconColor),\n    iconColor = _useState2[0],\n    setIconColor = _useState2[1];\n  var _useState3 = useState(props.fullScreen ? props.fullScreen : false),\n    fullScreen = _useState3[0];\n  var _useState4 = useState(props.modalClose ? props.modalClose : \"default\"),\n    modalCloseOption = _useState4[0];\n  var _useState5 = useState(props.disableImageZoom ? props.disableImageZoom : false),\n    disableZoom = _useState5[0],\n    setDisableZoom = _useState5[1];\n  var _useState6 = useState(props.roundedImages ? props.roundedImages : false),\n    imageRoundedBorder = _useState6[0];\n  var _useState7 = useState(props.showFullScreenIcon ? props.showFullScreenIcon : true),\n    displayFullScreenIcon = _useState7[0];\n  var _useState8 = useState(props.className ? props.className : \"\"),\n    className = _useState8[0];\n  var _useState9 = useState(props.wrapperClassName ? props.wrapperClassName : \"\"),\n    imgWrapperClass = _useState9[0];\n  var _useState10 = useState(props.width ? props.width : null),\n    width = _useState10[0];\n  var _useState11 = useState(props.height ? props.height : null),\n    height = _useState11[0];\n  var _useState12 = useState(props.lightboxImgClass ? props.lightboxImgClass : \"\"),\n    lightboxImgClassName = _useState12[0];\n  var _useState13 = useState(props.className ? props.className : \"\"),\n    imgClass = _useState13[0];\n  var _useState14 = useState(props.showMagnificationIcons ? props.showMagnificationIcons : true),\n    displayMagnificationIcons = _useState14[0],\n    setDisplayMagnificationIcons = _useState14[1];\n  var _useState15 = useState(props.showControls ? props.showControls : true),\n    displayControls = _useState15[0],\n    setDisplayControls = _useState15[1];\n  var _useState16 = useState(props.downloadImages ? props.downloadImages : false),\n    showDownloadBtn = _useState16[0];\n  var _useState17 = useState(props.rtl ? props.rtl : false);\n  var _useState18 = useState(props.lightboxIdentifier ? props.lightboxIdentifier : \"\"),\n    lightboxIdentifier = _useState18[0];\n  var _useState19 = useState(props.framework ? props.framework : ''),\n    frameworkID = _useState19[0];\n  var _useState20 = useState([]),\n    images = _useState20[0],\n    setImages = _useState20[1];\n  var _React$useState = React__default.useState(),\n    state = _React$useState[0];\n  var initProps = function initProps() {\n    if (props.showControls != undefined) {\n      setDisplayControls(props.showControls);\n      setDisableZoom(props.showControls);\n      if (props.showControls == false) {\n        setDisplayMagnificationIcons(false);\n      }\n    }\n  };\n  useEffect(function () {\n    if (props.theme) {\n      if (themes$1[props.theme]) {\n        setBackgroundColor(themes$1[props.theme].background);\n        setIconColor(themes$1[props.theme].iconColor);\n      }\n    }\n    if (props.image && images.length == 0 && frameworkID == \"next\") {\n      var imgs = [];\n      imgs.push(props.image);\n      setImages(imgs);\n    } else {\n      setImages(null);\n    }\n    return function () {};\n  }, [state]);\n  var getImage = function getImage() {\n    if (frameworkID == \"next\" && props.children != undefined) {\n      return props.children;\n    } else if (frameworkID != \"next\") {\n      return React__default.createElement(\"img\", {\n        src: props.image ? props.image.src : \"\",\n        alt: props.image.title,\n        width: width != null ? width : \"100%\",\n        height: height != null ? height : \"100%\",\n        className: \"\" + className\n      });\n    }\n  };\n  useEffect(function () {\n    var isMounted = true;\n    if (isMounted) initProps();\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return React__default.createElement(SlideshowLightbox, {\n    showSlideshowIcon: false,\n    showThumbnails: false,\n    backgroundColor: backgroundColor,\n    iconColor: iconColor,\n    theme: props.theme,\n    lightboxIdentifier: lightboxIdentifier,\n    fullScreen: fullScreen,\n    showMagnificationIcons: displayMagnificationIcons,\n    showFullScreenIcon: displayFullScreenIcon,\n    downloadImages: showDownloadBtn,\n    roundedImages: imageRoundedBorder,\n    disableImageZoom: disableZoom,\n    showArrows: false,\n    showThumbnailIcon: false,\n    showControls: displayControls,\n    modalClose: modalCloseOption,\n    lightboxImgClass: lightboxImgClassName,\n    imgClassName: imgClass,\n    imageComponent: true,\n    framework: frameworkID,\n    imgWrapperClassName: imgWrapperClass,\n    images: images\n  }, getImage());\n};\nvar initLightboxJS = function initLightboxJS(licenseKey, plan_type) {\n  var body = {\n    license_key: licenseKey,\n    plan_type: plan_type\n  };\n  axios.post('https://lightboxjs-server.herokuapp.com/license', body).then(function (response) {\n    var licenseKeyValid = response.data.license_valid;\n    if (!licenseKeyValid) {\n      console.warn(\"Lightbox.js: Invalid license key specified, a valid license key must be provided.\");\n    }\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n};\nexport { AnimImage as Image, SlideshowLightbox, initLightboxJS };","map":{"version":3,"names":["wrapNums","minNum","maxNum","v","rangeSize","shouldAutoplay","elem","type","autoPlay","getVideoHeight","videoHeight","getVideoWidth","videoWidth","getScale","num","maxScale","thumbnailVariants","visible","opacity","y","hidden","themes","day","background","iconColor","thumbnailBorder","textColor","metadataTextColor","night","lightbox","inactiveThumbnailBorder","defaultTheme","mobileWidth","usePrevious","value","ref","useRef","useEffect","current","SlideshowLightbox","forwardRef","props","useImperativeHandle","reset","initImages","_useState","useState","_useState$","imgSlideIndex","direction","setImgSlideIndex","_useState2","showModal","setShowModal","_useState3","slideDuration","slideAnimDuration","_useState4","isSlideshowPlaying","setIsSlideshowPlaying","_useState5","emblaReinitialized","setEmblaReinitialized","_useState6","images","setImages","_useState7","previewImageElems","setPreviewImageElems","slideIndex","length","_useState8","loop","startIndex","active","duration","dragThreshold","skipSnaps","reactSwipeOptions","setReactSwipeOptions","initialThumbnailOptions","containScroll","dragFree","_useState9","width","setWidth","isMobile","_useState10","thumbnailSwipeOptions","setThumbnailSwipeOptions","_useState11","carouselReady","setCarouselReady","_useState12","zoomedIn","setZoomedIn","_useState13","setIsDisplay","_useState14","isOpen","setIsOpen","_useState15","prevFocusedElem","setPrevFocusedElem","_useState16","animationEntered","setAnimationEntered","_useState17","magnifyingGlass","magnifyingGlassFeature","_useState18","disableImageZoom","disableZoom","setDisableZoom","_useState19","slideshowInterval","_useState20","rightArrowStyle","_useState21","leftArrowStyle","_useState22","maxZoomScale","_useState23","roundedImages","isRounded","setIsRounded","_useState24","showControls","setShowControls","_useState25","showFullScreenIcon","displayFullScreenIcon","setDisplayFullScreenIcon","_useState26","showThumbnailIcon","displayThumbnailIcon","setDisplayThumbnailIcon","_useState27","showSlideshowIcon","setDisplaySlideshowIcon","_useState28","showMagnificationIcons","displayMagnificationIcons","setDisplayMagnificationIcons","_useState29","nextArrow","nextArrowElem","_useState30","imageComponent","isImageComponent","_useState31","prevArrow","prevArrowElem","_useState32","modalClose","modalCloseOption","_useState33","downloadImages","showDownloadBtn","_useState34","showNavigationDots","navigationDots","_useState35","metadataTimeLocale","metadataLocale","_useState36","rtl","isRTL","_useState37","framework","frameworkID","_useState38","lightboxIdentifier","_useState39","fullScreen","imageFullScreen","_useState40","licenseKey","_useState41","showLoader","displayLoader","setDisplayLoader","_useState42","controlComponent","customControlComponent","_useState43","startingSlideIndex","setStartingIndex","_useState44","backgroundColor","setBackgroundColor","_useState45","setIconColor","_useState46","setTextColor","_useState47","showControlsBar","_useState48","useCoverMode","coverMode","_useState49","displayMetadata","displayImgMetadata","_useState50","showImgMetadataPanel","setShowImgMetadataPanel","_useState51","imgMetadata","setImgMetadata","_useState52","showThumbnails","setShowThumbnails","_useState53","animateThumbnails","animatedThumbnails","_useState54","imgAnimation","setImgAnimation","_useState55","arrowStyle","_useState56","setYTVideoCurrentlyPlaying","_useState57","isBrowserFullScreen","setIsBrowserFullScreen","_useState58","enableMagnifyingGlass","setMagnifyingGlass","_useState59","imagesLoaded","setImagesLoaded","imageRef","_useState60","zoomIdx","setZoomIdx","_useState61","imgContainHeight","setImgContainHeight","_useState62","imgContainWidth","setImgContainWidth","_useState63","isInit","setIsInit","open","previousValues","zoomReferences","videoReferences","btnRef","_useState64","videoElements","setVideoElements","_useState65","isLoading","setIsLoading","_useState66","touchStart","setTouchStart","_useState67","touchEnd","setTouchEnd","_useState68","mouseStartX","setMouseStartX","_useState69","setMouseStartY","minimumSwipeDistance","onTouchStart","e","targetTouches","clientX","onTouchMove","onTouchEnd","distance","isLeftSwipe","isRightSwipe","nextSlide","prevSlide","delta","onMouseDown","event","pageX","pageY","onMouseUp","differenceX","Math","abs","isLeftDragMotion","isRightDragMotion","createCustomThumbnailBorder","_useState70","_useEmblaCarousel","useEmblaCarousel","emblaRef","emblaApi","_useEmblaCarousel2","emblaThumbsRef","emblaThumbsApi","getLoaderThemeClass","theme","styles","night_loader","day_loader","scrollPrev","useCallback","scrollNext","variants","inactive","isImageCaption","_props$images$slideIn","caption","displayDownloadBtn","isVideo","handleWindowResize","window","innerWidth","shouldDisplayMagnifyingGlassIcon","getImageStyle","styleObject","shouldDisplaySlideshowIcon","undefined","navigationClick","index","initLoader","setCurrentSlide","checkModalClick","modals","document","getElementsByClassName","arr_modals","Array","from","i","clickInside","contains","target","closeModal","getRTLIndex","img_gallery_length","getMetadataTextColor","getElementById","openFullScreen","initFullScreenChangeEventListeners","exitFullScreenHandler","closeFullScreen","removeFullScreenChangeEventListeners","exitFullScreen","emblaSlideSelect","on","updateImageSlideshow","newDirection","displayArrows","showArrows","newIndex","loaded","getImageCaption","getArrowStyle","dark_icon","light_icon","getIconStyle","dark_header_icon","light_header_icon","scrollTo","dispatchOpenEvent","onOpen","dispatchCloseEvent","onClose","dispatchNextImgEvent","onNext","dispatchPrevImgEvent","onPrev","focus","openModal","reInit","selectedScrollSnap","setItemLoaded","map","img","_extends","setImagesItemLoaded","resetMedia","slide_index","resetVideo","resetImage","initImgMetadataPanel","initSlide","newSlideIndex","wrap_slide_index","setThumbnailStartIndex","thumbnailSwipeOptionConfig","openModalWithSlideNum","reactSwipeOptionConfig","saveImage","original","saveAs","src","playSlideshow","stopSlideshow","getEmbedIndex","elems","iframe_index","item","getEmblaClass","embla__slide_grid","imgfade","embla__slide","embla__slide_selected","pause","pauseVideo","lightboxjs_elem","querySelectorAll","iframe_elem_index","iframe","iframe_src","getNavigationDot","createElement","style","className","navigationDot","onClick","getThumbnailsOuterContainerStyle","getImageThumbnail","isNextJS","key","embla_thumbs__slide","thumbnailImgClass","thumbnail","getThumbnailImgSrcNext","getThumbnailImgSrc","alt","onLoad","border","handleError","onImgError","initMagnifyingGlass","resetTransform","thumbnailSrc","img_src","isArray","isAnimImageComponent","initWrapperClassname","classNameStr","imgWrapperClassName","lightboxjs","initStyling","getMetadataPanel","imgMetadataItem","element","metadataPanel","name","createDate","toString","height","isoData","fNumber","shutterSpeed","imageSlideElement","imageElem","imgElemClassname","lightbox_img","maxWidthFull","maxWidthWithoutMagnifier","contain_img","loading","onError","id","render","imgSlide","img_link","_images$index$src","coverImageInLightbox","getCloseIconBtnStyle","style_object","color","closeIconBtnStyle","closeIconBtnStyleKeys","Object","keys","keyName","style_obj","isPanningDisabled","getImageFilename","img_src_split","split","parseCreateDate","js_date","date","getDate","month","getMonth","year","getFullYear","time","toLocaleTimeString","getLightboxElem","isCustomEmbed","customEmbedElement","videoSlideElement","isPictureElement","elem_metadata","format","srcSet","error","img_target","individual_image_metadata","exifr","parse","then","exif","ISO","CreateDate","ExifImageHeight","ExifImageWidth","ShutterSpeedValue","imgMetadataItems","shouldDisplayMetadataPanel","picture","internalEngine","translate","toggleActive","isHTMLVideo","videoElem","videoOuterContainer","YouTube","videoId","videoID","el","iframeClassName","ytVideo","title","opts","playerVars","autoplay","onReady","videoElems","onPlay","onPause","onEnd","onStateChange","onPlaybackRateChange","onPlaybackQualityChange","htmlVideo","htmlVideoOuterContainer","cursorPointer","lightboxVideo","controls","videoSrc","customVideoContainer","embed","customElem","customEmbedContainer","initZoom","state","scale","regularImgPaneNodes","apply","_","Magnifier","magnifyWrapper","mgShowOverflow","TransformWrapper","onWheel","wheelEvent","disabled","panning","onZoom","onZoomStop","onTransformed","onPinchingStop","centerZoomedOut","initialScale","alignmentAnimation","sizeX","sizeY","TransformComponent","wrapperClass","react_transform_wrapper","contentClass","react_transform_component","wrapperStyle","maxWidth","margin","contentStyle","display","slideshow_img","lightboxImgClass","slideshow_img_metadata","initImageDimensions","getMetadataPanelStyle","ratio","naturalWidth","naturalHeight","addEventListener","removeEventListener","initEventListeners","isBrowser","removeEventListeners","removeOnSelectListener","setReducedMotion","mediaQuery","matches","checkAndInitReducedMotion","reducedMotionMediaQuery","_reducedMotionMediaQu","matchMedia","addListener","initPropsForControlIcons","initProps","useInterval","lightbox_elem","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","initRTLImages","imagesMetadataCopy","reverse","imagesRTLCopy","isMounted","updateImages","filterImages","filter","cover","children","img_gallery","originalImageAttr","img_elements","_loop","attr_val","getAttribute","classList","add","original_img_src","push","tagName","corresponding_img_item","img_alt","showAllImages","imgArray","imgs","k","img_elem","img_obj","dispatchSlideSelectEvents","prevIndex","onSelect","prevSlideIndex","previousScrollSnap","onReinit","handleResize","entry","rootNode","useResizeObserver","off","watchDrag","displayedImages","prevValue","prevImages","areObjectsEqual","object1","object2","every","p","imagesEqualToPrevious","images_copy","slice","prevImages_copy","image","prevImage","starting_index","console","imgClassName","img_index","assign","AnimateSharedLayout","AnimatePresence","initial","exitBeforeEnter","Portal","Div100vh","motion","div","slideshowAnimContainer","animate","exit","transition","onAnimationComplete","animEntered","_document$getElementB","prevFocusedElement","activeElement","lightboxContainer","tabIndex","role","iconsHeader","KeyHandler","keyValue","code","onKeyHandle","preventDefault","stopPropagation","zoomIn","ZoomIn","size","lightboxjs_icon","zoomOut","ZoomOut","Download","FullscreenExit","Fullscreen","InfoCircle","GridFill","Search","slideshowPlayBtn","PauseCircleFill","PlayCircleFill","closeIcon","mlAuto","closeButtonRounded","closeButton","XLg","next1","rightArrowClassname","prev1","prev1_metadata","leftArrowClassname","custom","slideshowInnerContainerThumbnails","embla","slideImageAndCaption","slideshowInnerContainer","hideControlsBar","slideshowInnerContainer_imgMetadata","metadata","metadataInnerContainer","imgMetadataCloseBtn","embla__viewport","embla__container_imgMetadata","embla__container","loader","thumbnailsOuterContainer","thumbnailsAndCaption","thumbnailsOuterContainer_metadata","imgTitleContainer","imgTitle","captionStyle","thumbnails","thumbnailsWithCaption","embla_thumbs","embla_thumbs__viewport","embla_thumbs__container","themes$1","defaultTheme$1","AnimImage","imageRoundedBorder","wrapperClassName","imgWrapperClass","lightboxImgClassName","imgClass","displayControls","setDisplayControls","_React$useState","React__default","getImage","initLightboxJS","plan_type","body","license_key","axios","post","response","licenseKeyValid","data","license_valid","warn","log"],"sources":["/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/lightbox.js-react/src/utility.js","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/lightbox.js-react/src/SlideshowLightbox.tsx","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/lightbox.js-react/src/AnimImage.tsx","/home/gazelle/_playground/_INTERVIEW_PREPATION/landing-page/node_modules/lightbox.js-react/src/index.tsx"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport const wrapNums = (minNum, maxNum, v) => {\r\n      if (minNum == maxNum) {\r\n        return minNum;\r\n      }\r\n      let rangeSize = maxNum - minNum;\r\n      return ((((v - minNum) % rangeSize) + rangeSize) % rangeSize) + minNum;\r\n};\r\n\r\nexport const shouldAutoplay = (elem) => {\r\n  // Autoplay for HTML5 Video elems set to true by default\r\n  // Autoplay is off by default for YouTube embeds\r\n\r\n  if (elem.type == 'yt' && elem.autoPlay != true && elem.autoPlay != 'true') {\r\n    return false\r\n  } else if (elem.autoPlay == false || elem.autoPlay == 'false') {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getVideoHeight = (elem) => {\r\n  if (elem.videoHeight) {\r\n    return elem.videoHeight\r\n  }\r\n  return \"200\"\r\n}\r\n\r\nexport const getVideoWidth = (elem) => {\r\n  if (elem.videoWidth) {\r\n    return elem.videoWidth\r\n  }\r\n  return \"900\"\r\n}\r\n\r\nexport const useInterval = (callback, timeDelay) => {\r\n      const savedCallbackRef = useRef();\r\n    \r\n      useEffect(() => {\r\n        savedCallbackRef.current = callback;\r\n      }, [callback]);\r\n    \r\n      useEffect(() => {\r\n        function tick() {\r\n          savedCallbackRef.current();\r\n        }\r\n        if (timeDelay !== null) {\r\n          // Set the interval\r\n          let intervalID = setInterval(tick, timeDelay);\r\n\r\n          // Remove the interval\r\n          return () => clearInterval(intervalID);\r\n        }\r\n      }, [timeDelay]);\r\n}\r\n\r\nexport const openFullScreen = (lightbox_elem) => {\r\n  if (lightbox_elem.requestFullscreen) {\r\n    lightbox_elem.requestFullscreen();\r\n  } \r\n\r\n  /* Safari */\r\n  else if (lightbox_elem.webkitRequestFullscreen) { \r\n    lightbox_elem.webkitRequestFullscreen();\r\n  } \r\n  \r\n  /* Internet Explorer */\r\n  else if (lightbox_elem.msRequestFullscreen) { \r\n    lightbox_elem.msRequestFullscreen();\r\n  }\r\n}\r\n\r\nexport const closeFullScreen = (document) => {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } \r\n\r\n  /* Safari */\r\n  else if (document.webkitExitFullscreen) { \r\n    document.webkitExitFullscreen();\r\n  } \r\n  \r\n  /* Internet Explorer */\r\n  else if (document.msExitFullscreen) { \r\n    document.msExitFullscreen();\r\n  }\r\n}\r\n\r\nexport const swipePower = (offset, velocity) => {\r\n    return Math.abs(offset) * velocity;\r\n};\r\n\r\nexport const getScale = (num, maxScale) => {\r\n  if (num < 1) {\r\n    return 1\r\n  }\r\n  else if (num > maxScale) {\r\n    return maxScale;\r\n  }\r\n  \r\n  return num;\r\n  \r\n}","import * as React from 'react'\r\nimport { useState, useEffect, useRef, useCallback, forwardRef, useImperativeHandle, ForwardRefExoticComponent } from 'react'\r\nimport { motion, AnimatePresence, AnimateSharedLayout, useIsPresent } from 'framer-motion'\r\nimport styles from './styles.module.css'\r\n\r\nimport {\r\n  wrapNums,\r\n  getVideoHeight,\r\n  getVideoWidth,\r\n  shouldAutoplay,\r\n  getScale,\r\n} from './utility'\r\nimport {\r\n  ZoomIn,\r\n  ZoomOut,\r\n  Fullscreen,\r\n  PlayCircleFill,\r\n  Search,\r\n  Download,\r\n  PauseCircleFill,\r\n  FullscreenExit,\r\n  InfoCircle,\r\n  XLg,\r\n  GridFill\r\n} from 'react-bootstrap-icons'\r\nimport { ReactNode } from 'react';\r\nimport Magnifier from 'react-magnifier'\r\nimport { Portal } from 'react-portal'\r\nimport { TransformWrapper, TransformComponent, ReactZoomPanPinchRef, } from 'react-zoom-pan-pinch'\r\nimport { saveAs } from 'file-saver'\r\nimport Div100vh from 'react-div-100vh'\r\nimport KeyHandler from 'react-key-handler'\r\nimport { useInterval } from 'usehooks-ts'\r\nimport useEmblaCarousel from 'embla-carousel-react'\r\nimport YouTube from 'react-youtube';\r\nimport useResizeObserver from '@react-hook/resize-observer';\r\nimport exifr from 'exifr'\r\n\r\nlet thumbnailVariants: any = {\r\n  visible: { opacity: 1, y: 0 },\r\n  hidden: { opacity: 0, y: 100 }\r\n}\r\n\r\nconst themes: any = {\r\n  day: {\r\n    background: 'white',\r\n    iconColor: 'black',\r\n    thumbnailBorder: 'solid transparent 2px',\r\n    textColor: 'black',\r\n    metadataTextColor: \"black\"\r\n  },\r\n  night: {\r\n    background: '#151515',\r\n    iconColor: '#626b77',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\r\n    textColor: 'silver',\r\n    metadataTextColor: \"white\"\r\n\r\n  },\r\n  lightbox: {\r\n    background: 'rgba(12, 12, 12, 0.93)',\r\n    iconColor: '#626b77',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\r\n    textColor: 'silver',\r\n    metadataTextColor: \"white\"\r\n\r\n  }\r\n}\r\n\r\n// const activeThumbnailBorder = 'solid rgba(107, 133, 206, 0.6) 2px'\r\nconst inactiveThumbnailBorder = 'solid transparent 2px'\r\n\r\nconst defaultTheme = 'night'\r\nconst mobileWidth = 768\r\n\r\nconst usePrevious = (value) => {\r\n  // custom hook to get previous prop value\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current;\r\n}\r\n\r\ninterface SlideItem {\r\n  src?: any,\r\n  original?: string,\r\n  type?: string,\r\n  alt?: string,\r\n  loaded?: boolean,\r\n  thumbnailSrc?: string,\r\n}\r\n\r\ninterface ImageElement {\r\n  src?: any,\r\n  alt?: string,\r\n  loaded?: boolean,\r\n}\r\n\r\ntype SlideshowLightboxHandle = {\r\n  children?: ReactNode;\r\n  reset: () => void;\r\n};\r\n\r\nexport interface SlideshowLightboxProps {\r\n  children?: ReactNode;\r\n  ref?: any;\r\n  thumbnailBorder?: string;\r\n  magnifyingGlass?: boolean;\r\n  backgroundColor?: string;\r\n  theme?: string;\r\n  iconColor?: any;\r\n  fullScreen?: boolean;\r\n  showControls?: boolean;\r\n  disableImageZoom?: boolean;\r\n  slideshowInterval?: number;\r\n  slideDuration?: number;\r\n  showThumbnails?: boolean;\r\n  open?: boolean;\r\n  displayMetadata?: boolean;\r\n  navigationDots?: boolean;\r\n  animateThumbnails?: boolean;\r\n  showFullScreenIcon?: boolean;\r\n  showThumbnailIcon?: boolean;\r\n  showSlideshowIcon?: boolean;\r\n  showMagnificationIcons?: boolean;\r\n  roundedImages?: boolean;\r\n  downloadImages?: boolean;\r\n  showNavigationDots?: boolean;\r\n  rtl?: boolean;\r\n  modalClose?: string;\r\n  framework?: string;\r\n  lightboxIdentifier?: string;\r\n  nextArrow?: any;\r\n  prevArrow?: any;\r\n  arrowStyle?: any;\r\n  showLoader?: boolean;\r\n  useCoverMode?: boolean;\r\n  rightArrowStyle?: any;\r\n  leftArrowStyle?: any;\r\n  imgAnimation?: string;\r\n  maxZoomScale?: number;\r\n  textColor?: string;\r\n  licenseKey?: string;\r\n  images?: any;\r\n  render?: any;\r\n  imageComponent?: boolean;\r\n  imgElemClassname?: string;\r\n  showArrows?: boolean;\r\n  showControlsBar?: boolean;\r\n  closeIconBtnStyle?: any;\r\n  controlComponent?: any;\r\n  lightboxImgClass?: string;\r\n  thumbnailImgClass?: string;\r\n  coverImageInLightbox?: boolean;\r\n  onOpen?: any;\r\n  onClose?: any;\r\n  onNext?: any;\r\n  onPrev?: any;\r\n  onImgError?: any;\r\n  className?: string;\r\n  imgWrapperClassName?: string;\r\n  imgClassName?: string;\r\n  startingSlideIndex?: number;\r\n  showAllImages?: any;\r\n  rightArrowClassname?: string;\r\n  leftArrowClassname?: string;\r\n  displayedImages?: any;\r\n  metadataTimeLocale?: string;\r\n  captionStyle?: any;\r\n}\r\n\r\nexport const SlideshowLightbox: React.FC<SlideshowLightboxProps> = React.forwardRef<SlideshowLightboxHandle, SlideshowLightboxProps>((props, ref) => {\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      reset() {\r\n        initImages(true, true)\r\n      }\r\n    })\r\n  )\r\n\r\n  const [[imgSlideIndex, direction], setImgSlideIndex] = useState([0, 0])\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [slideAnimDuration, setSlideAnimDuration] = useState(props.slideDuration ? props.slideDuration : 25)\r\n\r\n  const [isSlideshowPlaying, setIsSlideshowPlaying] = useState(false)\r\n\r\n  const [emblaReinitialized, setEmblaReinitialized] = useState(false)\r\n\r\n  const [images, setImages] = useState<SlideItem[]>([]);\r\n\r\n  const [previewImageElems, setPreviewImageElems] = useState<any[]>([]);\r\n\r\n  const slideIndex = wrapNums(0, images.length, imgSlideIndex)\r\n\r\n  const [reactSwipeOptions, setReactSwipeOptions] = useState({\r\n    loop: true,\r\n    startIndex: 0,\r\n    active: true,\r\n    duration: slideAnimDuration,\r\n    dragThreshold: 10,\r\n    skipSnaps: true\r\n  })\r\n\r\n  let initialThumbnailOptions: any = {\r\n    startIndex: 0,\r\n    containScroll: 'keepSnaps',\r\n    dragFree: true\r\n  }\r\n\r\n  const [width, setWidth] = useState(0)\r\n\r\n  const isMobile = width <= mobileWidth;\r\n\r\n  const [thumbnailSwipeOptions, setThumbnailSwipeOptions] = useState(initialThumbnailOptions)\r\n\r\n  const [carouselReady, setCarouselReady] = useState(false)\r\n\r\n  const [zoomedIn, setZoomedIn] = useState(false)\r\n\r\n\r\n  const [isDisplay, setIsDisplay] = useState(false)\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const [prevFocusedElem, setPrevFocusedElem] = useState<HTMLElement | null>(null)\r\n  const [animationEntered, setAnimationEntered] = useState(false)\r\n\r\n  const [magnifyingGlassFeature, _setMagnifyingGlassFeature] = useState(\r\n    props.magnifyingGlass ? props.magnifyingGlass : false\r\n  )\r\n\r\n  const [disableZoom, setDisableZoom] = useState(\r\n    props.disableImageZoom ? props.disableImageZoom : false\r\n  )\r\n\r\n  const [slideshowInterval, setSlideshowInterval] = useState(\r\n    props.slideshowInterval ? props.slideshowInterval : 1700\r\n  )\r\n\r\n  const [rightArrowStyle, setRightArrowStyle] = useState(\r\n    props.rightArrowStyle ? props.rightArrowStyle : {}\r\n  )\r\n\r\n  const [leftArrowStyle, setLeftArrowStyle] = useState(\r\n    props.leftArrowStyle ? props.leftArrowStyle : {}\r\n  )\r\n\r\n  const [maxScale, setMaxScale] = useState<number>(\r\n    props.maxZoomScale ? getScale(props.maxZoomScale, 24) : 8\r\n  )\r\n\r\n  const [isRounded, setIsRounded] = useState(\r\n    props.roundedImages ? props.roundedImages : false\r\n  )\r\n\r\n  const [showControls, setShowControls] = useState<boolean>(\r\n    props.showControls ? props.showControls : true\r\n  )\r\n\r\n  const [displayFullScreenIcon, setDisplayFullScreenIcon] = useState<boolean>(\r\n    props.showFullScreenIcon ? props.showFullScreenIcon : true\r\n  )\r\n\r\n  const [displayThumbnailIcon, setDisplayThumbnailIcon] = useState<boolean>(\r\n    props.showThumbnailIcon ? props.showThumbnailIcon : true\r\n  )\r\n\r\n  const [displaySlideshowIcon, setDisplaySlideshowIcon] = useState<boolean>(\r\n    props.showSlideshowIcon ? props.showSlideshowIcon : true\r\n  )\r\n\r\n  const [displayMagnificationIcons, setDisplayMagnificationIcons] = useState<boolean>(\r\n    props.showMagnificationIcons ? props.showMagnificationIcons : true\r\n  )\r\n\r\n  const [nextArrowElem, setNextArrowElem] = useState(\r\n    props.nextArrow ? props.nextArrow : null\r\n  )\r\n\r\n  const [isImageComponent, setImageComponent] = useState(\r\n    props.imageComponent ? props.imageComponent : null\r\n  )\r\n\r\n  const [prevArrowElem, setPrevArrowElem] = useState(\r\n    props.prevArrow ? props.prevArrow : null\r\n  )\r\n\r\n  const [modalCloseOption, setModalCloseOption] = useState(\r\n    props.modalClose ? props.modalClose : \"default\"\r\n  )\r\n\r\n  const [showDownloadBtn, setShowDownloadBtn] = useState(\r\n    props.downloadImages ? props.downloadImages : false\r\n  )\r\n\r\n  const [navigationDots, setNavigationDots] = useState(\r\n    props.showNavigationDots ? props.showNavigationDots : false\r\n  )\r\n\r\n  const [metadataLocale, setMetadataLocale] = useState(props.metadataTimeLocale ? props.metadataTimeLocale : \"en-US\")\r\n\r\n  const [isRTL, setIsRTL] = useState(props.rtl ? props.rtl : false)\r\n\r\n  const [frameworkID, setFrameworkID] = useState(\r\n    props.framework ? props.framework : ''\r\n  )\r\n  const [lightboxIdentifier, setLightboxIdentifier] = useState(\r\n    props.lightboxIdentifier ? props.lightboxIdentifier : false\r\n  )\r\n  const [imageFullScreen, setImageFullScreen] = useState(\r\n    props.fullScreen ? props.fullScreen : false\r\n  )\r\n  const [licenseKey, setLicenseKey] = useState(\r\n    props.licenseKey ? props.licenseKey : ''\r\n  )\r\n\r\n  const [displayLoader, setDisplayLoader] = useState(\r\n    props.showLoader ? props.showLoader : false\r\n  )\r\n\r\n  const [customControlComponent, setCustomControlComponent] = useState(\r\n    props.controlComponent ? props.controlComponent : false\r\n  )\r\n\r\n  const [startingIndex, setStartingIndex] = useState(\r\n    props.startingSlideIndex ? props.startingSlideIndex : 0\r\n  )\r\n\r\n  // Styling/theming\r\n  const [backgroundColor, setBackgroundColor] = useState(\r\n    props.backgroundColor\r\n      ? props.backgroundColor\r\n      : themes[defaultTheme].background\r\n  )\r\n  const [iconColor, setIconColor] = useState(\r\n    props.iconColor ? props.iconColor : null\r\n  )\r\n  const [textColor, setTextColor] = useState(\r\n    props.textColor ? props.textColor : themes[defaultTheme].textColor\r\n  )\r\n  const [showControlsBar, setShowControlsBar] = useState(\r\n    props.showControlsBar ? props.showControlsBar : true\r\n  )\r\n\r\n  const [coverMode, setCoverMode] = useState(\r\n    props.useCoverMode ? props.useCoverMode : false\r\n  )\r\n\r\n  const [displayImgMetadata, setDisplayImgMetadata] = useState(\r\n    props.displayMetadata ? props.displayMetadata : false\r\n  )\r\n\r\n  const [showImgMetadataPanel, setShowImgMetadataPanel] = useState(false)\r\n\r\n  const [imgMetadata, setImgMetadata] = useState({})\r\n\r\n  const [showThumbnails, setShowThumbnails] = useState(\r\n    props.showThumbnails ? props.showThumbnails : false\r\n  )\r\n  const [animatedThumbnails, setAnimatedThumbnails] = useState(\r\n    props.animateThumbnails ? props.animateThumbnails : true\r\n  )\r\n  const [imgAnimation, setImgAnimation] = useState(\r\n    props.imgAnimation ? props.imgAnimation : 'imgDrag'\r\n  )\r\n  const [arrowStyle, setArrowStyle] = useState(\r\n    props.arrowStyle ? props.arrowStyle : 'dark'\r\n  )\r\n\r\n  const [YTVideoCurrentlyPlaying, setYTVideoCurrentlyPlaying] = useState(false)\r\n\r\n\r\n  const [isBrowserFullScreen, setIsBrowserFullScreen] = useState(false)\r\n  const [enableMagnifyingGlass, setMagnifyingGlass] = useState(false)\r\n  const [imagesLoaded, setImagesLoaded] = useState(false)\r\n\r\n  const imageRef: React.RefObject<HTMLImageElement> = useRef(null)\r\n\r\n  const [zoomIdx, setZoomIdx] = useState(0)\r\n\r\n  const [imgContainHeight, setImgContainHeight] = useState(500)\r\n  const [imgContainWidth, setImgContainWidth] = useState(426)\r\n  const [isInit, setIsInit] = useState(false)\r\n\r\n  const { open } = props;\r\n  const previousValues: any = usePrevious({ open });\r\n\r\n  // Refs\r\n  const zoomReferences = useRef<(ReactZoomPanPinchRef | null)[]>([])\r\n  const videoReferences = useRef({})\r\n  const btnRef = useRef(null)\r\n  const [videoElements, setVideoElements] = useState({});\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  \r\n  const [touchStart, setTouchStart] = useState<any>(0)\r\n  const [touchEnd, setTouchEnd] = useState<any>(0)\r\n\r\n  const [mouseStartX, setMouseStartX] = useState<any>(0)\r\n  const [mouseStartY, setMouseStartY] = useState<any>(0)\r\n\r\n  const minimumSwipeDistance = 50 \r\n\r\n  const onTouchStart = (e) => {\r\n    setTouchEnd(null)\r\n    setTouchStart(e.targetTouches[0].clientX)\r\n  }\r\n\r\n  const onTouchMove = (e) => setTouchEnd(e.targetTouches[0].clientX)\r\n\r\n  const onTouchEnd = () => {\r\n    // only move to new image if imgAnimation set to \"fade\"\r\n    if (touchStart != null && touchEnd != null && imgAnimation == \"fade\") {\r\n      const distance: any = touchStart - touchEnd\r\n      if (distance != null) {\r\n        const isLeftSwipe = distance > minimumSwipeDistance\r\n        const isRightSwipe = distance < -minimumSwipeDistance\r\n        if (isLeftSwipe) {\r\n          nextSlide()\r\n        }\r\n        else if (isRightSwipe) {\r\n          prevSlide();\r\n        } \r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const delta = 6;\r\n\r\n  const onMouseDown = (event) => {\r\n    setMouseStartX(event.pageX)\r\n    setMouseStartY(event.pageY)\r\n  }\r\n\r\n  const onMouseUp = (event) => {\r\n\r\n    if (imgAnimation == \"fade\" && zoomedIn == false) {\r\n      const differenceX = Math.abs(event.pageX - mouseStartX);\r\n    \r\n      if (differenceX > delta) {\r\n        const isLeftDragMotion = (mouseStartX - event.pageX) > delta;\r\n        const isRightDragMotion = (mouseStartX - event.pageX) < -delta;\r\n        \r\n        if (isLeftDragMotion) {\r\n          nextSlide();\r\n        }\r\n        else if (isRightDragMotion) {\r\n          prevSlide()\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const createCustomThumbnailBorder = (): string | void => {\r\n    if (props.thumbnailBorder) {\r\n      return `solid ${props.thumbnailBorder} 2px`\r\n    }\r\n  }\r\n\r\n  const [thumbnailBorder, setThumbnailBorder] = useState(\r\n    props.thumbnailBorder\r\n      ? createCustomThumbnailBorder()\r\n      : themes[defaultTheme].thumbnailBorder\r\n  )\r\n\r\n  const [emblaRef, emblaApi] = useEmblaCarousel(reactSwipeOptions);\r\n  const [emblaThumbsRef, emblaThumbsApi] = useEmblaCarousel(thumbnailSwipeOptions)\r\n\r\n  const getLoaderThemeClass = () => {\r\n    if (props.theme) {\r\n      if (props.theme == 'night' || props.theme == 'lightbox') {\r\n        return styles.night_loader\r\n      } else if (props.theme == 'day') {\r\n        return styles.day_loader\r\n      }\r\n    }\r\n    return styles.night_loader\r\n  }\r\n\r\n  const scrollPrev = useCallback(() => {\r\n    if (emblaApi) { emblaApi.scrollPrev();\r\n    }\r\n\r\n  }, [emblaApi])\r\n\r\n  const scrollNext = useCallback(() => {\r\n    if (emblaApi) {\r\n      emblaApi.scrollNext() \r\n\r\n    }\r\n  }, [emblaApi])\r\n\r\n  const variants = {\r\n    active: {\r\n      opacity: 1,\r\n    },\r\n    inactive: {\r\n      opacity: 0,\r\n    }\r\n  }\r\n\r\n  const isImageCaption = () => {\r\n    if (props.images && props.images.length > 0) {\r\n      if (props.images[slideIndex]?.caption) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const displayDownloadBtn = () => {\r\n    if (isVideo(slideIndex)) {\r\n      return false\r\n    } else {\r\n      return showDownloadBtn\r\n    }\r\n  }\r\n\r\n  function handleWindowResize() {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  const shouldDisplayMagnifyingGlassIcon = () => {\r\n    if (isVideo(slideIndex)) {\r\n      return false\r\n    }\r\n    if (isMobile == true) {\r\n      return false\r\n    }\r\n    if (imageFullScreen == true) {\r\n      return false\r\n    }\r\n\r\n    if (magnifyingGlassFeature == true) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  const getImageStyle = () => {\r\n    let styleObject = {};\r\n    if (isImageCaption() && showThumbnails == false) {\r\n      styleObject[\"height\"] = \"77vh\"\r\n    }\r\n    if (isImageCaption() && showThumbnails) {\r\n      styleObject[\"height\"] = \"67vh\"\r\n    }\r\n    if (isRounded) {\r\n      styleObject[\"borderRadius\"] = \"20px\";\r\n    }\r\n    if (modalCloseOption == \"clickOutside\") {\r\n      styleObject[\"pointerEvents\"] = \"auto\"\r\n    }\r\n    if (isImageComponent && showThumbnails == false && !isMobile) {\r\n      styleObject[\"height\"] = \"85vh\";\r\n    }\r\n    return styleObject;\r\n  }\r\n\r\n  const shouldDisplaySlideshowIcon = () => {\r\n\r\n    if (props.showSlideshowIcon != undefined) {\r\n      return props.showSlideshowIcon;\r\n    }\r\n\r\n    if (images) {\r\n      if (images.length == 1) {\r\n        return false;\r\n      }\r\n    }\r\n    else if (props.images) {\r\n      if (props.images.length == 1) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const navigationClick = (index) => {\r\n    initLoader(index)\r\n    setCurrentSlide(index)\r\n  }\r\n\r\n  const checkModalClick = (e) => {\r\n    const modals = document.getElementsByClassName('imageModal')\r\n    let arr_modals = Array.from(modals)\r\n    for (let i = 0; i < arr_modals.length; i++) {\r\n      let elem = arr_modals[i]\r\n      let clickInside = elem.contains(e.target);\r\n\r\n      if (clickInside) {\r\n        return\r\n      }\r\n    }\r\n\r\n    closeModal()\r\n  }\r\n\r\n  const isZoomEnabled = () => {\r\n    if (disableZoom == true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const getRTLIndex = (img_gallery_length, i) => {\r\n    let index\r\n    if (i == 0) {\r\n      index = img_gallery_length - 1\r\n    } else if (i == img_gallery_length - 1) {\r\n      index = 0\r\n    } else {\r\n      index = img_gallery_length - i - 1\r\n    }\r\n    return index\r\n  }\r\n\r\n  const getMetadataTextColor = () => {\r\n    if (props.theme) {\r\n      if (themes[props.theme]) {\r\n        return themes[props.theme].metadataTextColor;\r\n      }\r\n    }\r\n    else {\r\n      return themes[defaultTheme].metadataTextColor;\r\n    }\r\n  }\r\n\r\n  const fullScreen = () => {\r\n    let lightbox = document.getElementById('slideshowAnim')\r\n    openFullScreen(lightbox)\r\n    setIsBrowserFullScreen(true)\r\n    initFullScreenChangeEventListeners()\r\n  }\r\n\r\n  const exitFullScreenHandler = () => {\r\n    //in full screen mode\r\n    if (\r\n      document['webkitIsFullScreen'] ||\r\n      document['mozFullScreen'] ||\r\n      document['msFullscreenElement']\r\n    ) {\r\n      setIsBrowserFullScreen(true)\r\n    } else {\r\n      if (isBrowserFullScreen) {\r\n        closeFullScreen(document)\r\n      }\r\n      removeFullScreenChangeEventListeners()\r\n      setIsBrowserFullScreen(false)\r\n    }\r\n  }\r\n\r\n  const exitFullScreen = () => {\r\n    closeFullScreen(document)\r\n    removeFullScreenChangeEventListeners()\r\n    setIsBrowserFullScreen(false)\r\n  }\r\n\r\n  const emblaSlideSelect = useCallback((emblaApi) => {    \r\n  }, [])\r\n\r\n  useEffect(() => {    \r\n    if (emblaApi) emblaApi.on('slidesInView', emblaSlideSelect)  }, \r\n  [emblaApi, emblaSlideSelect])\r\n\r\n\r\n  const updateImageSlideshow = (newDirection) => {\r\n    if (isRTL) {\r\n      scrollPrev()\r\n    } else {\r\n      scrollNext();\r\n    }\r\n\r\n    setImgSlideIndex([imgSlideIndex + newDirection, newDirection])\r\n    if (isRTL) {\r\n      setZoomIdx(zoomIdx - 1 < 0 ? images.length - 1 : zoomIdx - 1)\r\n    } else {\r\n      setZoomIdx(zoomIdx + 1 >= images.length ? 0 : zoomIdx + 1)\r\n    }\r\n  }\r\n\r\n  const displayArrows = () => {\r\n    if (props.showArrows == false) {\r\n      return false;\r\n    }\r\n    if (props.images) {\r\n      if (props.images.length == 1) {\r\n        return false;\r\n      }\r\n    }\r\n    else if (images.length == 1) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const initLoader = (newIndex) => {\r\n    if (props.showLoader && props.images) {\r\n      if (!isVideo(newIndex) && images[newIndex].loaded != true) {\r\n        setDisplayLoader(true)\r\n      } else if (\r\n        props.showLoader &&\r\n        props.images &&\r\n        images[newIndex]['loaded']\r\n      ) {\r\n        setDisplayLoader(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getImageCaption = (): string => {\r\n    if (props.images && props.images.length > 0) {\r\n      return props.images[slideIndex].caption;\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const getArrowStyle = (): string | void => {\r\n    if (arrowStyle == 'dark') {\r\n      return styles.dark_icon\r\n    } else if (arrowStyle == 'light') {\r\n      return styles.light_icon\r\n    }\r\n  }\r\n\r\n  const getIconStyle = (): string | undefined => {\r\n    if (arrowStyle == 'dark') {\r\n      return styles.dark_header_icon\r\n    }\r\n    else if (arrowStyle == 'light') {\r\n      return styles.light_header_icon\r\n    }\r\n  }\r\n\r\n  const setCurrentSlide = (newIndex) => {\r\n    let newDirection\r\n    if (newIndex > imgSlideIndex) {\r\n      newDirection = 1\r\n    } else {\r\n      newDirection = -1\r\n    }\r\n\r\n    setZoomIdx(newIndex)\r\n\r\n    setImgSlideIndex([newIndex, newDirection])\r\n\r\n    if (emblaApi) {\r\n      emblaApi.scrollTo(newIndex)\r\n    }\r\n  }\r\n\r\n  const dispatchOpenEvent = () => {\r\n    if (props.onOpen) {\r\n      props.onOpen(slideIndex, images[slideIndex]);\r\n    }\r\n  }\r\n\r\n  const dispatchCloseEvent = () => {\r\n    if (props.onClose) {\r\n      props.onClose(slideIndex)\r\n    }\r\n  }\r\n\r\n  const dispatchNextImgEvent = (newIndex) => {\r\n    if (props.onNext) {\r\n      props.onNext(newIndex, images[newIndex])\r\n    }\r\n  }\r\n\r\n  const dispatchPrevImgEvent = (newIndex) => {\r\n    if (props.onPrev) {\r\n      props.onPrev(newIndex, images[newIndex])\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    //reset zoom ref\r\n    setZoomIdx(0)\r\n\r\n    if (isBrowserFullScreen) {\r\n      exitFullScreen()\r\n    }\r\n\r\n    // ensure slideshow is paused\r\n    if (isSlideshowPlaying) {\r\n      setIsSlideshowPlaying(false)\r\n    }\r\n\r\n    setShowModal(false)\r\n    setIsOpen(false)\r\n    setCarouselReady(false)\r\n    setEmblaReinitialized(false)\r\n    if (prevFocusedElem) prevFocusedElem?.focus();\r\n  }\r\n\r\n  const openModal = (num) => {\r\n\r\n    if (emblaApi) {\r\n      emblaApi.reInit();\r\n      if (emblaThumbsApi) {\r\n        emblaThumbsApi?.scrollTo(emblaApi.selectedScrollSnap())\r\n      }\r\n    }\r\n    setImgSlideIndex([num, 1])\r\n    setShowModal(true)\r\n    setIsOpen(true)\r\n\r\n  }\r\n\r\n  const setItemLoaded = (index) => {\r\n    if (props.images) {\r\n\r\n      setImages(images =>\r\n        images.map((img, i) => index === i ? {\r\n          ...img,\r\n          loaded: true\r\n        } : img)\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  const setImagesItemLoaded = (index) => {\r\n    setImages(images =>\r\n      images.map((img, i) => index === i ? {\r\n        ...img,\r\n        loaded: true\r\n      } : img)\r\n    )\r\n  }\r\n\r\n  const resetMedia = (slide_index) => {\r\n    resetVideo(slide_index)\r\n    resetImage()\r\n  }\r\n\r\n  const initImgMetadataPanel = () => {\r\n    if (isMobile && showImgMetadataPanel) {\r\n      setShowImgMetadataPanel(false)\r\n    }\r\n  }\r\n\r\n  const initSlide = (newSlideIndex) => {\r\n    setImgSlideIndex([newSlideIndex, 1])\r\n    let wrap_slide_index = wrapNums(0, images.length, newSlideIndex)\r\n    setZoomIdx(wrap_slide_index)\r\n    initLoader(wrap_slide_index);\r\n\r\n    if (displayImgMetadata) {\r\n      initImgMetadataPanel();\r\n\r\n      if (!imgMetadata[wrap_slide_index]) {\r\n        setIsLoading(true)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    scrollNext();\r\n    initSlide(imgSlideIndex + 1);\r\n\r\n  }\r\n\r\n  const prevSlide = () => {\r\n    scrollPrev()\r\n    initSlide(imgSlideIndex - 1);\r\n  }\r\n\r\n  const setThumbnailStartIndex = (index) => {\r\n    let thumbnailSwipeOptionConfig = thumbnailSwipeOptions;\r\n    thumbnailSwipeOptionConfig.startIndex = index\r\n    setThumbnailSwipeOptions(thumbnailSwipeOptionConfig)\r\n  }\r\n\r\n  const openModalWithSlideNum = (index) => {\r\n\r\n    let reactSwipeOptionConfig = reactSwipeOptions\r\n    reactSwipeOptionConfig.startIndex = index\r\n    setReactSwipeOptions(reactSwipeOptionConfig)\r\n    setThumbnailStartIndex(index)\r\n    setZoomIdx(index)\r\n    openModal(index)\r\n  }\r\n\r\n  const saveImage = () => {\r\n    if (props.images.length > 0) {\r\n      if (props.images[slideIndex].original) {\r\n        saveAs(props.images[slideIndex].original, 'image.jpg')\r\n      } else {\r\n        saveAs(props.images[slideIndex]['src'], 'image.jpg')\r\n      }\r\n    } else {\r\n      if (images[slideIndex].src) {\r\n        saveAs(images[slideIndex].src!, 'image.jpeg')\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const playSlideshow = () => {\r\n    setMagnifyingGlass(false)\r\n    if (isRTL) {\r\n      updateImageSlideshow(-1)\r\n    } else {\r\n      updateImageSlideshow(1)\r\n    }\r\n    setIsSlideshowPlaying(true)\r\n  }\r\n\r\n  const stopSlideshow = () => {\r\n    setIsSlideshowPlaying(false)\r\n  }\r\n\r\n  const getEmbedIndex = (slide_index, elems) => {\r\n    if (props.images) {\r\n      let iframe_index = 0;\r\n\r\n      for (let i = 0; i < props.images.length; i++) {\r\n        let item = props.images[i];\r\n        if ((item.type == \"customVideoEmbed\" || item.type == \"yt\")) {\r\n          if (i == slide_index) {\r\n            iframe_index++;\r\n            break;\r\n          }\r\n          else {\r\n            iframe_index++;\r\n          }\r\n        }\r\n      }\r\n\r\n      return iframe_index - 1;\r\n    }\r\n  }\r\n\r\n  const getEmblaClass = (index) => {\r\n\r\n    if (displayImgMetadata) {\r\n      return styles.embla__slide_grid;\r\n    }\r\n\r\n    if (slideIndex == index && imgAnimation == \"fade\") {\r\n      return `${styles.imgfade} ${styles.embla__slide} ${styles.embla__slide_selected}`\r\n    }\r\n    else if (imgAnimation == \"fade\") {\r\n      return `${styles.imgfade} ${styles.embla__slide}`;\r\n    }\r\n    else {\r\n      return styles.embla__slide;\r\n    }\r\n  }\r\n\r\n  const resetVideo = (slide_index) => {\r\n    if (props.images) {\r\n      let elem = props.images[slide_index]\r\n      if (elem) {\r\n        if (elem.type == 'htmlVideo') {\r\n          videoReferences.current[slide_index].pause()\r\n        }\r\n        else if (elem.type == \"yt\") {\r\n          if (videoElements[slide_index]) {\r\n            videoElements[slide_index].target.pauseVideo()\r\n\r\n          }\r\n        }\r\n        else if (elem.type == \"customVideoEmbed\") {\r\n          let lightboxjs_elem = document.getElementById(\"lightboxContainer\");\r\n          let elems = lightboxjs_elem?.querySelectorAll(\"iframe\");\r\n          if (elems) {\r\n            let iframe_elem_index = getEmbedIndex(slide_index, elems);\r\n            if (iframe_elem_index != undefined && iframe_elem_index >= 0) {\r\n              // reset iframe\r\n              let iframe = elems[iframe_elem_index];\r\n              let iframe_src = iframe.src\r\n              iframe.src = iframe_src;\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const getNavigationDot = (index) => {\r\n    return (\r\n      <button style={slideIndex === index ? { backgroundColor: \"cornflowerblue\" } : {}}\r\n        className={`${styles.navigationDot} imageModal`} onClick={() => { navigationClick(index) }}></button>\r\n\r\n    )\r\n  }\r\n\r\n  const getThumbnailsOuterContainerStyle = () => {\r\n    let style = {};\r\n    if (isImageCaption()) {\r\n      if (showThumbnails) {\r\n        style[\"height\"] = \"21vh\" \r\n      }\r\n      else {\r\n        style[\"height\"] = \"12vh\"\r\n      }\r\n      style[\"backgroundColor\"] = backgroundColor;\r\n    }\r\n    return style;\r\n\r\n  }\r\n\r\n\r\n\r\n  const getImageThumbnail = (img, index, isNextJS) => {\r\n    return (\r\n      <div key={\"thumbnail_slide_\" + index} className={`${styles.embla_thumbs__slide}`}>\r\n\r\n        <img\r\n          className={`${props.thumbnailImgClass ? props.thumbnailImgClass : \"\"} ${styles.thumbnail} imageModal `}\r\n          src={isNextJS == true ? getThumbnailImgSrcNext(img, index) : getThumbnailImgSrc(img, index)}\r\n          alt={img.alt}\r\n          onLoad={() => setImagesLoaded(true)}\r\n          style={\r\n            slideIndex === index\r\n              ? { border: thumbnailBorder }\r\n              : { border: inactiveThumbnailBorder }\r\n          }\r\n          key={\"thumbnail_\" + index}\r\n          onClick={() => {\r\n            navigationClick(index);\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleError = (event, index) => {\r\n    if (props.onImgError) {\r\n      props.onImgError(event, images[slideIndex], index);\r\n\r\n    }\r\n  }\r\n\r\n  const resetImage = () => {\r\n    if (enableMagnifyingGlass) {\r\n      initMagnifyingGlass()\r\n    } else {\r\n      if (zoomReferences.current[zoomIdx] != null) {\r\n        zoomReferences.current[zoomIdx]!.resetTransform()\r\n      }\r\n    }\r\n  }\r\n\r\n  const getThumbnailImgSrc = (img, index) => {\r\n\r\n    if (props.images && props.images.length > 0) {\r\n      if (props.images[index].thumbnailSrc) {\r\n        return props.images[index].thumbnailSrc\r\n      }\r\n    }\r\n\r\n    if (isVideo(index) && img.thumbnail) {\r\n      return img.thumbnail\r\n    }\r\n    else {\r\n      return img.src\r\n    }\r\n  }\r\n\r\n  const getThumbnailImgSrcNext = (img, index) => {\r\n    if (img.thumbnailSrc) {\r\n      return img.thumbnailSrc\r\n    }\r\n\r\n    else if (isVideo(index)) {\r\n      return img.thumbnail\r\n    } else {\r\n      let img_src = img.src\r\n      if (\r\n        typeof img_src === 'object' &&\r\n        !Array.isArray(img_src) &&\r\n        img_src !== null\r\n      ) {\r\n        return img_src.src\r\n      } else {\r\n        return img_src\r\n      }\r\n    }\r\n  }\r\n\r\n  const isAnimImageComponent = () => {\r\n    if (images) {\r\n      if (images.length == 1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const initWrapperClassname = () => {\r\n\r\n    let classNameStr = \"\";\r\n    if (props.className) {\r\n      classNameStr += `${props.className} `\r\n    }\r\n    if (isAnimImageComponent()) {\r\n      if (props.imgWrapperClassName) {\r\n        classNameStr += `${props.imgWrapperClassName} `\r\n      }\r\n    }\r\n\r\n    classNameStr += `${styles.lightboxjs}`;\r\n\r\n    return classNameStr;\r\n  }\r\n\r\n  const initStyling = () => {\r\n    if (props.theme) {\r\n      if (themes[props.theme]) {\r\n        setBackgroundColor(themes[props.theme].background)\r\n        // setIconColor(themes[props.theme].iconColor)\r\n        // setThumbnailBorder(themes[props.theme].thumbnailBorder)\r\n        setTextColor(themes[props.theme].textColor)\r\n      }\r\n    }\r\n\r\n    if (props.fullScreen) {\r\n      if (props.fullScreen == true) {\r\n        setImgAnimation(props.imgAnimation && props.imgAnimation == \"imgDrag\" ? props.imgAnimation : \"fade\")\r\n        setIsRounded(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getMetadataPanel = () => {\r\n\r\n    let imgMetadataItem = imgMetadata[slideIndex];\r\n\r\n    if (imgMetadataItem) {\r\n      let element = <div className={styles.metadataPanel}>\r\n        <b>Filename</b>\r\n        {imgMetadataItem.name ? <p>{imgMetadataItem.name}</p> : null}\r\n\r\n        {imgMetadataItem.createDate ?\r\n          <div>\r\n            <b>Captured Time</b>\r\n            <p>{imgMetadataItem.createDate.toString()}</p>\r\n          </div>\r\n\r\n          : null}\r\n\r\n        {\r\n          imgMetadataItem.width && imgMetadataItem.height ?\r\n            <div>\r\n              <b>Resolution</b>\r\n              <p>{imgMetadataItem.width}*{imgMetadataItem.height}</p>\r\n            </div> : null\r\n        }\r\n\r\n        {imgMetadataItem.isoData || imgMetadataItem.fNumber || imgMetadataItem.shutterSpeed ?\r\n          <div>\r\n            <b>Image Details</b>\r\n            {\r\n              imgMetadataItem.isoData ? <span>ISO {imgMetadataItem.isoData}</span>\r\n                : null\r\n            }\r\n\r\n            {\r\n              imgMetadataItem.fNumber ? <span>f{imgMetadataItem.fNumber}</span> : null\r\n            }\r\n\r\n            {\r\n              imgMetadataItem.shutterSpeed ? <span>Shutter speed: {imgMetadataItem.shutterSpeed}</span> : null\r\n            }\r\n          </div> : null\r\n\r\n        }\r\n\r\n\r\n      </div>\r\n      return element;\r\n    }\r\n\r\n  }\r\n\r\n  const imageSlideElement = (index) => {\r\n    let imageElem;\r\n    if (!props.images) {\r\n      imageElem = (\r\n        <img\r\n          className={`imageModal ${props.imgElemClassname ? props.imgElemClassname : ''}\r\n        ${props.fullScreen\r\n              ? styles.lightbox_img\r\n              : styles.lightbox_img\r\n            } \r\n        ${enableMagnifyingGlass\r\n              ? styles.maxWidthFull\r\n              : styles.maxWidthWithoutMagnifier\r\n            }  ${styles.contain_img} `}\r\n          style={getImageStyle()}\r\n          ref={imageRef}\r\n          loading='lazy'\r\n          src={\r\n            images[index].original ? images[index].original : images[index].src\r\n          }\r\n          onError={(event) => {\r\n            handleError(event, index)\r\n          }}\r\n          onLoad={(img) => {\r\n            if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n\r\n            if (props.images) {\r\n              setItemLoaded(index)\r\n            } else {\r\n              setImagesItemLoaded(index)\r\n            }\r\n\r\n          }}\r\n          id='img'\r\n        />\r\n\r\n      )\r\n    } else if (props.images && props.render) {\r\n      imageElem = props.render.imgSlide(props.images[index])\r\n    } else {\r\n      let img_link\r\n\r\n      // check if object (Next.js local image imports are passed as objects with a src attribute)\r\n      if (props.images) {\r\n        if (\r\n          typeof images[index].src === 'object' &&\r\n          !Array.isArray(images[index].src) &&\r\n          images[index].src !== null\r\n        ) {\r\n          img_link = images[index].src?.src\r\n        } else if (props.coverImageInLightbox == true) {\r\n          img_link = images[index].src\r\n        } else {\r\n          img_link = images[index].src\r\n        }\r\n      }\r\n\r\n\r\n      imageElem = (\r\n        <img\r\n          className={`imageModal ${props.imgElemClassname ? props.imgElemClassname : ''}\r\n        ${props.fullScreen \r\n              ? styles.lightbox_img\r\n              : styles.lightbox_img\r\n            } \r\n        ${enableMagnifyingGlass\r\n              ? styles.maxWidthFull\r\n              : styles.maxWidthWithoutMagnifier\r\n            } ${styles.contain_img} `}\r\n          ref={imageRef}\r\n          loading='lazy'\r\n          style={getImageStyle()}\r\n          src={\r\n            images[index].original\r\n              ? images[index].original\r\n              : img_link\r\n          }\r\n          onError={(event) => {\r\n            handleError(event, index)\r\n          }}\r\n          onLoad={(img) => {\r\n            if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n\r\n            if (props.images) {\r\n              setItemLoaded(index)\r\n            } else {\r\n              setImagesItemLoaded(index)\r\n            }\r\n\r\n          }}\r\n          id='img'\r\n        />\r\n      )\r\n    }\r\n\r\n    return imageElem\r\n  }\r\n\r\n  const getCloseIconBtnStyle = () => {\r\n    let style_object = {}\r\n    if (iconColor) {\r\n      style_object =  { color: iconColor }\r\n    }\r\n    if (props.closeIconBtnStyle) {\r\n      let closeIconBtnStyleKeys = Object.keys(props.closeIconBtnStyle)\r\n      for (let i = 0; i < closeIconBtnStyleKeys.length; i++) {\r\n        let keyName = closeIconBtnStyleKeys[i];\r\n        let style_obj = props.closeIconBtnStyle[keyName]\r\n        style_object[keyName] =  style_obj;\r\n      }\r\n    }\r\n    return style_object;\r\n\r\n  }\r\n\r\n  const isPanningDisabled = () => {\r\n    if (isMobile && zoomedIn == false) {\r\n      return true;\r\n    }\r\n    if (isMobile && zoomedIn) {\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  const getImageFilename = (img_src) => {\r\n    let img_src_split = img_src.split(\"/\");\r\n    let name = img_src_split[img_src_split.length - 1];\r\n    return name;\r\n  }\r\n\r\n  const parseCreateDate = (js_date) => {\r\n\r\n    if (js_date) {\r\n      let date = js_date.getDate();\r\n      let month = js_date.getMonth() + 1;\r\n      let year = js_date.getFullYear();\r\n      let time = js_date.toLocaleTimeString(metadataLocale);\r\n\r\n      return '' + year + '-' + (month <= 9 ? '0' + month : month) + '-' + (date <= 9 ? '0' + date : date) + ` ${time}`;\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  const getLightboxElem = (index) => {\r\n    if (isCustomEmbed(index)) {\r\n      return customEmbedElement(index)\r\n    }\r\n    else if (isVideo(index)) {\r\n      return videoSlideElement(index)\r\n    }\r\n    else if (isPictureElement(index)) {\r\n      let elem_metadata = props.images[index][\"picture\"];\r\n      return <picture className={`imageModal \r\n      ${props.fullScreen\r\n          ?  styles.lightbox_img\r\n          : styles.lightbox_img\r\n        } \r\n      ${enableMagnifyingGlass\r\n          ? styles.maxWidthFull\r\n          : styles.maxWidthWithoutMagnifier\r\n        } `}>\r\n        {Object.keys(elem_metadata).map((format) => (\r\n          <source\r\n            type={format}\r\n            key={format}\r\n            srcSet={elem_metadata[format].srcSet}\r\n          />\r\n        ))}\r\n        <img src={elem_metadata['fallback']}\r\n          onError={(error) => {\r\n            handleError(error, index)\r\n          }}\r\n        />\r\n      </picture>\r\n    }\r\n    else {\r\n\r\n      if ((images && props.render) ||\r\n        frameworkID == 'next') {\r\n        return imageSlideElement(index);\r\n      }\r\n      else {\r\n        return <img\r\n          className={`imageModal ${props.imgElemClassname ? props.imgElemClassname : ''}\r\n          ${props.fullScreen\r\n              ? styles.lightbox_img\r\n              : styles.lightbox_img\r\n            } \r\n          ${enableMagnifyingGlass\r\n              ? styles.maxWidthFull\r\n              : styles.maxWidthWithoutMagnifier\r\n            } ${styles.contain_img} `}\r\n          ref={imageRef}\r\n          key={index}\r\n          loading='lazy'\r\n          style={getImageStyle()}\r\n          src={\r\n            images && images[index].original\r\n              ? images[index].original\r\n              : images[index].src\r\n          }\r\n          onLoad={(img: any) => {\r\n\r\n            if (displayImgMetadata) {\r\n\r\n              if (img) {\r\n                let img_target: any = img.target;\r\n                let individual_image_metadata = {};\r\n\r\n                // get filename\r\n                let name = getImageFilename(img_target.src)\r\n                individual_image_metadata[\"name\"] = name;\r\n\r\n                exifr.parse(img_target, true).then(exif => {\r\n                  if (exif) {\r\n                    let keys = [\"isoData\", \"createDate\", \"height\", \"width\", \"shutterSpeed\", \"fNumber\"];\r\n\r\n                    for (let i = 0; i < keys.length; i++) {\r\n                      let keyName = keys[i];\r\n                      switch (keyName) {\r\n                        case \"isoData\":\r\n                          if (exif.ISO) {\r\n                            individual_image_metadata[\"isoData\"] = exif.ISO;\r\n                          }\r\n                          break;\r\n                        case \"createDate\":\r\n                          if (exif.CreateDate) {\r\n                            individual_image_metadata[\"createDate\"] = parseCreateDate(exif.CreateDate);\r\n                          }\r\n                          break;\r\n                        case \"height\":\r\n                          if (exif.ExifImageHeight) {\r\n                            individual_image_metadata[\"height\"] = exif.ExifImageHeight;\r\n                          }\r\n                          break;\r\n                        case \"width\":\r\n                          if (exif.ExifImageWidth) {\r\n                            individual_image_metadata[\"width\"] = exif.ExifImageWidth;\r\n                          }\r\n                          break;\r\n                        case \"fNumber\":\r\n                          if (exif.fNumber) {\r\n                            individual_image_metadata[\"fNumber\"] = exif.fNumber;\r\n                          }\r\n                          break;\r\n                        case \"shutterSpeed\":\r\n                          if (exif.ShutterSpeedValue) {\r\n                            individual_image_metadata[\"shutterSpeed\"] = exif.ShutterSpeedValue;\r\n                          }\r\n                          break;\r\n                      }\r\n                    }\r\n\r\n                    let imgMetadataItems = imgMetadata;\r\n                    imgMetadataItems[index] = individual_image_metadata;\r\n                    setImgMetadata(imgMetadataItems);\r\n\r\n                    if (index == slideIndex) {\r\n                      setIsLoading(false)\r\n                    }\r\n                  }\r\n\r\n                }\r\n                )\r\n              }\r\n            }\r\n\r\n            if (index == slideIndex) {\r\n              setDisplayLoader(false)\r\n            }\r\n\r\n            if (props.images) {\r\n              setItemLoaded(index)\r\n            } else {\r\n              setImagesItemLoaded(index)\r\n            }\r\n          }}\r\n          id='img'\r\n        />\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  const isCustomEmbed = (index) => {\r\n\r\n    if (props.images) {\r\n      let elem = props.images[index]\r\n      if (elem) {\r\n        if (elem.type == 'customEmbed') {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const isVideo = (index) => {\r\n\r\n    if (props.images) {\r\n      let elem = props.images[index]\r\n      if (elem) {\r\n        if (elem.type == 'yt' || elem.type == 'htmlVideo' || elem.type == 'customVideoEmbed') {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const shouldDisplayMetadataPanel = () => {\r\n    if (isMobile) {\r\n      if (showImgMetadataPanel) {\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    else {\r\n      return displayImgMetadata;\r\n    }\r\n  }\r\n\r\n  const isPictureElement = (index) => {\r\n    if (props.images) {\r\n      let elem = props.images[index]\r\n      if (elem) {\r\n        if (elem.picture) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!emblaApi) return\r\n\r\n    if (imgAnimation == \"fade\") {\r\n      emblaApi.internalEngine().translate.toggleActive(false);\r\n    }\r\n\r\n  }, [\r\n    carouselReady, emblaApi\r\n  ])\r\n\r\n  const isHTMLVideo = (index) => {\r\n    if (props.images) {\r\n      if (props.images && props.images[index].type == 'htmlVideo') {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const videoSlideElement = (index) => {\r\n    let elem = props.images[index];\r\n    let videoElem;\r\n\r\n    if (elem.type == 'yt') {\r\n      videoElem = (\r\n        <div className={`${styles.videoOuterContainer} imageModal`}>\r\n          <YouTube\r\n            videoId={elem.videoID}\r\n            ref={(el) => (videoReferences.current[index] = el)}\r\n            iframeClassName={`${styles.ytVideo}`}\r\n            title='YouTube video player'\r\n            opts={{\r\n              height: getVideoHeight(elem),\r\n              width: getVideoWidth(elem),\r\n              playerVars: {\r\n                // https://developers.google.com/youtube/player_parameters\r\n                autoplay: shouldAutoplay(elem) ? 1 : 0,\r\n              }\r\n            }\r\n            }\r\n            // style={object}\r\n            // className={`${styles.ytVideo}`}\r\n            //loading={string}                     \r\n            onReady={(event) => {\r\n              let videoElems = videoElements; videoElems[index] = event; setVideoElements(videoElems);\r\n              if (index == slideIndex) {\r\n                setDisplayLoader(false)\r\n              }\r\n              setItemLoaded(index)\r\n            }}\r\n            onPlay={(event) => {\r\n              setYTVideoCurrentlyPlaying(true)\r\n            }}\r\n            onPause={(event) => {\r\n              setYTVideoCurrentlyPlaying(false)\r\n            }}\r\n            onEnd={(event) => { setYTVideoCurrentlyPlaying(false) }}\r\n            onError={(event) => { handleError(event, index) }}\r\n            onStateChange={(event) => { }}\r\n            onPlaybackRateChange={(event) => { }}\r\n            onPlaybackQualityChange={(event) => { }}\r\n          />\r\n        </div>\r\n      )\r\n    } else if (elem.type == 'htmlVideo') {\r\n      videoElem = (\r\n        <div\r\n          className={`${styles.htmlVideo} ${styles.htmlVideoOuterContainer} imageModal`}\r\n        >\r\n          <video\r\n            className={`${styles.cursorPointer} ${styles.lightboxVideo}`}\r\n            width={getVideoWidth(elem)}\r\n            ref={(el) => (videoReferences.current[index] = el)}\r\n            onPlay={() => {\r\n            }}\r\n            onError={(event) => {\r\n              handleError(event, index)\r\n            }}\r\n            height={getVideoHeight(elem)}\r\n            autoPlay={index == imgSlideIndex ? shouldAutoplay(elem) : false}\r\n            controls\r\n          >\r\n            <source\r\n              src={elem.videoSrc}\r\n              type='video/mp4'\r\n              onLoad={() => {\r\n                setItemLoaded(index)\r\n              }}\r\n            />\r\n          </video>\r\n        </div>\r\n      )\r\n    }\r\n    else if (elem.type == \"customVideoEmbed\") {\r\n      videoElem = (\r\n        <div className={`${styles.customVideoContainer} imageModal`}>\r\n          {elem.embed}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return videoElem\r\n  }\r\n\r\n  const customEmbedElement = (index) => {\r\n    let elem = props.images[index];\r\n    let customElem;\r\n\r\n    if (elem.type == \"customEmbed\") {\r\n      customElem = (\r\n        <div className={`${styles.customEmbedContainer} imageModal`}>\r\n          {elem.embed}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return customElem\r\n  }\r\n\r\n  const initZoom = (ref) => {\r\n    if (imgAnimation == \"fade\") {\r\n      if (ref.state.scale <= 1) {\r\n        setZoomedIn(false)\r\n      }\r\n      else {\r\n        setZoomedIn(true)\r\n      }\r\n    }\r\n    else {\r\n      if (ref.state.scale <= 1.65) {\r\n        setZoomedIn(false)\r\n      }\r\n      else {\r\n        setZoomedIn(true)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const regularImgPaneNodes = Array.apply(null, Array(images.length)).map(\r\n    (_, index) => {\r\n      return (\r\n        <div key={index}>\r\n          {\r\n            enableMagnifyingGlass == true ? (\r\n              <Magnifier\r\n                src={images[index].src!}\r\n                className={`${styles.magnifyWrapper} ${styles.lightbox_img}`}\r\n                height={imgContainHeight}\r\n                width={imgContainWidth}\r\n                mgShowOverflow={false}\r\n              />\r\n            )\r\n\r\n              : (\r\n                <div className={getEmblaClass(index)} onTouchStart={onTouchStart} onTouchMove={onTouchMove}\r\n                onTouchEnd={onTouchEnd} onMouseDown={onMouseDown} onMouseUp={onMouseUp}>\r\n\r\n                  <TransformWrapper\r\n                    ref={(el) => (zoomReferences.current[index] = el)}\r\n                    onWheel={(ref, wheelEvent) => {\r\n                      initZoom(ref)\r\n                    }}\r\n                    disabled={disableZoom}\r\n                    panning={{\r\n                      disabled: isPanningDisabled()\r\n                    }}\r\n\r\n                    key={index}\r\n                    onZoom={\r\n                      (ref, event) => {\r\n                        initZoom(ref)\r\n                      }\r\n                    }\r\n                    onZoomStop={(ref, event) => { initZoom(ref) }}\r\n                    onTransformed={\r\n                      (ref, event) => {\r\n                        initZoom(ref)\r\n                      }\r\n                    }\r\n                    onPinchingStop={(ref, event) => {\r\n                      initZoom(ref)\r\n                    }}\r\n                    centerZoomedOut={true}\r\n                    initialScale={1}\r\n                    maxScale={maxScale}\r\n                    alignmentAnimation={{ sizeX: 0, sizeY: 0 }}\r\n                  >\r\n                    <TransformComponent\r\n                      wrapperClass={styles.react_transform_wrapper}\r\n                      contentClass={styles.react_transform_component}\r\n                      wrapperStyle={{\r\n                        maxWidth: '100vw',\r\n                        height: '100vh',\r\n                        margin: 'auto'\r\n                      }}\r\n                      contentStyle={\r\n                        {\r\n                            maxWidth: '100vw',\r\n                            height: '100vh',\r\n                            margin: 'auto',\r\n                            display: 'grid'\r\n                          }\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <div\r\n                        className={`${props.fullScreen\r\n                          ? styles.slideshow_img\r\n                          : styles.slideshow_img\r\n                          } ${props.lightboxImgClass ? props.lightboxImgClass : \"\"}\r\n                      ${displayImgMetadata ? styles.slideshow_img_metadata : \"\"}\r\n                      `}\r\n                      >\r\n                        {getLightboxElem(index)}\r\n                      </div>\r\n                    </TransformComponent>\r\n                  </TransformWrapper>\r\n                </div>\r\n              )}\r\n        </div>\r\n      )\r\n    }\r\n  )\r\n\r\n  const initMagnifyingGlass = () => {\r\n    if (!enableMagnifyingGlass) {\r\n      initImageDimensions()\r\n    } else {\r\n      setImgAnimation('imgDrag')\r\n    }\r\n    setMagnifyingGlass(!enableMagnifyingGlass)\r\n  }\r\n\r\n  // const shouldShowImgMetadataPanel = () => {\r\n  //   if (displayImgMetadata && showImgMetadataPanel) {\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n  const getMetadataPanelStyle = () => {\r\n    let style_object = {}\r\n    if (isMobile && showImgMetadataPanel) {\r\n      style_object = { height: \"100vh\" }\r\n    }\r\n    style_object[\"color\"] = getMetadataTextColor()\r\n    return style_object;\r\n  }\r\n\r\n  const initImageDimensions = () => {\r\n    let img\r\n    if (imgSlideIndex == 0 || imgSlideIndex % images.length == 0) {\r\n      img = document.getElementById('img')\r\n    } else {\r\n      img = imageRef.current\r\n    }\r\n\r\n    var ratio = img.naturalWidth / img.naturalHeight\r\n    var width = img.height * ratio\r\n    var height = img.height\r\n    if (width > img.width) {\r\n      width = img.width\r\n      height = img.width / ratio\r\n    }\r\n\r\n    setImgContainHeight(height)\r\n    setImgContainWidth(width)\r\n  }\r\n\r\n  const initFullScreenChangeEventListeners = () => {\r\n    document.addEventListener('fullscreenchange', exitFullScreenHandler)\r\n    document.addEventListener('webkitfullscreenchange', exitFullScreenHandler)\r\n    document.addEventListener('MSFullscreenChange', exitFullScreenHandler)\r\n    document.addEventListener('mozfullscreenchange', exitFullScreenHandler)\r\n  }\r\n\r\n  const removeFullScreenChangeEventListeners = () => {\r\n    document.removeEventListener('fullscreenchange', exitFullScreenHandler)\r\n    document.removeEventListener(\r\n      'webkitfullscreenchange',\r\n      exitFullScreenHandler\r\n    )\r\n    document.removeEventListener('MSFullscreenChange', exitFullScreenHandler)\r\n    document.removeEventListener('mozfullscreenchange', exitFullScreenHandler)\r\n  }\r\n\r\n  const initEventListeners = () => {\r\n    if (isBrowser()) {\r\n      window.addEventListener('resize', handleWindowResize)\r\n    }\r\n  }\r\n\r\n  const removeEventListeners = () => {\r\n    removeOnSelectListener();\r\n    if (isBrowser()) {\r\n      window.removeEventListener('resize', handleWindowResize)\r\n    }\r\n  }\r\n\r\n  const setReducedMotion = (mediaQuery) => {\r\n    if (mediaQuery.matches) {\r\n      setImgAnimation('fade')\r\n    }\r\n  }\r\n\r\n  // Check if the user has a preference for reduced motion\r\n  // If so, the image animation transitions between slides in the slideshow will be adjusted\r\n  // to account for this\r\n  const checkAndInitReducedMotion = () => {\r\n    let reducedMotionMediaQuery: any = ''\r\n\r\n    if (isBrowser()) {\r\n      reducedMotionMediaQuery = window.matchMedia(\r\n        '(prefers-reduced-motion: reduce)'\r\n      )\r\n\r\n      if (!reducedMotionMediaQuery || reducedMotionMediaQuery.matches) {\r\n        setImgAnimation('fade')\r\n      }\r\n\r\n      if (reducedMotionMediaQuery?.addEventListener) {\r\n        reducedMotionMediaQuery.addEventListener('change', setReducedMotion(reducedMotionMediaQuery));\r\n      } \r\n      else {\r\n        reducedMotionMediaQuery.addListener(setReducedMotion(reducedMotionMediaQuery));\r\n      }\r\n\r\n    }\r\n\r\n    return reducedMotionMediaQuery\r\n  }\r\n\r\n  const initPropsForControlIcons = () => {\r\n    if (props.showFullScreenIcon != undefined) {\r\n      setDisplayFullScreenIcon(props.showFullScreenIcon)\r\n    }\r\n    if (props.showThumbnailIcon != undefined) {\r\n      setDisplayThumbnailIcon(props.showThumbnailIcon)\r\n    }\r\n\r\n    if (props.showSlideshowIcon != undefined) {\r\n      setDisplaySlideshowIcon(props.showSlideshowIcon)\r\n    }\r\n    if (props.showMagnificationIcons != undefined) {\r\n      setDisplayMagnificationIcons(props.showMagnificationIcons)\r\n    }\r\n  }\r\n\r\n  const initProps = () => {\r\n    if (props.showControls != undefined) {\r\n      setShowControls(props.showControls)\r\n      if (props.showControls == false) {\r\n        setDisplayMagnificationIcons(false)\r\n      }\r\n    }\r\n\r\n    initPropsForControlIcons()\r\n\r\n    if (props.disableImageZoom) {\r\n      setDisableZoom(props.disableImageZoom)\r\n    }\r\n\r\n    if (isBrowser()) {\r\n      setWidth(window.innerWidth)\r\n    }\r\n\r\n    // if (window.innerWidth <= mobileWidth) {\r\n    //   setImgAnimation('fade')\r\n    // }\r\n  }\r\n\r\n  // Slideshow feature; if isSlideshowPlaying set to true, then slideshow cycles through images\r\n  useInterval(\r\n    () => {\r\n      if (isRTL) {\r\n        updateImageSlideshow(-1)\r\n      } else {\r\n        updateImageSlideshow(1)\r\n      }\r\n    },\r\n\r\n    // Delay in milliseconds or null to stop it\r\n    isSlideshowPlaying ? slideshowInterval : null\r\n  )\r\n\r\n  const openFullScreen = (lightbox_elem) => {\r\n    if (lightbox_elem.requestFullscreen) {\r\n      lightbox_elem.requestFullscreen();\r\n    }\r\n\r\n    /* Safari */\r\n    else if (lightbox_elem.webkitRequestFullscreen) {\r\n      lightbox_elem.webkitRequestFullscreen();\r\n    }\r\n\r\n    /* Internet Explorer */\r\n    else if (lightbox_elem.msRequestFullscreen) {\r\n      lightbox_elem.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  const closeFullScreen = (document) => {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    }\r\n\r\n    /* Safari */\r\n    else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n\r\n    /* Internet Explorer */\r\n    else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    }\r\n  }\r\n\r\n  const isBrowser = () => typeof window !== \"undefined\"\r\n\r\n  const initRTLImages = () => {\r\n    // flip images array\r\n    let imagesMetadataCopy = props.images\r\n    imagesMetadataCopy.reverse()\r\n\r\n    setImages(imagesMetadataCopy)\r\n\r\n    if (images.length > 0) {\r\n      let imagesRTLCopy = images\r\n      imagesRTLCopy.reverse()\r\n      setImages(imagesRTLCopy)\r\n    }\r\n  }\r\n\r\n  const initImages = (isMounted, updateImages) => {\r\n\r\n    if (coverMode && props.images) {\r\n      if (props.coverImageInLightbox == false) {\r\n        let filterImages = props.images.filter((img) => img.cover != true)\r\n        setImages(filterImages)\r\n      } else {\r\n        setImages(props.images)\r\n      }\r\n    }\r\n\r\n    if (updateImages || !isInit) {\r\n      if (lightboxIdentifier && props.children) {\r\n\r\n        let img_gallery: NodeListOf<HTMLImageElement> = document.querySelectorAll(\r\n          `[data-lightboxjs=${lightboxIdentifier}]`\r\n        )\r\n        let originalImageAttr = false;\r\n\r\n        let img_elements: ImageElement[] = []\r\n        if (img_gallery.length > 0) {\r\n          for (let i = 0; i <= img_gallery.length - 1; i++) {\r\n            let img = img_gallery[i]\r\n\r\n            let attr_val = img.getAttribute('data-lightboxjs')\r\n            if (attr_val == lightboxIdentifier) {\r\n              img.addEventListener(\r\n                'click',\r\n                () => {\r\n                  let index\r\n\r\n                  if (isRTL) {\r\n                    index = getRTLIndex(img_gallery.length, i)\r\n                  } else {\r\n                    index = i\r\n                  }\r\n\r\n                  let reactSwipeOptionConfig = reactSwipeOptions\r\n                  reactSwipeOptionConfig.startIndex = index\r\n\r\n                  if (isMounted) setReactSwipeOptions(reactSwipeOptionConfig)\r\n                  setZoomIdx(index)\r\n                  openModal(index)\r\n                },\r\n                false\r\n              )\r\n              img.classList.add('cursor-pointer')\r\n\r\n              let original_img_src = img.getAttribute('data-lightboxjs-original')\r\n\r\n              if (original_img_src) {\r\n                img_elements.push({\r\n                  src: original_img_src,\r\n                  alt: img.alt,\r\n                  loaded: false\r\n                })\r\n                originalImageAttr = true;\r\n              }\r\n              else if (img.src) {\r\n                img_elements.push({\r\n                  src: img.src,\r\n                  alt: img.alt,\r\n                  loaded: false\r\n                })\r\n              } else if (img.tagName == 'DIV') {\r\n                let corresponding_img_item = props.images[i]\r\n                let img_src = corresponding_img_item.src\r\n                let img_alt = corresponding_img_item.alt\r\n                img_elements.push({\r\n                  src: img_src,\r\n                  alt: img_alt,\r\n                  loaded: false\r\n                })\r\n              }\r\n            }\r\n          }\r\n          if (isMounted && !coverMode) {\r\n            if (originalImageAttr) {\r\n              setImages(img_elements)\r\n\r\n            }\r\n            else if (props.showAllImages != true && props.framework != \"next\") {\r\n              setImages(img_elements)\r\n            }\r\n            else if (props.framework == \"next\" && !originalImageAttr) {\r\n              setImages(props.images)\r\n            }\r\n            else {\r\n              setImages(props.images)\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (props.images) {\r\n            setImages(props.images)\r\n          }\r\n        }\r\n      }\r\n      else if (lightboxIdentifier && props.images && !props.children) {\r\n        setImages(props.images)\r\n\r\n      }\r\n      else if (!lightboxIdentifier && props.images && !props.children) {\r\n        setImages(props.images)\r\n      }\r\n\r\n      // otherwise, if no lightbox identifier or custom render method\r\n      else if (!props.render) {\r\n        let imgArray: any = [];\r\n        // only one image\r\n        if (!Array.isArray(props.children)) {\r\n          imgArray.push(props.children);\r\n        }\r\n\r\n        // multiple images\r\n        else {\r\n          imgArray = props.children;\r\n        }\r\n\r\n        let imgs: ImageElement[] = []\r\n        for (let k = 0; k < imgArray.length; k++) {\r\n          let img_elem = imgArray[k]\r\n          let img_obj = {\r\n            src: img_elem.props.src,\r\n            alt: img_elem.props.alt,\r\n            loaded: false\r\n          }\r\n          imgs.push(img_obj)\r\n        }\r\n        if (isRTL) {\r\n          imgs.reverse()\r\n        }\r\n        if (isMounted) setImages(imgs)\r\n\r\n        setPreviewImageElems(imgArray)\r\n\r\n      } else {\r\n        if (isMounted) {\r\n          setImages(props.images);\r\n        }\r\n      }\r\n\r\n      if (isMounted) setIsInit(true)\r\n    }\r\n  }\r\n\r\n  const dispatchSlideSelectEvents = (newIndex, prevIndex) => {\r\n\r\n    if (newIndex == 0 && prevIndex == images.length - 1) {\r\n      dispatchNextImgEvent(newIndex)\r\n    }\r\n    else if (newIndex == images.length - 1 && prevIndex == 0) {\r\n      dispatchPrevImgEvent(newIndex)\r\n    }\r\n\r\n    else if (newIndex > prevIndex) {\r\n      dispatchNextImgEvent(newIndex)\r\n    }\r\n    else if (newIndex < prevIndex) {\r\n      dispatchPrevImgEvent(newIndex)\r\n    }\r\n\r\n  }\r\n\r\n  const onSelect = useCallback(() => {\r\n\r\n    if (!emblaApi) return\r\n\r\n    let newSlideIndex: any = emblaApi.selectedScrollSnap();\r\n    let prevSlideIndex: any = emblaApi.previousScrollSnap();\r\n\r\n    if (newSlideIndex != prevSlideIndex) {\r\n      initSlide(newSlideIndex);\r\n      resetMedia(prevSlideIndex);\r\n      dispatchSlideSelectEvents(newSlideIndex, prevSlideIndex)\r\n    }\r\n\r\n    if (emblaThumbsApi) {\r\n      emblaThumbsApi.scrollTo(emblaApi.selectedScrollSnap())\r\n    }\r\n\r\n  }, [emblaApi, emblaThumbsApi])\r\n\r\n  const onReinit = useCallback(() => {\r\n    if (!emblaApi) return\r\n    setEmblaReinitialized(true)\r\n\r\n  }, [emblaApi, emblaReinitialized])\r\n\r\n\r\n  const handleResize = (entry) => {\r\n    emblaApi?.reInit();\r\n  };\r\n\r\n  const rootNode = emblaApi?.rootNode() || null;\r\n\r\n  useResizeObserver(rootNode, handleResize);\r\n\r\n  const removeOnSelectListener = useCallback(() => {\r\n    if (emblaApi) emblaApi.off('select', onSelect)\r\n  }, [emblaApi, onSelect])\r\n\r\n  useEffect(() => {\r\n    if (emblaApi) {\r\n      if (zoomedIn) {\r\n        emblaApi.reInit({ watchDrag: false });\r\n      }\r\n      else {\r\n        emblaApi.reInit({ watchDrag: true });\r\n      }\r\n    }\r\n  }, [zoomedIn])\r\n\r\n  useEffect(() => {\r\n    if (displayImgMetadata) {\r\n      if (width != 0 && isMobile) {\r\n        setShowImgMetadataPanel(false)\r\n      }\r\n      else {\r\n        setShowImgMetadataPanel(true)\r\n      }\r\n    }\r\n\r\n  }, [width])\r\n\r\n  useEffect(() => {\r\n    if (!emblaApi) return\r\n\r\n    if (showModal) emblaApi.reInit()\r\n  }, [showModal, emblaApi])\r\n\r\n  useEffect(() => {\r\n    if (emblaApi) emblaApi.on('select', onSelect)\r\n    if (emblaApi) { }\r\n  }, [emblaApi, onSelect])\r\n\r\n  useEffect(() => {\r\n    if (emblaApi) emblaApi.on('reInit', onReinit)\r\n  }, [emblaApi, onReinit])\r\n\r\n  // update theme if prop changes\r\n  useEffect(() => {\r\n    initStyling();\r\n    if (props.iconColor) { setIconColor(props.iconColor) }\r\n    if (props.backgroundColor) { setBackgroundColor(props.backgroundColor) }\r\n\r\n  }, [props.theme, props.iconColor, props.backgroundColor]);\r\n\r\n  useEffect(() => {\r\n    initImages(true, true)\r\n  }, [props.images, props.displayedImages]);\r\n\r\n  const prevValue = usePrevious(open);\r\n  const prevImages: any = usePrevious(images);\r\n\r\n  const areObjectsEqual = (object1, object2) =>\r\n    typeof object1 === 'object' && object1 != null && typeof object2 === 'object' && object2 != null\r\n      && Object.keys(object1).length > 0\r\n      ? Object.keys(object1).length === Object.keys(object2).length\r\n      && Object.keys(object1).every(p => areObjectsEqual(object1[p], object2[p]))\r\n      : object1 === object2;\r\n\r\n  const imagesEqualToPrevious = (images: any) => {\r\n    if (images && prevImages) {\r\n      if ((images && images?.length) != (prevImages && prevImages?.length)) {\r\n        return false;\r\n      }\r\n\r\n      let imgArray;\r\n      if (images.length > prevImages) {\r\n        imgArray = images;\r\n      }\r\n      else {\r\n        imgArray = prevImages\r\n      }\r\n      for (let i = 0; i < imgArray.length; i++) {\r\n        let images_copy = images.slice(0);\r\n        let prevImages_copy = prevImages.slice(0);\r\n\r\n        let image = images_copy[i];\r\n        let prevImage = prevImages_copy[i];\r\n\r\n        if (image[\"loaded\"]) {\r\n          delete image[\"loaded\"]\r\n        }\r\n\r\n        if (prevImage[\"loaded\"]) {\r\n          delete prevImage[\"loaded\"]\r\n        }\r\n\r\n        if (!areObjectsEqual(image, prevImage)) {\r\n          return false;\r\n        }\r\n\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let starting_index = 0;\r\n    if (props.startingSlideIndex) {\r\n      starting_index = wrapNums(0, images.length, props.startingSlideIndex);\r\n      setStartingIndex(starting_index)\r\n    }\r\n\r\n    if ((props.open == true) && imagesEqualToPrevious(images) == false && props.startingSlideIndex) {\r\n      if (props.images) {\r\n        setImages(props.images)\r\n      }\r\n      openModalWithSlideNum(starting_index)\r\n    }\r\n\r\n    else if ((props.open && prevValue != true)) {\r\n      if (props.images) {\r\n        setImages(props.images)\r\n      }\r\n\r\n      setIsDisplay(true)\r\n\r\n      openModalWithSlideNum(starting_index)\r\n    }\r\n    else if (props.open == false) {\r\n      setIsDisplay(false)\r\n      closeModal()\r\n    }\r\n  }, [props.open, props.startingSlideIndex, images]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen == true) {\r\n      dispatchOpenEvent()\r\n    }\r\n    else {\r\n      dispatchCloseEvent()\r\n    }\r\n\r\n  }, [isOpen])\r\n\r\n  useEffect(() => {\r\n\r\n    // Error check\r\n    if (props.render) {\r\n      if (!props.images) {\r\n        console.error(\r\n          'Array of images must be passed to `SlideshowLightbox` (with the `images` prop) if using custom render method. '\r\n        )\r\n      }\r\n    }\r\n\r\n\r\n    let isMounted = true\r\n    if (isMounted) initProps()\r\n\r\n    if (coverMode && props.images) {\r\n      if (props.coverImageInLightbox == false) {\r\n        let filterImages = props.images.filter((img) => img.cover != true)\r\n        setImages(filterImages)\r\n      } else {\r\n        setImages(props.images)\r\n      }\r\n    }\r\n\r\n    if (isMounted) {\r\n      initEventListeners()\r\n    }\r\n\r\n    let reducedMotionMediaQuery = checkAndInitReducedMotion()\r\n\r\n    if (displayImgMetadata) {\r\n      setImgAnimation(\"fade\")\r\n    }\r\n\r\n    if (!isInit) {\r\n\r\n      initImages(isMounted, false);\r\n\r\n      if (props.images && isRTL == true) {\r\n        initRTLImages();\r\n      }\r\n    }\r\n\r\n    if (isMounted) initStyling()\r\n\r\n    return () => {\r\n      isMounted = false\r\n      removeEventListeners()\r\n      reducedMotionMediaQuery.removeEventListener(\r\n        'change',\r\n        reducedMotionMediaQuery\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  return <div className={`${initWrapperClassname()}`}>\r\n      {props.images && props.children && lightboxIdentifier == false\r\n        ? props.children\r\n        : null}\r\n\r\n      {props.images && lightboxIdentifier == false\r\n        ? props.images.map((elem, index) => (\r\n          <img\r\n            className={`${props.imgClassName ? props.imgClassName : ''\r\n              } ${styles.cursorPointer}`}\r\n\r\n            src={!isVideo(index) ? elem.src : elem.thumbnail}\r\n            onClick={() => {\r\n              let img_index\r\n\r\n              if (isRTL) {\r\n                img_index = getRTLIndex(props.images.length, index)\r\n              } else {\r\n                img_index = index\r\n              }\r\n\r\n              openModalWithSlideNum(img_index)\r\n            }}\r\n            key={index}\r\n          />\r\n        ))\r\n        : null}\r\n\r\n      {/* IF Lightbox identifier provided or props.images provided AND props.children */}\r\n      {lightboxIdentifier != false && props.children && coverMode == false\r\n        ? props.children\r\n        : null}\r\n\r\n      {(lightboxIdentifier == false && props.images) || coverMode == true\r\n        ? null\r\n        : // No lightbox identifier provided or no cover mode\r\n        previewImageElems\r\n          .filter((elem) => elem.type == 'img')\r\n          .map((elem, index) => (\r\n            <img\r\n              {...elem.props}\r\n              className={`${elem.props.className ? elem.props.className : ''\r\n                } ${styles.cursorPointer}`}\r\n              onClick={() => {\r\n                let img_index\r\n\r\n                if (isRTL) {\r\n                  img_index = getRTLIndex(previewImageElems.length, index)\r\n                } else {\r\n                  img_index = index\r\n                }\r\n\r\n                openModalWithSlideNum(img_index)\r\n              }}\r\n              key={index}\r\n            />\r\n          ))}\r\n\r\n      {coverMode ? props.children : false}\r\n\r\n      <AnimateSharedLayout type='crossfade'>\r\n\r\n        <AnimatePresence initial={false} exitBeforeEnter={true}>\r\n          {showModal !== false && (\r\n            <Portal>\r\n              <Div100vh>\r\n                <motion.div\r\n                  className={`${styles.slideshowAnimContainer}`}\r\n                  key='slideshowAnimContainer'\r\n                  id='slideshowAnim'\r\n                  style={{\r\n                    backgroundColor: backgroundColor,\r\n                  }}\r\n                  initial={\"inactive\"}\r\n                  variants={variants}\r\n                  animate={showModal ? \"active\" : \"inactive\"}\r\n                  exit={\"inactive\"}\r\n                  transition={\r\n                    { duration: \"0.3\" }\r\n                  }\r\n                  onAnimationComplete={() => {\r\n                    let animEntered = !animationEntered;\r\n                    setAnimationEntered(animEntered);\r\n\r\n                    if (animEntered == true) {\r\n                      let prevFocusedElement: any = document.activeElement;\r\n                      setPrevFocusedElem(prevFocusedElement)\r\n\r\n                      document.getElementById(\"lightboxContainer\")?.focus();\r\n                    }\r\n                    else {\r\n                      prevFocusedElem?.focus();\r\n                    }\r\n                    if (emblaApi) emblaApi.reInit()\r\n                  }}\r\n\r\n                >\r\n                  <div className={`${styles.lightboxContainer}`} id=\"lightboxContainer\" tabIndex={-1} role=\"dialog\"\r\n                    onClick={(e) => { if (modalCloseOption == \"clickOutside\") { checkModalClick(e) } }}>\r\n                    <section\r\n                      className={`${styles.iconsHeader} ${iconColor ? '' : getIconStyle()\r\n                        } imageModal`}\r\n                      style={{ color: iconColor }}\r\n                    >\r\n                      <KeyHandler\r\n                        keyValue={'ArrowLeft'}\r\n                        code={'37'}\r\n                        onKeyHandle={() => {\r\n                          prevSlide()\r\n                        }}\r\n                      />\r\n                      <KeyHandler\r\n                        keyValue={'ArrowRight'}\r\n                        code={'39'}\r\n                        onKeyHandle={() => {\r\n                          nextSlide()\r\n                        }}\r\n                      />\r\n                      <KeyHandler\r\n                        keyValue={'Escape'}\r\n                        code={'27'}\r\n                        onKeyHandle={(event) => {\r\n                          event.preventDefault();\r\n                          event.stopPropagation();\r\n                          if (!isBrowserFullScreen) {\r\n                            closeModal()\r\n                          }\r\n                        }}\r\n                      />\r\n\r\n                      {/* Support for Internet Explorer and Edge key values  */}\r\n                      <KeyHandler\r\n                        keyValue={'Left'}\r\n                        code={'37'}\r\n                        onKeyHandle={() => {\r\n                          prevSlide()\r\n                        }}\r\n                      />\r\n                      <KeyHandler\r\n                        keyValue={'Right'}\r\n                        code={'39'}\r\n                        onKeyHandle={() => {\r\n                          nextSlide()\r\n                        }}\r\n                      />\r\n                      <KeyHandler\r\n                        keyValue={'Esc'}\r\n                        code={'27'}\r\n                        onKeyHandle={(event) => {\r\n                          event.preventDefault();\r\n                          event.stopPropagation();\r\n                          if (!isBrowserFullScreen) {\r\n                            closeModal()\r\n                          }\r\n                        }}\r\n                      />\r\n\r\n                      {showControls == true && (\r\n                        <div className={`${styles.controls}`}>\r\n                          {disableZoom ||\r\n                            displayMagnificationIcons == false ? null :\r\n                            <motion.div>\r\n                              <button onClick={() => {\r\n                                if (enableMagnifyingGlass) {\r\n                                  initMagnifyingGlass()\r\n                                }\r\n                                if (zoomReferences.current[zoomIdx] != null) {\r\n                                  zoomReferences.current[zoomIdx]!.zoomIn()\r\n                                }\r\n                                setZoomedIn(true)\r\n                              }}>\r\n                                <ZoomIn\r\n                                  size={24}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                />\r\n                              </button>\r\n\r\n                            </motion.div>\r\n                          }\r\n\r\n                          {disableZoom ||\r\n                            displayMagnificationIcons == false ? null :\r\n                            <motion.div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  zoomReferences.current[zoomIdx]!.zoomOut();\r\n                                  let scale = zoomReferences.current[zoomIdx]!.state.scale;\r\n\r\n                                  if (scale == 1 || scale == 1.65) {\r\n                                    setZoomedIn(false)\r\n                                  }\r\n\r\n                                }}>\r\n                                <ZoomOut\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n\r\n                                />\r\n                              </button>\r\n\r\n                            </motion.div>\r\n                          }\r\n\r\n                          {displayDownloadBtn() ? (\r\n                            <button\r\n                              onClick={() => {\r\n                                saveImage()\r\n                              }}>\r\n                              <Download\r\n                                size={24}\r\n                                className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                  }`}\r\n                                style={iconColor ? { color: iconColor } : {}}\r\n                                color={iconColor ? iconColor : undefined}\r\n\r\n                              />\r\n                            </button>\r\n\r\n                          ) : null}\r\n\r\n                          {displayFullScreenIcon ? (\r\n                            isBrowserFullScreen ? (\r\n                              <motion.div>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    isBrowserFullScreen\r\n                                      ? exitFullScreen()\r\n                                      : fullScreen()\r\n                                  }}>\r\n                                  <FullscreenExit\r\n                                    size={24}\r\n                                    className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                      }`}\r\n                                    style={iconColor ? { color: iconColor } : {}}\r\n                                    color={iconColor ? iconColor : undefined}\r\n\r\n                                  />\r\n                                </button>\r\n\r\n                              </motion.div>\r\n                            ) : (\r\n                              <motion.div>\r\n                                <button onClick={() => {\r\n                                  isBrowserFullScreen\r\n                                    ? exitFullScreen()\r\n                                    : fullScreen()\r\n                                }}>\r\n                                  <Fullscreen\r\n                                    size={24}\r\n                                    className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                      }`}\r\n                                    style={iconColor ? { color: iconColor } : {}}\r\n                                    color={iconColor ? iconColor : undefined}\r\n\r\n                                  />\r\n                                </button>\r\n\r\n                              </motion.div>\r\n                            )\r\n                          ) : null}\r\n\r\n                          {isMobile && displayImgMetadata ?\r\n                            <motion.div>\r\n                              <button onClick={() => {\r\n                                setShowImgMetadataPanel(!showImgMetadataPanel)\r\n                                setDisplayLoader(false)\r\n                              }}>\r\n                                <InfoCircle\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                />\r\n                              </button>\r\n\r\n                            </motion.div> : null}\r\n\r\n                          {displayThumbnailIcon ? (\r\n                            <motion.div>\r\n                              <button\r\n                                onClick={() => {\r\n                                  setShowThumbnails(!showThumbnails)\r\n                                }}>\r\n                                <GridFill\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n\r\n                                />\r\n                              </button>\r\n\r\n                            </motion.div>\r\n                          ) : null}\r\n\r\n                          {shouldDisplayMagnifyingGlassIcon() ? (\r\n                            <motion.div>\r\n                              <button\r\n                                onClick={() => initMagnifyingGlass()}\r\n                              >\r\n                                <Search\r\n                                  size={24}\r\n                                  className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                    }`}\r\n                                  style={iconColor ? { color: iconColor } : {}}\r\n                                  color={iconColor ? iconColor : undefined}\r\n                                />\r\n                              </button>\r\n\r\n                            </motion.div>\r\n                          ) : null}\r\n\r\n                          {shouldDisplaySlideshowIcon() ? (\r\n                            <motion.div className={styles.slideshowPlayBtn}>\r\n                              {isSlideshowPlaying ? (\r\n                                <button onClick={() => {\r\n                                  isSlideshowPlaying\r\n                                    ? stopSlideshow()\r\n                                    : playSlideshow()\r\n                                }}>\r\n                                  <PauseCircleFill\r\n                                    size={24}\r\n                                    className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                      }`}\r\n                                    style={iconColor ? { color: iconColor } : {}}\r\n                                    color={iconColor ? iconColor : undefined}\r\n\r\n                                  />\r\n                                </button>\r\n\r\n                              ) : (\r\n                                <button onClick={() => {\r\n                                  isSlideshowPlaying\r\n                                    ? stopSlideshow()\r\n                                    : playSlideshow()\r\n                                }}>\r\n                                  <PlayCircleFill\r\n                                    size={24}\r\n                                    className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                      }`}\r\n                                    style={iconColor ? { color: iconColor } : {}}\r\n                                    color={iconColor ? iconColor : undefined}\r\n\r\n                                  />\r\n                                </button>\r\n\r\n                              )}\r\n                            </motion.div>\r\n                          ) : null}\r\n\r\n                          {customControlComponent ? <motion.div>{customControlComponent}</motion.div> : null}\r\n                        </div>\r\n                      )}\r\n                      <motion.div className={`${styles.closeIcon} ${props.showControls == false ? styles.mlAuto : \"\"}`}>\r\n                        <button id=\"closeBtn\" className={`${props.showControlsBar == false && props.showControls == false \r\n                        ? styles.closeButtonRounded : styles.closeButton}`}\r\n\r\n                          onClick={() => {\r\n                            closeModal()\r\n                          }}>\r\n                          <XLg\r\n                            id=\"closeIcon\"\r\n                            size={24}\r\n                            className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                              }`}\r\n                            color={iconColor ? iconColor : undefined}\r\n                            style={getCloseIconBtnStyle()}\r\n                          />\r\n                        </button>\r\n\r\n                      </motion.div>\r\n                    </section>\r\n                    {displayArrows() ?\r\n\r\n                      <div>\r\n                        <div\r\n                          className={\r\n                            rightArrowStyle\r\n                              ? `${styles.next1} ${getArrowStyle()} imageModal`\r\n                              : \"imageModal\"\r\n                          }\r\n                          style={rightArrowStyle}\r\n                          onClick={() => {\r\n                            nextSlide()\r\n                          }}\r\n                        >\r\n                          {nextArrowElem ? nextArrowElem :\r\n                            <span className={`${props.rightArrowClassname ? props.rightArrowClassname : \"\"}`}>&#10095;</span>\r\n                          }\r\n                        </div>\r\n                        <div\r\n                          className={\r\n                            leftArrowStyle\r\n                              ? `${styles.prev1} ${getArrowStyle()} imageModal ${displayImgMetadata ? styles.prev1_metadata : \"\"}`\r\n                              : \"imageModal\"\r\n                          }\r\n                          style={leftArrowStyle}\r\n                          onClick={() => {\r\n                            prevSlide()\r\n                          }}\r\n                        >\r\n                          {prevArrowElem ? prevArrowElem :\r\n                            <span className={`${props.leftArrowClassname ? props.leftArrowClassname : \"\"}`}>&#10094;</span>\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      : null\r\n                    }\r\n\r\n                    <AnimatePresence initial={false} custom={direction}>\r\n\r\n                      <div\r\n                        className={`${styles.slideshowInnerContainerThumbnails\r\n                          } ${styles.embla} ${isImageCaption() && showControlsBar == true ? styles.slideImageAndCaption : ''\r\n                          } \r\n                          ${styles.slideshowInnerContainer}\r\n                          ${props.showControlsBar == false || props.fullScreen\r\n                            ? styles.hideControlsBar\r\n                            : \"\"\r\n                          }\r\n                          ${displayImgMetadata ? styles.slideshowInnerContainer_imgMetadata : \"\"}  `}>\r\n\r\n                        {shouldDisplayMetadataPanel() ?\r\n                          <div className={styles.metadata}\r\n                            style={getMetadataPanelStyle()}>\r\n                            {isLoading ? null :\r\n                              <div className={styles.metadataInnerContainer}>\r\n\r\n                                {getMetadataPanel()}\r\n\r\n                                {isMobile && showImgMetadataPanel ?\r\n                                  <button className={styles.imgMetadataCloseBtn}\r\n                                    onClick={() => {\r\n                                      setShowImgMetadataPanel(false)\r\n                                    }}>\r\n                                    <XLg\r\n                                      size={24}\r\n                                      className={`${styles.lightboxjs_icon} ${iconColor ? '' : getIconStyle()\r\n                                        }`}\r\n                                      color={iconColor ? iconColor : undefined}\r\n                                      style={iconColor ? { color: iconColor } : {}}\r\n                                    />\r\n                                  </button> : null\r\n                                }\r\n                              </div>\r\n                            }\r\n\r\n\r\n                          </div>\r\n                          : null}\r\n                        <div className={`${styles.embla__viewport} \r\n                            ${displayImgMetadata ? styles.embla__container_imgMetadata : \"\"}`}\r\n                          ref={showModal ? emblaRef : null}>\r\n                          <div className={`\r\n                          ${imgAnimation == \"fade\" ? styles.imgfade : \"\"} \r\n                          ${styles.embla__container}\r\n                            ${displayImgMetadata ? styles.embla__container_imgMetadata : \"\"}`}>\r\n\r\n                            {regularImgPaneNodes}\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {displayLoader == true && !isHTMLVideo(slideIndex) ? (\r\n                        <span\r\n                          key='loader'\r\n                          className={`${styles.loader\r\n                            } ${getLoaderThemeClass()}`}\r\n                        ></span>\r\n                      ) : null}\r\n                    </AnimatePresence>\r\n\r\n                    <div\r\n                      className={`${styles.thumbnailsOuterContainer} ${isImageCaption() ? styles.thumbnailsAndCaption : ''}\r\n                      ${displayImgMetadata ? styles.thumbnailsOuterContainer_metadata : \"\"} `}\r\n                      style={\r\n                        getThumbnailsOuterContainerStyle()\r\n                      }\r\n                    >\r\n                      {isImageCaption() ? (\r\n                        <div className={`${styles.imgTitleContainer} imageModal`}>\r\n                          <p\r\n                            className={`${styles.imgTitle}`}\r\n                            key={'imgCaption' + slideIndex}\r\n                            style={\r\n                              props.captionStyle\r\n                                ? props.captionStyle\r\n                                : { color: textColor }\r\n                            }\r\n                          >\r\n                            {getImageCaption()}\r\n                          </p>\r\n                        </div>\r\n                      ) : null}\r\n\r\n                      <AnimatePresence initial={animatedThumbnails}>\r\n                        {showThumbnails !== false && navigationDots !== true && (\r\n                          <motion.div\r\n                            initial={'hidden'}\r\n                            exit={'hidden'}\r\n                            animate={'visible'}\r\n                            style={\r\n                              imagesLoaded ? {} : { display: 'displayHidden' }\r\n                            }\r\n                            transition={{\r\n                              type: 'spring',\r\n                              duration: 0.75\r\n                            }}\r\n                            variants={thumbnailVariants}\r\n                            className={`${styles.thumbnails} ${isImageCaption()\r\n                              ? styles.thumbnailsWithCaption\r\n                              : ''\r\n                              }`}\r\n                          >\r\n                            <div className={`${styles.embla_thumbs} ${styles.thumbnails}`}>\r\n                              <div className={styles.embla_thumbs__viewport} ref={emblaThumbsRef}>\r\n                                <div className={styles.embla_thumbs__container}>\r\n                                  {frameworkID == 'next' &&\r\n                                    props.images\r\n                                    ? props.images.map((img, index) => (\r\n                                      getImageThumbnail(img, index, true)\r\n                                    ))\r\n                                    : // Not Next.js\r\n                                    images.map((img, index) => (\r\n                                      getImageThumbnail(img, index, false)\r\n                                    ))}\r\n\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                          </motion.div>\r\n                        )}\r\n\r\n                        {showThumbnails !== true && navigationDots !== false && (\r\n                          <motion.div\r\n                            initial={'hidden'}\r\n                            exit={'hidden'}\r\n                            animate={'visible'}\r\n                            style={\r\n                              imagesLoaded ? {} : { display: 'displayHidden' }\r\n                            }\r\n                            transition={{\r\n                              type: 'spring',\r\n                              duration: 0.75\r\n                            }}\r\n                            variants={thumbnailVariants}\r\n                            className={`${styles.thumbnails} ${isImageCaption()\r\n                              ? styles.thumbnailsWithCaption\r\n                              : ''\r\n                              }`}\r\n                          >\r\n                            <div className={`${styles.embla_thumbs} ${styles.thumbnails}`}>\r\n                              <div className={styles.embla_thumbs__viewport} ref={emblaThumbsRef}>\r\n                                <div className={`${styles.navigationDots} ${styles.embla_thumbs__container} imageModal\r\n                                `}>\r\n                                  {frameworkID == 'next' &&\r\n                                    props.images\r\n                                    ? props.images.map((img, index) => (\r\n                                      getNavigationDot(index)\r\n                                    ))\r\n                                    : // Not Next.js\r\n                                    images.map((img, index) => (\r\n                                      getNavigationDot(index)\r\n                                    ))}\r\n\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </motion.div>\r\n                        )}\r\n                      </AnimatePresence>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              </Div100vh>\r\n            </Portal>\r\n          )}\r\n        </AnimatePresence>\r\n      </AnimateSharedLayout>\r\n    </div>\r\n}\r\n)","import React, { useEffect, useState, useRef } from 'react'\r\nimport { SlideshowLightbox } from './SlideshowLightbox';\r\nimport { ReactNode } from 'react';\r\n\r\nconst themes: any = {\r\n  day: {\r\n    background: 'white',\r\n    iconColor: 'black',\r\n    thumbnailBorder: 'solid transparent 2px',\r\n    textColor: 'black'\r\n  },\r\n  night: {\r\n    background: '#151515',\r\n    iconColor: 'silver',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206)  2px',\r\n    textColor: 'silver'\r\n  },\r\n  lightbox: {\r\n    background: 'rgba(12, 12, 12, 0.93)',\r\n    iconColor: 'silver',\r\n    thumbnailBorder: 'solid rgb(107, 133, 206) 2px',\r\n    textColor: 'silver'\r\n  }\r\n}\r\nconst defaultTheme = \"lightbox\";\r\n\r\n\r\nexport interface AnimImageProps {\r\n  children?: ReactNode;\r\n  ref?: any;\r\n  fullScreen?: boolean;\r\n  backgroundColor?: string;\r\n  theme?: string;\r\n  iconColor?: any;\r\n  modalClose?: string;\r\n  image?: any;\r\n  roundedImages?: boolean;\r\n  disableImageZoom?: boolean;\r\n  showFullScreenIcon?: boolean;\r\n  showMagnificationIcons?: boolean;\r\n  showControls?: boolean;\r\n  downloadImages?: boolean;\r\n  rtl?: boolean;\r\n  width?: number | null;\r\n  height?: number | null;\r\n  framework?: string;\r\n  lightboxIdentifier?: string;\r\n  images?: any;\r\n  lightboxImgClass?: string;\r\n  wrapperClassName?: string;\r\n  className?: string;\r\n}\r\n\r\n\r\nexport const AnimImage: React.FC<AnimImageProps> = (props) => {\r\n  const [backgroundColor, setBackgroundColor] = useState(props.backgroundColor ? props.backgroundColor : themes[defaultTheme].background);\r\n\r\n  const [iconColor, setIconColor] = useState(props.iconColor ? props.iconColor : themes[defaultTheme].iconColor);\r\n\r\n  const [fullScreen, setFullScreen] = useState(props.fullScreen ? props.fullScreen : false);\r\n\r\n  const [modalCloseOption, setModalCloseOption] = useState(props.modalClose ? props.modalClose : \"default\");\r\n\r\n  const [disableZoom, setDisableZoom] = useState(\r\n    props.disableImageZoom ? props.disableImageZoom : false\r\n  )\r\n\r\n  const [imageRoundedBorder, setImageRoundedBorder] = useState(\r\n    props.roundedImages ? props.roundedImages : false\r\n  )\r\n\r\n  const [displayFullScreenIcon, setDisplayFullScreenIcon] = useState(\r\n    props.showFullScreenIcon ? props.showFullScreenIcon : true\r\n  )\r\n\r\n  const [className, setClassName] = useState(\r\n    props.className ? props.className : \"\"\r\n  )\r\n\r\n  const [imgWrapperClass, setImgWrapperClass] = useState(\r\n    props.wrapperClassName ? props.wrapperClassName : \"\"\r\n  )\r\n\r\n  const [width, setWidth] = useState(\r\n    props.width ? props.width : null\r\n  )\r\n\r\n  const [height, setHeight] = useState(\r\n    props.height ? props.height : null\r\n  )\r\n\r\n  const [lightboxImgClassName, setLightboxImgClassName] = useState(\r\n    props.lightboxImgClass ? props.lightboxImgClass : \"\"\r\n  )\r\n  \r\n  const [imgClass, setImgClass] = useState(\r\n    props.className ? props.className : \"\"\r\n  )\r\n\r\n  const [displayMagnificationIcons, setDisplayMagnificationIcons] = useState(\r\n    props.showMagnificationIcons ? props.showMagnificationIcons : true\r\n  )\r\n\r\n  const [displayControls, setDisplayControls] = useState(\r\n    props.showControls ? props.showControls : true\r\n  )\r\n\r\n  const [showDownloadBtn, setShowDownloadBtn] = useState(\r\n    props.downloadImages ? props.downloadImages : false\r\n  )\r\n\r\n  const [isRTL, setIsRTL] = useState(props.rtl ? props.rtl : false)\r\n\r\n  const [lightboxIdentifier, setLightboxIdentifier] = useState(\r\n    props.lightboxIdentifier ? props.lightboxIdentifier : \"\"\r\n  )\r\n\r\n  const [frameworkID, setFrameworkID] = useState(\r\n    props.framework ? props.framework : ''\r\n  )\r\n\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  // const [displayLoader, setDisplayLoader] = useState(\r\n  //   props.showLoader ? props.showLoader : false\r\n  // )\r\n\r\n  // const [textColor, setTextColor] = useState(\r\n  //   props.textColor ? props.textColor : themes[defaultTheme].textColor\r\n  // )\r\n\r\n\r\n  const [state, setState] = React.useState();\r\n\r\n  const initProps = () => {\r\n    if (props.showControls != undefined) {\r\n      setDisplayControls(props.showControls)\r\n      setDisableZoom(props.showControls)\r\n      \r\n      if (props.showControls == false) {\r\n          setDisplayMagnificationIcons(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.theme) {\r\n      if (themes[props.theme]) {\r\n        setBackgroundColor(themes[props.theme].background);\r\n        setIconColor(themes[props.theme].iconColor);\r\n      }\r\n    }\r\n\r\n    if (props.image && images.length == 0 && frameworkID == \"next\") {\r\n      let imgs: any = [];\r\n      imgs.push(props.image) \r\n      setImages(imgs);\r\n    }\r\n    else {\r\n      setImages(null)\r\n    }\r\n\r\n    return () => {\r\n    };\r\n\r\n  }, [state]);\r\n\r\n  const getImage = () => {\r\n    if (frameworkID == \"next\" && props.children != undefined) {\r\n      return props.children\r\n    }\r\n    else if (frameworkID != \"next\") {\r\n      return (\r\n        <img src={props.image? props.image.src : \"\"} \r\n        alt={props.image.title} \r\n        width={width != null ? width : \"100%\"} \r\n        height={height != null ? height : \"100%\"} \r\n        className={`${className}`} />\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let isMounted = true\r\n    if (isMounted) initProps()\r\n\r\n    return () => {\r\n      isMounted = false\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <SlideshowLightbox\r\n      showSlideshowIcon={false} \r\n      showThumbnails={false}\r\n      backgroundColor={backgroundColor} \r\n      iconColor={iconColor} \r\n      theme={props.theme} \r\n      lightboxIdentifier={lightboxIdentifier}\r\n      fullScreen={fullScreen} \r\n      showMagnificationIcons={displayMagnificationIcons}\r\n      showFullScreenIcon={displayFullScreenIcon} \r\n      downloadImages={showDownloadBtn}\r\n      roundedImages={imageRoundedBorder} \r\n      disableImageZoom={disableZoom}\r\n      showArrows={false} \r\n      showThumbnailIcon={false} \r\n      showControls={displayControls}\r\n      modalClose={modalCloseOption}\r\n      lightboxImgClass={lightboxImgClassName}\r\n      imgClassName={imgClass}\r\n      imageComponent={true}\r\n      framework={frameworkID}\r\n      // className={className}\r\n      imgWrapperClassName={imgWrapperClass}\r\n      images={images}>\r\n\r\n      {getImage()}\r\n    \r\n    </SlideshowLightbox>\r\n  );\r\n\r\n}","import * as React from 'react'\nimport { useState, useEffect, useRef } from 'react'\nimport { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion'\nimport styles from './styles.module.css'\nimport axios from \"axios\";\nimport {\n  wrapNums,\n  getVideoHeight,\n  getVideoWidth,\n  shouldAutoplay,\n  openFullScreen,\n  closeFullScreen,\n} from './utility'\nimport {SlideshowLightbox} from \"./SlideshowLightbox\"\nimport {AnimImage} from \"./AnimImage\"\n\nexport const initLightboxJS = (licenseKey: string, plan_type: string) => {\n  var body = {\n    license_key: licenseKey,\n    plan_type: plan_type,\n  };\n\n  axios.post('https://lightboxjs-server.herokuapp.com/license', body)\n    .then(function (response) {\n\n      let licenseKeyValid = response.data.license_valid;\n\n      if (!licenseKeyValid) {\n        console.warn(\"Lightbox.js: Invalid license key specified, a valid license key must be provided.\")\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n};\n\n\nexport { SlideshowLightbox, AnimImage as Image }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}